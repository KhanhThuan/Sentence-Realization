Test Cumulative: 0
Making Dependency Statistics ....
243606
0
168292
corpara: 9738
Run Indexing => 

Train Sentence: 499
Number of candidates => 1559
tmpDirPrefix: ZMERT.
Processed the following args array:
  -r ref -rps 4 -p params.txt -m BLEU 4 closest -maxIt 15 -ipi 20 -cmd SDecoder_cmd.bat -decOut nbest.out -dcfg SDecoder_cfg.txt -N 10 -v 1 -seed 12341234 

----------------------------------------------------
Initializing...
----------------------------------------------------

Random number generator initialized using seed: 12341234

$$ decoderCommand: java SimpleDecoder SDecoder_cfg.txt nbest.out
Number of sentences: 1559
Number of documents: 1
Optimizing BLEU
docSubsetInfo: {0, 1, 1, 1, 1, 0, 0}
Number of features: 3
Feature names: {"RD","Word Model","Headword Model"}

c    Default value	Optimizable?	Crit. val. range	Rand. val. range
1     0.1000		 Yes		 [-Infinity,Infinity]		 [-1.0,1.0]
2     0.2000		 Yes		 [-Infinity,Infinity]		 [-1.0,1.0]
3     -0.1000		 Yes		 [-Infinity,Infinity]		 [-1.0,1.0]

Weight vector normalization method: none.

----------------------------------------------------

----------------------------------------------------
Z-MERT run started @ Tue Oct 27 10:40:43 JST 2015
----------------------------------------------------

Initial lambda[]: {0.1, 0.2, -0.1}

--- Starting Z-MERT iteration #1 @ Tue Oct 27 10:40:43 JST 2015 ---
Decoding using initial weight vector {0.1, 0.2, -0.1}
Running decoder...
...finished decoding @ Tue Oct 27 10:40:43 JST 2015
Reading candidate translations from iterations 1-1
(and computing BLEU sufficient statistics for previously unseen candidates)
  Progress: Size: 2152
...+...+...+...+...500
            ...+...+...+...+...1000
            ...+...+...+...+...1500
            ..
Warning: attempt to delete ZMERT.temp.stats.unknown was unsuccessful!
Warning: attempt to delete ZMERT.temp.stats.mergedKnown was unsuccessful!
Processed 2152 distinct candidates (about 1 per sentence):
newCandidatesAdded[it=1] = 2152 (about 1 per sentence)

+++ Optimization of lambda[j=1] starting @ Tue Oct 27 10:40:44 JST 2015 +++
Initial lambda[j=1]: {0.1, 0.2, -0.1}
(Initial BLEU[j=1]: 0.8056185401733513)

Final lambda[j=1]: {0.1, 1.3718524407732561E14, 2.7936244446123076E12}
(Final BLEU[j=1]: 0.9209453711204938)

+++ Optimization of lambda[j=2] starting @ Tue Oct 27 10:40:44 JST 2015 +++
Initial lambda[j=2]: {-0.017230818545013626, -0.6577977590753961, 0.46016061237234096}
(Initial BLEU[j=2]: 0.8690002782258329)

Final lambda[j=2]: {-0.017230818545013626, 6.991546350521361E13, 1.4237425873796E12}
(Final BLEU[j=2]: 0.9209453711204938)

+++ Optimization of lambda[j=3] starting @ Tue Oct 27 10:40:44 JST 2015 +++
Initial lambda[j=3]: {-0.5203200954373215, 0.09518077619965482, -0.059473491599185246}
(Initial BLEU[j=3]: 0.7851254119906101)

Final lambda[j=3]: {-0.5203200954373215, 1.4177735988354112E15, 2.8871201989846266E13}
(Final BLEU[j=3]: 0.9209453711204938)

+++ Optimization of lambda[j=4] starting @ Tue Oct 27 10:40:44 JST 2015 +++
Initial lambda[j=4]: {-0.6919952429797738, -0.8743327758402839, -0.6393613928095458}
(Initial BLEU[j=4]: 0.7751149616262536)

Final lambda[j=4]: {-0.6919952429797738, 1.8855558234639485E15, 3.839700003462395E13}
(Final BLEU[j=4]: 0.9209453711204938)

+++ Optimization of lambda[j=5] starting @ Tue Oct 27 10:40:44 JST 2015 +++
Initial lambda[j=5]: {0.7737957524668755, 0.6493837878144797, -0.5778133794884044}
(Initial BLEU[j=5]: 0.8065391828238504)

Final lambda[j=5]: {0.7737957524668755, 1.061533591680953E15, 2.1616947900463047E13}
(Final BLEU[j=5]: 0.9209453711204938)

+++ Optimization of lambda[j=6] starting @ Tue Oct 27 10:40:44 JST 2015 +++
Initial lambda[j=6]: {0.2815800420089276, 0.15636862697411513, 0.6539535776649275}
(Initial BLEU[j=6]: 0.9029640813832387)

Final lambda[j=6]: {2.3094998515375762E-14, 0.15636862697411513, 0.4506319453537006}
(Final BLEU[j=6]: 0.9201085835136863)

+++ Optimization of lambda[j=7] starting @ Tue Oct 27 10:40:44 JST 2015 +++
Initial lambda[j=7]: {0.32669861662639876, 0.009245077311689887, -0.9330111163449395}
(Initial BLEU[j=7]: 0.8059216178037217)

Final lambda[j=7]: {0.32669861662639876, 4.481822946183623E14, 9.126733051474176E12}
(Final BLEU[j=7]: 0.9209453711204938)

+++ Optimization of lambda[j=8] starting @ Tue Oct 27 10:40:45 JST 2015 +++
Initial lambda[j=8]: {0.6515944996339995, 0.08804197789590318, 0.9795005730080566}
(Initial BLEU[j=8]: 0.9020653178462187)

Final lambda[j=8]: {3.4583499866963055E-14, 0.08804197789590318, 0.635582370679554}
(Final BLEU[j=8]: 0.9197954616090633)

+++ Optimization of lambda[j=9] starting @ Tue Oct 27 10:40:45 JST 2015 +++
Initial lambda[j=9]: {-0.004553671263154424, 0.8593774528720801, -0.01427276865927607}
(Initial BLEU[j=9]: 0.7899094208663184)

Final lambda[j=9]: {-0.004553671263154424, 1.8476895696542938E13, 3.762592830826845E11}
(Final BLEU[j=9]: 0.9209453711204938)

+++ Optimization of lambda[j=10] starting @ Tue Oct 27 10:40:45 JST 2015 +++
Initial lambda[j=10]: {0.5053771649119221, -0.5713556223455967, -0.8739358729264859}
(Initial BLEU[j=10]: 0.7998511191498399)

Final lambda[j=10]: {0.5053771649119221, 6.9330289719682E14, 1.4118341133696004E13}
(Final BLEU[j=10]: 0.9209453711204938)

+++ Optimization of lambda[j=11] starting @ Tue Oct 27 10:40:45 JST 2015 +++
Initial lambda[j=11]: {0.7980226618452084, -0.399205792984231, -0.5477913765324938}
(Initial BLEU[j=11]: 0.7998511191498399)

Final lambda[j=11]: {0.7980226618452084, 1.0947693364438152E15, 2.2293757017517047E13}
(Final BLEU[j=11]: 0.9209453711204938)

+++ Optimization of lambda[j=12] starting @ Tue Oct 27 10:40:45 JST 2015 +++
Initial lambda[j=12]: {0.594593012768021, -0.2974935383022126, 0.3275255626321376}
(Initial BLEU[j=12]: 0.8982029519176593)

Final lambda[j=12]: {0.594593012768021, 8.156938758293702E14, 1.661069664030156E13}
(Final BLEU[j=12]: 0.9209453711204938)

+++ Optimization of lambda[j=13] starting @ Tue Oct 27 10:40:45 JST 2015 +++
Initial lambda[j=13]: {-0.21052430917292875, 0.981831267676273, -0.8102868749874037}
(Initial BLEU[j=13]: 0.7865053975460816)

Final lambda[j=13]: {-0.21052430917292875, 8.54219700410006E14, 1.7395136255650197E13}
(Final BLEU[j=13]: 0.9209453711204938)

+++ Optimization of lambda[j=14] starting @ Tue Oct 27 10:40:45 JST 2015 +++
Initial lambda[j=14]: {0.03753776574773382, 0.00790321507749736, 0.03620028521108054}
(Initial BLEU[j=14]: 0.9029640813832387)

Final lambda[j=14]: {1.278511442429795E-15, 0.00790321507749736, 0.02356355738980116}
(Final BLEU[j=14]: 0.9201085835136863)

+++ Optimization of lambda[j=15] starting @ Tue Oct 27 10:40:45 JST 2015 +++
Initial lambda[j=15]: {0.009954244141451962, 0.02541025170060851, 0.593645578752771}
(Initial BLEU[j=15]: 0.9020029796185671)

Final lambda[j=15]: {0.009954244141451962, 1.365575411962905E13, 2.780842230290176E11}
(Final BLEU[j=15]: 0.9209453711204938)

+++ Optimization of lambda[j=16] starting @ Tue Oct 27 10:40:45 JST 2015 +++
Initial lambda[j=16]: {0.6576106932759427, 0.17534745529356877, -0.6893751690924723}
(Initial BLEU[j=16]: 0.8056185401733513)

Final lambda[j=16]: {0.6576106932759427, 9.021448346493095E14, 1.837117325530054E13}
(Final BLEU[j=16]: 0.9209453711204938)

+++ Optimization of lambda[j=17] starting @ Tue Oct 27 10:40:45 JST 2015 +++
Initial lambda[j=17]: {-0.871756060640207, -0.8495287747458757, -0.3964594524802063}
(Initial BLEU[j=17]: 0.7743750076519536)

Final lambda[j=17]: {-0.871756060640207, 2.3753699659861095E15, 4.83714596086779E13}
(Final BLEU[j=17]: 0.9209453711204938)

+++ Optimization of lambda[j=18] starting @ Tue Oct 27 10:40:45 JST 2015 +++
Initial lambda[j=18]: {-0.4629095033959656, -0.10291979788243277, -0.8706362780408492}
(Initial BLEU[j=18]: 0.7760191154645046)

Final lambda[j=18]: {-0.4629095033959656, 1.2613406215154545E15, 2.5685637158522445E13}
(Final BLEU[j=18]: 0.9209453711204938)

+++ Optimization of lambda[j=19] starting @ Tue Oct 27 10:40:45 JST 2015 +++
Initial lambda[j=19]: {-0.8834296944416113, 0.3073471861931083, -0.08254985860243691}
(Initial BLEU[j=19]: 0.7851254119906101)

Final lambda[j=19]: {-0.8834296944416113, 2.407178404581541E15, 4.901920164546256E13}
(Final BLEU[j=19]: 0.9209453711204938)

+++ Optimization of lambda[j=20] starting @ Tue Oct 27 10:40:45 JST 2015 +++
Initial lambda[j=20]: {-0.2916952155637593, -0.8022503514522665, -0.33852947919372234}
(Initial BLEU[j=20]: 0.7747450412579556)

Final lambda[j=20]: {-0.2916952155637593, 7.948141522108925E14, 1.618540401835734E13}
(Final BLEU[j=20]: 0.9209453711204938)

Best final lambda is lambda[j=1] (BLEU: 0.9209).

---  Z-MERT iteration #1 ending @ Tue Oct 27 10:40:45 JST 2015  ---

Next iteration will decode with lambda: {0.1, 1.3718524407732561E14, 2.7936244446123076E12}

--- Starting Z-MERT iteration #2 @ Tue Oct 27 10:40:45 JST 2015 ---
Redecoding using weight vector {0.1, 1.3718524407732561E14, 2.7936244446123076E12}
Running decoder...
...finished decoding @ Tue Oct 27 10:40:46 JST 2015
Reading candidate translations from iterations 1-2
(and computing BLEU sufficient statistics for previously unseen candidates)
  Progress: ...+...+...+...+...500
            ...+...+...+...+...1000
            ...+...+...+...+...1500
            ..
Warning: attempt to delete ZMERT.temp.stats.mergedKnown was unsuccessful!
Processed 2152 distinct candidates (about 1 per sentence):
newCandidatesAdded[it=1] = 2152 (about 1 per sentence)
newCandidatesAdded[it=2] = 0 (about 0 per sentence)

No new candidates added in this iteration; exiting Z-MERT.

---  Z-MERT iteration #2 ending @ Tue Oct 27 10:40:47 JST 2015  ---


----------------------------------------------------
Z-MERT run ended @ Tue Oct 27 10:40:47 JST 2015
----------------------------------------------------

FINAL lambda: {0.1, 1.3718524407732561E14, 2.7936244446123076E12} (BLEU: 0.9209453711204938)

(OP Lamda) : [0.1,1.3718524407732561E14,2.7936244446123076E12]
Number of candidates => 908
tmpDirPrefix: ZMERT.
Processed the following args array:
  -r ref -rps 4 -p params.txt -m BLEU 4 closest -maxIt 15 -ipi 20 -cmd SDecoder_cmd.bat -decOut nbest.out -dcfg SDecoder_cfg.txt -N 10 -v 1 -seed 12341234 

----------------------------------------------------
Initializing...
----------------------------------------------------

Random number generator initialized using seed: 12341234

$$ decoderCommand: java SimpleDecoder SDecoder_cfg.txt nbest.out
Number of sentences: 908
Number of documents: 1
Optimizing BLEU
docSubsetInfo: {0, 1, 1, 1, 1, 0, 0}
Number of features: 3
Feature names: {"RD","Word Model","Headword Model"}

c    Default value	Optimizable?	Crit. val. range	Rand. val. range
1     0.1000		 Yes		 [-Infinity,Infinity]		 [-1.0,1.0]
2     0.2000		 Yes		 [-Infinity,Infinity]		 [-1.0,1.0]
3     -0.1000		 Yes		 [-Infinity,Infinity]		 [-1.0,1.0]

Weight vector normalization method: none.

----------------------------------------------------

----------------------------------------------------
Z-MERT run started @ Tue Oct 27 10:40:48 JST 2015
----------------------------------------------------

Initial lambda[]: {0.1, 0.2, -0.1}

--- Starting Z-MERT iteration #1 @ Tue Oct 27 10:40:48 JST 2015 ---
Decoding using initial weight vector {0.1, 0.2, -0.1}
Running decoder...
...finished decoding @ Tue Oct 27 10:40:50 JST 2015
Reading candidate translations from iterations 1-1
(and computing BLEU sufficient statistics for previously unseen candidates)
  Progress: Size: 9061
...+...+...+...+...500
            ...+...+...+...+
Warning: attempt to delete ZMERT.temp.stats.unknown was unsuccessful!
Warning: attempt to delete ZMERT.temp.stats.mergedKnown was unsuccessful!
Processed 9061 distinct candidates (about 9 per sentence):
newCandidatesAdded[it=1] = 9061 (about 9 per sentence)

+++ Optimization of lambda[j=1] starting @ Tue Oct 27 10:40:52 JST 2015 +++
Initial lambda[j=1]: {0.1, 0.2, -0.1}
(Initial BLEU[j=1]: 0.7908757393312549)

Final lambda[j=1]: {0.1, 0.2, 8.316660289501833E10}
(Final BLEU[j=1]: 0.8559944011248749)

+++ Optimization of lambda[j=2] starting @ Tue Oct 27 10:40:52 JST 2015 +++
Initial lambda[j=2]: {-0.017230818545013626, -0.6577977590753961, 0.46016061237234096}
(Initial BLEU[j=2]: 0.761043322073903)

Final lambda[j=2]: {5.714200901356255E-13, -0.6577977590753961, 0.4752421657314109}
(Final BLEU[j=2]: 0.8558952416211987)

+++ Optimization of lambda[j=3] starting @ Tue Oct 27 10:40:52 JST 2015 +++
Initial lambda[j=3]: {-0.5203200954373215, 0.09518077619965482, -0.059473491599185246}
(Initial BLEU[j=3]: 0.7296904500164655)

Final lambda[j=3]: {2183.9879998796396, 0.09518077619965482, 1.7587417204415798E15}
(Final BLEU[j=3]: 0.8559944011248749)

+++ Optimization of lambda[j=4] starting @ Tue Oct 27 10:40:52 JST 2015 +++
Initial lambda[j=4]: {-0.6919952429797738, -0.8743327758402839, -0.6393613928095458}
(Initial BLEU[j=4]: 0.7295025065494896)

Final lambda[j=4]: {2904.580696099421, -0.8743327758402839, 2.339023448926629E15}
(Final BLEU[j=4]: 0.8559944011248749)

+++ Optimization of lambda[j=5] starting @ Tue Oct 27 10:40:52 JST 2015 +++
Initial lambda[j=5]: {0.7737957524668755, 0.6493837878144797, -0.5778133794884044}
(Initial BLEU[j=5]: 0.7906639669266251)

Final lambda[j=5]: {0.7737957524668755, 0.6493837878144797, 6.435396406726453E11}
(Final BLEU[j=5]: 0.8559944011248749)

+++ Optimization of lambda[j=6] starting @ Tue Oct 27 10:40:52 JST 2015 +++
Initial lambda[j=6]: {0.2815800420089276, 0.15636862697411513, 0.6539535776649275}
(Initial BLEU[j=6]: 0.832112954739801)

Final lambda[j=6]: {4.489578561799212E-17, 0.15636862697411513, 3.856326341157016E-5}
(Final BLEU[j=6]: 0.8568891604305179)

+++ Optimization of lambda[j=7] starting @ Tue Oct 27 10:40:52 JST 2015 +++
Initial lambda[j=7]: {0.32669861662639876, 0.009245077311689887, -0.9330111163449395}
(Initial BLEU[j=7]: 0.7906639669266251)

Final lambda[j=7]: {0.32669861662639876, 0.009245077311689887, 2.717041411531953E11}
(Final BLEU[j=7]: 0.8559944011248749)

+++ Optimization of lambda[j=8] starting @ Tue Oct 27 10:40:52 JST 2015 +++
Initial lambda[j=8]: {0.6515944996339995, 0.08804197789590318, 0.9795005730080566}
(Initial BLEU[j=8]: 0.8320638639779733)

Final lambda[j=8]: {8.081071934424937E-17, 0.08804197789590318, 6.777315274844448E-5}
(Final BLEU[j=8]: 0.8569387675839043)

+++ Optimization of lambda[j=9] starting @ Tue Oct 27 10:40:52 JST 2015 +++
Initial lambda[j=9]: {-0.004553671263154424, 0.8593774528720801, -0.01427276865927607}
(Initial BLEU[j=9]: 0.7296904500164655)

Final lambda[j=9]: {27.27291983164887, 0.8593774528720801, 2.196252218952822E13}
(Final BLEU[j=9]: 0.8559944011248749)

+++ Optimization of lambda[j=10] starting @ Tue Oct 27 10:40:52 JST 2015 +++
Initial lambda[j=10]: {0.5053771649119221, -0.5713556223455967, -0.8739358729264859}
(Initial BLEU[j=10]: 0.7902384719266103)

Final lambda[j=10]: {0.5053771649119221, -0.5713556223455967, 4.203050198644001E11}
(Final BLEU[j=10]: 0.8559944011248749)

+++ Optimization of lambda[j=11] starting @ Tue Oct 27 10:40:52 JST 2015 +++
Initial lambda[j=11]: {0.7980226618452084, -0.399205792984231, -0.5477913765324938}
(Initial BLEU[j=11]: 0.7902867942108688)

Final lambda[j=11]: {0.7980226618452084, -0.399205792984231, 6.636883381890594E11}
(Final BLEU[j=11]: 0.8559944011248749)

+++ Optimization of lambda[j=12] starting @ Tue Oct 27 10:40:52 JST 2015 +++
Initial lambda[j=12]: {0.594593012768021, -0.2974935383022126, 0.3275255626321376}
(Initial BLEU[j=12]: 0.8319656563794524)

Final lambda[j=12]: {0.594593012768021, -0.2974935383022126, 4.945028097703056E11}
(Final BLEU[j=12]: 0.8559944011248749)

+++ Optimization of lambda[j=13] starting @ Tue Oct 27 10:40:52 JST 2015 +++
Initial lambda[j=13]: {-0.21052430917292875, 0.981831267676273, -0.8102868749874037}
(Initial BLEU[j=13]: 0.7296434777641371)

Final lambda[j=13]: {1260.8711430864712, 0.981831267676273, 1.0153664031607435E15}
(Final BLEU[j=13]: 0.8559944011248749)

+++ Optimization of lambda[j=14] starting @ Tue Oct 27 10:40:52 JST 2015 +++
Initial lambda[j=14]: {0.03753776574773382, 0.00790321507749736, 0.03620028521108054}
(Initial BLEU[j=14]: 0.832112954739801)

Final lambda[j=14]: {2.2446833578910783E-18, 0.00790321507749736, 1.8768906270665765E-6}
(Final BLEU[j=14]: 0.8568891604305179)

+++ Optimization of lambda[j=15] starting @ Tue Oct 27 10:40:53 JST 2015 +++
Initial lambda[j=15]: {0.009954244141451962, 0.02541025170060851, 0.593645578752771}
(Initial BLEU[j=15]: 0.8320638639779733)

Final lambda[j=15]: {4.489437331121175E-17, 0.02541025170060851, 3.7005396462041096E-5}
(Final BLEU[j=15]: 0.856733253578528)

+++ Optimization of lambda[j=16] starting @ Tue Oct 27 10:40:53 JST 2015 +++
Initial lambda[j=16]: {0.6576106932759427, 0.17534745529356877, -0.6893751690924723}
(Initial BLEU[j=16]: 0.7908757393312549)

Final lambda[j=16]: {0.6576106932759427, 0.17534745529356877, 5.469124738719801E11}
(Final BLEU[j=16]: 0.8559944011248749)

+++ Optimization of lambda[j=17] starting @ Tue Oct 27 10:40:53 JST 2015 +++
Initial lambda[j=17]: {-0.871756060640207, -0.8495287747458757, -0.3964594524802063}
(Initial BLEU[j=17]: 0.7290827283470592)

Final lambda[j=17]: {3659.0627792071023, -0.8495287747458757, 2.946635671657281E15}
(Final BLEU[j=17]: 0.8559944011248749)

+++ Optimization of lambda[j=18] starting @ Tue Oct 27 10:40:53 JST 2015 +++
Initial lambda[j=18]: {-0.4629095033959656, -0.10291979788243277, -0.8706362780408492}
(Initial BLEU[j=18]: 0.7295025065494896)

Final lambda[j=18]: {1943.0228560533892, -0.10291979788243277, 1.5646873214210695E15}
(Final BLEU[j=18]: 0.8559944011248749)

+++ Optimization of lambda[j=19] starting @ Tue Oct 27 10:40:53 JST 2015 +++
Initial lambda[j=19]: {-0.8834296944416113, 0.3073471861931083, -0.08254985860243691}
(Initial BLEU[j=19]: 0.7296904500164655)

Final lambda[j=19]: {3708.1112925923535, 0.3073471861931083, 2.986093895500107E15}
(Final BLEU[j=19]: 0.8559944011248749)

+++ Optimization of lambda[j=20] starting @ Tue Oct 27 10:40:53 JST 2015 +++
Initial lambda[j=20]: {-0.2916952155637593, -0.8022503514522665, -0.33852947919372234}
(Initial BLEU[j=20]: 0.7290827283470592)

Final lambda[j=20]: {1224.35830572624, -0.8022503514522665, 9.859633517210222E14}
(Final BLEU[j=20]: 0.8559944011248749)

Best final lambda is lambda[j=8] (BLEU: 0.8569).

---  Z-MERT iteration #1 ending @ Tue Oct 27 10:40:53 JST 2015  ---

Next iteration will decode with lambda: {8.081071934424937E-17, 0.08804197789590318, 6.777315274844448E-5}

--- Starting Z-MERT iteration #2 @ Tue Oct 27 10:40:53 JST 2015 ---
Redecoding using weight vector {8.081071934424937E-17, 0.08804197789590318, 6.777315274844448E-5}
Running decoder...
...finished decoding @ Tue Oct 27 10:40:55 JST 2015
Reading candidate translations from iterations 1-2
(and computing BLEU sufficient statistics for previously unseen candidates)
  Progress: ...+...+...+...+...500
            ...+...+...+...+
Warning: attempt to delete ZMERT.temp.stats.mergedKnown was unsuccessful!
Processed 9061 distinct candidates (about 9 per sentence):
newCandidatesAdded[it=1] = 9061 (about 9 per sentence)
newCandidatesAdded[it=2] = 0 (about 0 per sentence)

No new candidates added in this iteration; exiting Z-MERT.

---  Z-MERT iteration #2 ending @ Tue Oct 27 10:40:56 JST 2015  ---


----------------------------------------------------
Z-MERT run ended @ Tue Oct 27 10:40:56 JST 2015
----------------------------------------------------

FINAL lambda: {8.081071934424937E-17, 0.08804197789590318, 6.777315274844448E-5} (BLEU: 0.8569387675839043)

(OP Lamda) : [8.081071934424937E-17,0.08804197789590318,6.777315274844448E-5]
Number of candidates => 608
tmpDirPrefix: ZMERT.
Processed the following args array:
  -r ref -rps 4 -p params.txt -m BLEU 4 closest -maxIt 15 -ipi 20 -cmd SDecoder_cmd.bat -decOut nbest.out -dcfg SDecoder_cfg.txt -N 10 -v 1 -seed 12341234 

----------------------------------------------------
Initializing...
----------------------------------------------------

Random number generator initialized using seed: 12341234

$$ decoderCommand: java SimpleDecoder SDecoder_cfg.txt nbest.out
Number of sentences: 608
Number of documents: 1
Optimizing BLEU
docSubsetInfo: {0, 1, 1, 1, 1, 0, 0}
Number of features: 3
Feature names: {"RD","Word Model","Headword Model"}

c    Default value	Optimizable?	Crit. val. range	Rand. val. range
1     0.1000		 Yes		 [-Infinity,Infinity]		 [-1.0,1.0]
2     0.2000		 Yes		 [-Infinity,Infinity]		 [-1.0,1.0]
3     -0.1000		 Yes		 [-Infinity,Infinity]		 [-1.0,1.0]

Weight vector normalization method: none.

----------------------------------------------------

----------------------------------------------------
Z-MERT run started @ Tue Oct 27 10:40:57 JST 2015
----------------------------------------------------

Initial lambda[]: {0.1, 0.2, -0.1}

--- Starting Z-MERT iteration #1 @ Tue Oct 27 10:40:57 JST 2015 ---
Decoding using initial weight vector {0.1, 0.2, -0.1}
Running decoder...
...finished decoding @ Tue Oct 27 10:40:58 JST 2015
Reading candidate translations from iterations 1-1
(and computing BLEU sufficient statistics for previously unseen candidates)
  Progress: Size: 3143
...+...+...+...+...500
            ...+
Warning: attempt to delete ZMERT.temp.stats.unknown was unsuccessful!
Warning: attempt to delete ZMERT.temp.stats.mergedKnown was unsuccessful!
Processed 3143 distinct candidates (about 5 per sentence):
newCandidatesAdded[it=1] = 3143 (about 5 per sentence)

+++ Optimization of lambda[j=1] starting @ Tue Oct 27 10:40:59 JST 2015 +++
Initial lambda[j=1]: {0.1, 0.2, -0.1}
(Initial BLEU[j=1]: 0.7882019793449119)

Final lambda[j=1]: {0.04115925918849377, 0.2, 5.373767389150081E15}
(Final BLEU[j=1]: 0.8357297175192571)

+++ Optimization of lambda[j=2] starting @ Tue Oct 27 10:40:59 JST 2015 +++
Initial lambda[j=2]: {-0.017230818545013626, -0.6577977590753961, 0.46016061237234096}
(Initial BLEU[j=2]: 0.7541523109412845)

Final lambda[j=2]: {4.569595722758032E-18, -0.6577977590753961, 0.46016061237234096}
(Final BLEU[j=2]: 0.8356860409287858)

+++ Optimization of lambda[j=3] starting @ Tue Oct 27 10:40:59 JST 2015 +++
Initial lambda[j=3]: {-0.5203200954373215, 0.09518077619965482, -0.059473491599185246}
(Initial BLEU[j=3]: 0.739260728635238)

Final lambda[j=3]: {0.1646370367539751, 0.09518077619965482, 2.1521888490206344E16}
(Final BLEU[j=3]: 0.8357297175192571)

+++ Optimization of lambda[j=4] starting @ Tue Oct 27 10:40:59 JST 2015 +++
Initial lambda[j=4]: {-0.6919952429797738, -0.8743327758402839, -0.6393613928095458}
(Initial BLEU[j=4]: 0.739260728635238)

Final lambda[j=4]: {0.1646370367539751, -0.8743327758402839, 1.769442278309629E16}
(Final BLEU[j=4]: 0.8357297175192571)

+++ Optimization of lambda[j=5] starting @ Tue Oct 27 10:40:59 JST 2015 +++
Initial lambda[j=5]: {0.7737957524668755, 0.6493837878144797, -0.5778133794884044}
(Initial BLEU[j=5]: 0.7882019793449119)

Final lambda[j=5]: {0.3292740735079502, 0.6493837878144797, 4.158198380469344E16}
(Final BLEU[j=5]: 0.8357297175192571)

+++ Optimization of lambda[j=6] starting @ Tue Oct 27 10:40:59 JST 2015 +++
Initial lambda[j=6]: {0.2815800420089276, 0.15636862697411513, 0.6539535776649275}
(Initial BLEU[j=6]: 0.813497401710768)

Final lambda[j=6]: {9.139191445516065E-18, 0.15636862697411513, 0.6539535776649275}
(Final BLEU[j=6]: 0.8357297175192571)

+++ Optimization of lambda[j=7] starting @ Tue Oct 27 10:40:59 JST 2015 +++
Initial lambda[j=7]: {0.32669861662639876, 0.009245077311689887, -0.9330111163449395}
(Initial BLEU[j=7]: 0.7878379722108146)

Final lambda[j=7]: {0.1646370367539751, 0.009245077311689887, 1.755602372107386E16}
(Final BLEU[j=7]: 0.8357297175192571)

+++ Optimization of lambda[j=8] starting @ Tue Oct 27 10:40:59 JST 2015 +++
Initial lambda[j=8]: {0.6515944996339995, 0.08804197789590318, 0.9795005730080566}
(Initial BLEU[j=8]: 0.813497401710768)

Final lambda[j=8]: {9.139191445516065E-18, 0.08804197789590318, 0.9795005730080566}
(Final BLEU[j=8]: 0.8357297175192571)

+++ Optimization of lambda[j=9] starting @ Tue Oct 27 10:40:59 JST 2015 +++
Initial lambda[j=9]: {-0.004553671263154424, 0.8593774528720801, -0.01427276865927607}
(Initial BLEU[j=9]: 0.739260728635238)

Final lambda[j=9]: {0.0026672046560548245, 0.8593774528720801, 1.4592125966260606E14}
(Final BLEU[j=9]: 0.8357297175192571)

+++ Optimization of lambda[j=10] starting @ Tue Oct 27 10:40:59 JST 2015 +++
Initial lambda[j=10]: {0.5053771649119221, -0.5713556223455967, -0.8739358729264859}
(Initial BLEU[j=10]: 0.7882019793449119)

Final lambda[j=10]: {0.5053771649119221, -0.5713556223455967, 2.7157793280248088E16}
(Final BLEU[j=10]: 0.8355657189042588)

+++ Optimization of lambda[j=11] starting @ Tue Oct 27 10:40:59 JST 2015 +++
Initial lambda[j=11]: {0.7980226618452084, -0.399205792984231, -0.5477913765324938}
(Initial BLEU[j=11]: 0.7882019793449119)

Final lambda[j=11]: {0.3292740735079502, -0.399205792984231, 4.2883881560265232E16}
(Final BLEU[j=11]: 0.8357297175192571)

+++ Optimization of lambda[j=12] starting @ Tue Oct 27 10:40:59 JST 2015 +++
Initial lambda[j=12]: {0.594593012768021, -0.2974935383022126, 0.3275255626321376}
(Initial BLEU[j=12]: 0.813497401710768)

Final lambda[j=12]: {0.3292740735079502, -0.2974935383022126, 3.1952045418292888E16}
(Final BLEU[j=12]: 0.8357297175192571)

+++ Optimization of lambda[j=13] starting @ Tue Oct 27 10:40:59 JST 2015 +++
Initial lambda[j=13]: {-0.21052430917292875, 0.981831267676273, -0.8102868749874037}
(Initial BLEU[j=13]: 0.738859135841677)

Final lambda[j=13]: {0.08231851837698755, 0.981831267676273, 8.70787183933259E15}
(Final BLEU[j=13]: 0.8357297175192571)

+++ Optimization of lambda[j=14] starting @ Tue Oct 27 10:40:59 JST 2015 +++
Initial lambda[j=14]: {0.03753776574773382, 0.00790321507749736, 0.03620028521108054}
(Initial BLEU[j=14]: 0.813497401710768)

Final lambda[j=14]: {0.020579629594246886, 0.00790321507749736, 2.017192214367269E15}
(Final BLEU[j=14]: 0.8357297175192571)

+++ Optimization of lambda[j=15] starting @ Tue Oct 27 10:40:59 JST 2015 +++
Initial lambda[j=15]: {0.009954244141451962, 0.02541025170060851, 0.593645578752771}
(Initial BLEU[j=15]: 0.8148743972137877)

Final lambda[j=15]: {4.569595722758032E-18, 0.02541025170060851, 0.593645578752771}
(Final BLEU[j=15]: 0.8357297175192571)

+++ Optimization of lambda[j=16] starting @ Tue Oct 27 10:40:59 JST 2015 +++
Initial lambda[j=16]: {0.6576106932759427, 0.17534745529356877, -0.6893751690924723}
(Initial BLEU[j=16]: 0.7882019793449119)

Final lambda[j=16]: {0.3292740735079502, 0.17534745529356877, 3.5338468982826368E16}
(Final BLEU[j=16]: 0.8357297175192571)

+++ Optimization of lambda[j=17] starting @ Tue Oct 27 10:40:59 JST 2015 +++
Initial lambda[j=17]: {-0.871756060640207, -0.8495287747458757, -0.3964594524802063}
(Initial BLEU[j=17]: 0.739260728635238)

Final lambda[j=17]: {0.3292740735079502, -0.8495287747458757, 3.6058258929997784E16}
(Final BLEU[j=17]: 0.8357297175192571)

+++ Optimization of lambda[j=18] starting @ Tue Oct 27 10:40:59 JST 2015 +++
Initial lambda[j=18]: {-0.4629095033959656, -0.10291979788243277, -0.8706362780408492}
(Initial BLEU[j=18]: 0.7388168827241942)

Final lambda[j=18]: {0.1646370367539751, -0.10291979788243277, 1.9147226487132448E16}
(Final BLEU[j=18]: 0.8357297175192571)

+++ Optimization of lambda[j=19] starting @ Tue Oct 27 10:40:59 JST 2015 +++
Initial lambda[j=19]: {-0.8834296944416113, 0.3073471861931083, -0.08254985860243691}
(Initial BLEU[j=19]: 0.739260728635238)

Final lambda[j=19]: {0.3292740735079502, 0.3073471861931083, 3.6541112940735472E16}
(Final BLEU[j=19]: 0.8357297175192571)

+++ Optimization of lambda[j=20] starting @ Tue Oct 27 10:40:59 JST 2015 +++
Initial lambda[j=20]: {-0.2916952155637593, -0.8022503514522665, -0.33852947919372234}
(Initial BLEU[j=20]: 0.7388168827241942)

Final lambda[j=20]: {0.1646370367539751, -0.8022503514522665, 1.2065326627858768E16}
(Final BLEU[j=20]: 0.8357297175192571)

Best final lambda is lambda[j=1] (BLEU: 0.8357).

---  Z-MERT iteration #1 ending @ Tue Oct 27 10:40:59 JST 2015  ---

Next iteration will decode with lambda: {0.04115925918849377, 0.2, 5.373767389150081E15}

--- Starting Z-MERT iteration #2 @ Tue Oct 27 10:40:59 JST 2015 ---
Redecoding using weight vector {0.04115925918849377, 0.2, 5.373767389150081E15}
Running decoder...
...finished decoding @ Tue Oct 27 10:41:00 JST 2015
Reading candidate translations from iterations 1-2
(and computing BLEU sufficient statistics for previously unseen candidates)
  Progress: ...+...+...+...+...500
            ...+
Warning: attempt to delete ZMERT.temp.stats.mergedKnown was unsuccessful!
Processed 3143 distinct candidates (about 5 per sentence):
newCandidatesAdded[it=1] = 3143 (about 5 per sentence)
newCandidatesAdded[it=2] = 0 (about 0 per sentence)

No new candidates added in this iteration; exiting Z-MERT.

---  Z-MERT iteration #2 ending @ Tue Oct 27 10:41:00 JST 2015  ---


----------------------------------------------------
Z-MERT run ended @ Tue Oct 27 10:41:00 JST 2015
----------------------------------------------------

FINAL lambda: {0.04115925918849377, 0.2, 5.373767389150081E15} (BLEU: 0.8357297175192571)

(OP Lamda) : [0.04115925918849377,0.2,5.373767389150081E15]
Number of candidates => 417
tmpDirPrefix: ZMERT.
Processed the following args array:
  -r ref -rps 4 -p params.txt -m BLEU 4 closest -maxIt 15 -ipi 20 -cmd SDecoder_cmd.bat -decOut nbest.out -dcfg SDecoder_cfg.txt -N 10 -v 1 -seed 12341234 

----------------------------------------------------
Initializing...
----------------------------------------------------

Random number generator initialized using seed: 12341234

$$ decoderCommand: java SimpleDecoder SDecoder_cfg.txt nbest.out
Number of sentences: 417
Number of documents: 1
Optimizing BLEU
docSubsetInfo: {0, 1, 1, 1, 1, 0, 0}
Number of features: 3
Feature names: {"RD","Word Model","Headword Model"}

c    Default value	Optimizable?	Crit. val. range	Rand. val. range
1     0.1000		 Yes		 [-Infinity,Infinity]		 [-1.0,1.0]
2     0.2000		 Yes		 [-Infinity,Infinity]		 [-1.0,1.0]
3     -0.1000		 Yes		 [-Infinity,Infinity]		 [-1.0,1.0]

Weight vector normalization method: none.

----------------------------------------------------

----------------------------------------------------
Z-MERT run started @ Tue Oct 27 10:41:01 JST 2015
----------------------------------------------------

Initial lambda[]: {0.1, 0.2, -0.1}

--- Starting Z-MERT iteration #1 @ Tue Oct 27 10:41:01 JST 2015 ---
Decoding using initial weight vector {0.1, 0.2, -0.1}
Running decoder...
...finished decoding @ Tue Oct 27 10:41:02 JST 2015
Reading candidate translations from iterations 1-1
(and computing BLEU sufficient statistics for previously unseen candidates)
  Progress: Size: 3460
...+...+...+...+
Warning: attempt to delete ZMERT.temp.stats.unknown was unsuccessful!
Warning: attempt to delete ZMERT.temp.stats.mergedKnown was unsuccessful!
Processed 3460 distinct candidates (about 8 per sentence):
newCandidatesAdded[it=1] = 3460 (about 8 per sentence)

+++ Optimization of lambda[j=1] starting @ Tue Oct 27 10:41:03 JST 2015 +++
Initial lambda[j=1]: {0.1, 0.2, -0.1}
(Initial BLEU[j=1]: 0.7936827859260808)

Final lambda[j=1]: {0.1, 0.2, 1.0900645735061925E15}
(Final BLEU[j=1]: 0.8252728314849292)

+++ Optimization of lambda[j=2] starting @ Tue Oct 27 10:41:03 JST 2015 +++
Initial lambda[j=2]: {-0.017230818545013626, -0.6577977590753961, 0.46016061237234096}
(Initial BLEU[j=2]: 0.758204797670557)

Final lambda[j=2]: {8.743615976448803E-18, -0.6577977590753961, 0.46016061237234096}
(Final BLEU[j=2]: 0.8252728314849292)

+++ Optimization of lambda[j=3] starting @ Tue Oct 27 10:41:03 JST 2015 +++
Initial lambda[j=3]: {-0.5203200954373215, 0.09518077619965482, -0.059473491599185246}
(Initial BLEU[j=3]: 0.7441887984820093)

Final lambda[j=3]: {0.65687942331747, 0.09518077619965482, 1.259053311284757E16}
(Final BLEU[j=3]: 0.8254223600636365)

+++ Optimization of lambda[j=4] starting @ Tue Oct 27 10:41:03 JST 2015 +++
Initial lambda[j=4]: {-0.6919952429797738, -0.8743327758402839, -0.6393613928095458}
(Initial BLEU[j=4]: 0.7441887984820093)

Final lambda[j=4]: {0.31502196522724435, -0.8743327758402839, 1.6744671399529624E16}
(Final BLEU[j=4]: 0.8252728314849292)

+++ Optimization of lambda[j=5] starting @ Tue Oct 27 10:41:03 JST 2015 +++
Initial lambda[j=5]: {0.7737957524668755, 0.6493837878144797, -0.5778133794884044}
(Initial BLEU[j=5]: 0.7935308145656096)

Final lambda[j=5]: {0.7737957524668755, 0.6493837878144797, 8.434873368937078E15}
(Final BLEU[j=5]: 0.8252728314849292)

+++ Optimization of lambda[j=6] starting @ Tue Oct 27 10:41:03 JST 2015 +++
Initial lambda[j=6]: {0.2815800420089276, 0.15636862697411513, 0.6539535776649275}
(Initial BLEU[j=6]: 0.8093238548519931)

Final lambda[j=6]: {3.4543350037047217E-17, 0.15636862697411513, 0.6539535776649275}
(Final BLEU[j=6]: 0.8254223600636365)

+++ Optimization of lambda[j=7] starting @ Tue Oct 27 10:41:03 JST 2015 +++
Initial lambda[j=7]: {0.32669861662639876, 0.009245077311689887, -0.9330111163449395}
(Initial BLEU[j=7]: 0.793378832482362)

Final lambda[j=7]: {0.32669861662639876, 0.009245077311689887, 3.5612258819791845E15}
(Final BLEU[j=7]: 0.8252728314849292)

+++ Optimization of lambda[j=8] starting @ Tue Oct 27 10:41:03 JST 2015 +++
Initial lambda[j=8]: {0.6515944996339995, 0.08804197789590318, 0.9795005730080566}
(Initial BLEU[j=8]: 0.8094745835404237)

Final lambda[j=8]: {1.7487231952897606E-17, 0.08804197789590318, 0.9795005730080566}
(Final BLEU[j=8]: 0.8252728314849292)

+++ Optimization of lambda[j=9] starting @ Tue Oct 27 10:41:03 JST 2015 +++
Initial lambda[j=9]: {-0.004553671263154424, 0.8593774528720801, -0.01427276865927607}
(Initial BLEU[j=9]: 0.7441887984820093)

Final lambda[j=9]: {0.001215386080898238, 0.8593774528720801, 2.6827678450821875E13}
(Final BLEU[j=9]: 0.8254223600636365)

+++ Optimization of lambda[j=10] starting @ Tue Oct 27 10:41:03 JST 2015 +++
Initial lambda[j=10]: {0.5053771649119221, -0.5713556223455967, -0.8739358729264859}
(Initial BLEU[j=10]: 0.7935308145656096)

Final lambda[j=10]: {0.5053771649119221, -0.5713556223455967, 5.50893743729483E15}
(Final BLEU[j=10]: 0.8252728314849292)

+++ Optimization of lambda[j=11] starting @ Tue Oct 27 10:41:03 JST 2015 +++
Initial lambda[j=11]: {0.7980226618452084, -0.399205792984231, -0.5477913765324938}
(Initial BLEU[j=11]: 0.7935308145656096)

Final lambda[j=11]: {0.7980226618452084, -0.399205792984231, 8.698962325325736E15}
(Final BLEU[j=11]: 0.8252728314849292)

+++ Optimization of lambda[j=12] starting @ Tue Oct 27 10:41:03 JST 2015 +++
Initial lambda[j=12]: {0.594593012768021, -0.2974935383022126, 0.3275255626321376}
(Initial BLEU[j=12]: 0.8091731159439287)

Final lambda[j=12]: {1.7271675018523608E-17, -0.2974935383022126, 0.3275255626321376}
(Final BLEU[j=12]: 0.8254223600636365)

+++ Optimization of lambda[j=13] starting @ Tue Oct 27 10:41:03 JST 2015 +++
Initial lambda[j=13]: {-0.21052430917292875, 0.981831267676273, -0.8102868749874037}
(Initial BLEU[j=13]: 0.7441887984820093)

Final lambda[j=13]: {0.328439711658735, 0.981831267676273, 5.094197416060428E15}
(Final BLEU[j=13]: 0.8254223600636365)

+++ Optimization of lambda[j=14] starting @ Tue Oct 27 10:41:03 JST 2015 +++
Initial lambda[j=14]: {0.03753776574773382, 0.00790321507749736, 0.03620028521108054}
(Initial BLEU[j=14]: 0.8090223668125135)

Final lambda[j=14]: {2.279008313029844E-18, 0.00790321507749736, 0.03620028521108054}
(Final BLEU[j=14]: 0.8254223600636365)

+++ Optimization of lambda[j=15] starting @ Tue Oct 27 10:41:03 JST 2015 +++
Initial lambda[j=15]: {0.009954244141451962, 0.02541025170060851, 0.593645578752771}
(Initial BLEU[j=15]: 0.8093238548519931)

Final lambda[j=15]: {9.704007462163943E-18, 0.02541025170060851, 0.593645578752771}
(Final BLEU[j=15]: 0.8252728314849292)

+++ Optimization of lambda[j=16] starting @ Tue Oct 27 10:41:03 JST 2015 +++
Initial lambda[j=16]: {0.6576106932759427, 0.17534745529356877, -0.6893751690924723}
(Initial BLEU[j=16]: 0.7938547953770769)

Final lambda[j=16]: {0.6576106932759427, 0.17534745529356877, 7.168381198989519E15}
(Final BLEU[j=16]: 0.8252728314849292)

+++ Optimization of lambda[j=17] starting @ Tue Oct 27 10:41:03 JST 2015 +++
Initial lambda[j=17]: {-0.871756060640207, -0.8495287747458757, -0.3964594524802063}
(Initial BLEU[j=17]: 0.7441887984820093)

Final lambda[j=17]: {0.31502196522724435, -0.8495287747458757, 2.109446405023242E16}
(Final BLEU[j=17]: 0.8252728314849292)

+++ Optimization of lambda[j=18] starting @ Tue Oct 27 10:41:03 JST 2015 +++
Initial lambda[j=18]: {-0.4629095033959656, -0.10291979788243277, -0.8706362780408492}
(Initial BLEU[j=18]: 0.7438520745745107)

Final lambda[j=18]: {0.1748118575624082, -0.10291979788243277, 1.120133064601348E16}
(Final BLEU[j=18]: 0.8252728314849292)

+++ Optimization of lambda[j=19] starting @ Tue Oct 27 10:41:03 JST 2015 +++
Initial lambda[j=19]: {-0.8834296944416113, 0.3073471861931083, -0.08254985860243691}
(Initial BLEU[j=19]: 0.7441887984820093)

Final lambda[j=19]: {0.31502196522724435, 0.3073471861931083, 2.1376938769569E16}
(Final BLEU[j=19]: 0.8252728314849292)

+++ Optimization of lambda[j=20] starting @ Tue Oct 27 10:41:03 JST 2015 +++
Initial lambda[j=20]: {-0.2916952155637593, -0.8022503514522665, -0.33852947919372234}
(Initial BLEU[j=20]: 0.7438520745745107)

Final lambda[j=20]: {0.15751098261362217, -0.8022503514522665, 7.058344089762584E15}
(Final BLEU[j=20]: 0.8252728314849292)

Best final lambda is lambda[j=3] (BLEU: 0.8254).

---  Z-MERT iteration #1 ending @ Tue Oct 27 10:41:03 JST 2015  ---

Next iteration will decode with lambda: {0.65687942331747, 0.09518077619965482, 1.259053311284757E16}

--- Starting Z-MERT iteration #2 @ Tue Oct 27 10:41:03 JST 2015 ---
Redecoding using weight vector {0.65687942331747, 0.09518077619965482, 1.259053311284757E16}
Running decoder...
...finished decoding @ Tue Oct 27 10:41:04 JST 2015
Reading candidate translations from iterations 1-2
(and computing BLEU sufficient statistics for previously unseen candidates)
  Progress: ...+...+...+...+
Warning: attempt to delete ZMERT.temp.stats.mergedKnown was unsuccessful!
Processed 3460 distinct candidates (about 8 per sentence):
newCandidatesAdded[it=1] = 3460 (about 8 per sentence)
newCandidatesAdded[it=2] = 0 (about 0 per sentence)

No new candidates added in this iteration; exiting Z-MERT.

---  Z-MERT iteration #2 ending @ Tue Oct 27 10:41:05 JST 2015  ---


----------------------------------------------------
Z-MERT run ended @ Tue Oct 27 10:41:05 JST 2015
----------------------------------------------------

FINAL lambda: {0.65687942331747, 0.09518077619965482, 1.259053311284757E16} (BLEU: 0.8254223600636365)

(OP Lamda) : [0.65687942331747,0.09518077619965482,1.259053311284757E16]
Number of candidates => 290
tmpDirPrefix: ZMERT.
Processed the following args array:
  -r ref -rps 4 -p params.txt -m BLEU 4 closest -maxIt 15 -ipi 20 -cmd SDecoder_cmd.bat -decOut nbest.out -dcfg SDecoder_cfg.txt -N 10 -v 1 -seed 12341234 

----------------------------------------------------
Initializing...
----------------------------------------------------

Random number generator initialized using seed: 12341234

$$ decoderCommand: java SimpleDecoder SDecoder_cfg.txt nbest.out
Number of sentences: 290
Number of documents: 1
Optimizing BLEU
docSubsetInfo: {0, 1, 1, 1, 1, 0, 0}
Number of features: 3
Feature names: {"RD","Word Model","Headword Model"}

c    Default value	Optimizable?	Crit. val. range	Rand. val. range
1     0.1000		 Yes		 [-Infinity,Infinity]		 [-1.0,1.0]
2     0.2000		 Yes		 [-Infinity,Infinity]		 [-1.0,1.0]
3     -0.1000		 Yes		 [-Infinity,Infinity]		 [-1.0,1.0]

Weight vector normalization method: none.

----------------------------------------------------

----------------------------------------------------
Z-MERT run started @ Tue Oct 27 10:41:06 JST 2015
----------------------------------------------------

Initial lambda[]: {0.1, 0.2, -0.1}

--- Starting Z-MERT iteration #1 @ Tue Oct 27 10:41:06 JST 2015 ---
Decoding using initial weight vector {0.1, 0.2, -0.1}
Running decoder...
...finished decoding @ Tue Oct 27 10:41:07 JST 2015
Reading candidate translations from iterations 1-1
(and computing BLEU sufficient statistics for previously unseen candidates)
  Progress: Size: 7763
...+...+...
Warning: attempt to delete ZMERT.temp.stats.unknown was unsuccessful!
Warning: attempt to delete ZMERT.temp.stats.mergedKnown was unsuccessful!
Processed 7763 distinct candidates (about 26 per sentence):
newCandidatesAdded[it=1] = 7763 (about 26 per sentence)

+++ Optimization of lambda[j=1] starting @ Tue Oct 27 10:41:08 JST 2015 +++
Initial lambda[j=1]: {0.1, 0.2, -0.1}
(Initial BLEU[j=1]: 0.795604979042366)

Final lambda[j=1]: {0.04380951991658247, 0.2, 5.44823856470895E15}
(Final BLEU[j=1]: 0.8212926668280485)

+++ Optimization of lambda[j=2] starting @ Tue Oct 27 10:41:08 JST 2015 +++
Initial lambda[j=2]: {-0.017230818545013626, -0.6577977590753961, 0.46016061237234096}
(Initial BLEU[j=2]: 0.7634550600591706)

Final lambda[j=2]: {4.342917580199898E-18, -0.6577977590753961, 0.46016061237234096}
(Final BLEU[j=2]: 0.8212926668280485)

+++ Optimization of lambda[j=3] starting @ Tue Oct 27 10:41:08 JST 2015 +++
Initial lambda[j=3]: {-0.5203200954373215, 0.09518077619965482, -0.059473491599185246}
(Initial BLEU[j=3]: 0.7584236051774417)

Final lambda[j=3]: {0.15647009596711228, 0.09518077619965482, 2.1955519120830184E16}
(Final BLEU[j=3]: 0.8212926668280485)

+++ Optimization of lambda[j=4] starting @ Tue Oct 27 10:41:08 JST 2015 +++
Initial lambda[j=4]: {-0.6919952429797738, -0.8743327758402839, -0.6393613928095458}
(Initial BLEU[j=4]: 0.7584236051774417)

Final lambda[j=4]: {0.31294019193422457, -0.8743327758402839, 2.9199554124459404E16}
(Final BLEU[j=4]: 0.8212926668280485)

+++ Optimization of lambda[j=5] starting @ Tue Oct 27 10:41:08 JST 2015 +++
Initial lambda[j=5]: {0.7737957524668755, 0.6493837878144797, -0.5778133794884044}
(Initial BLEU[j=5]: 0.795604979042366)

Final lambda[j=5]: {0.31294019193422457, 0.6493837878144797, 4.2158238597980112E16}
(Final BLEU[j=5]: 0.8212926668280485)

+++ Optimization of lambda[j=6] starting @ Tue Oct 27 10:41:08 JST 2015 +++
Initial lambda[j=6]: {0.2815800420089276, 0.15636862697411513, 0.6539535776649275}
(Initial BLEU[j=6]: 0.8078476043664137)

Final lambda[j=6]: {8.685835160399795E-18, 0.15636862697411513, 0.6539535776649275}
(Final BLEU[j=6]: 0.8212926668280485)

+++ Optimization of lambda[j=7] starting @ Tue Oct 27 10:41:08 JST 2015 +++
Initial lambda[j=7]: {0.32669861662639876, 0.009245077311689887, -0.9330111163449395}
(Initial BLEU[j=7]: 0.7951900272785856)

Final lambda[j=7]: {0.15647009596711228, 0.009245077311689887, 1.7799320021410102E16}
(Final BLEU[j=7]: 0.8212926668280485)

+++ Optimization of lambda[j=8] starting @ Tue Oct 27 10:41:09 JST 2015 +++
Initial lambda[j=8]: {0.6515944996339995, 0.08804197789590318, 0.9795005730080566}
(Initial BLEU[j=8]: 0.8079067029149904)

Final lambda[j=8]: {8.685835160399795E-18, 0.08804197789590318, 0.9795005730080566}
(Final BLEU[j=8]: 0.8212926668280485)

+++ Optimization of lambda[j=9] starting @ Tue Oct 27 10:41:09 JST 2015 +++
Initial lambda[j=9]: {-0.004553671263154424, 0.8593774528720801, -0.01427276865927607}
(Initial BLEU[j=9]: 0.7584236051774417)

Final lambda[j=9]: {0.0027380949947864042, 0.8593774528720801, 1.5761840653330906E14}
(Final BLEU[j=9]: 0.8212926668280485)

+++ Optimization of lambda[j=10] starting @ Tue Oct 27 10:41:09 JST 2015 +++
Initial lambda[j=10]: {0.5053771649119221, -0.5713556223455967, -0.8739358729264859}
(Initial BLEU[j=10]: 0.7954947813495626)

Final lambda[j=10]: {0.31294019193422457, -0.5713556223455967, 2.7534153595964084E16}
(Final BLEU[j=10]: 0.8212926668280485)

+++ Optimization of lambda[j=11] starting @ Tue Oct 27 10:41:09 JST 2015 +++
Initial lambda[j=11]: {0.7980226618452084, -0.399205792984231, -0.5477913765324938}
(Initial BLEU[j=11]: 0.795604979042366)

Final lambda[j=11]: {0.31294019193422457, -0.399205792984231, 4.3478178417767544E16}
(Final BLEU[j=11]: 0.8212926668280485)

+++ Optimization of lambda[j=12] starting @ Tue Oct 27 10:41:09 JST 2015 +++
Initial lambda[j=12]: {0.594593012768021, -0.2974935383022126, 0.3275255626321376}
(Initial BLEU[j=12]: 0.8074024790041806)

Final lambda[j=12]: {4.863833770916422E-18, -0.2974935383022126, 0.3}
(Final BLEU[j=12]: 0.8212926668280485)

+++ Optimization of lambda[j=13] starting @ Tue Oct 27 10:41:09 JST 2015 +++
Initial lambda[j=13]: {-0.21052430917292875, 0.981831267676273, -0.8102868749874037}
(Initial BLEU[j=13]: 0.7584236051774417)

Final lambda[j=13]: {0.07823504798355614, 0.981831267676273, 8.883321124779806E15}
(Final BLEU[j=13]: 0.8212926668280485)

+++ Optimization of lambda[j=14] starting @ Tue Oct 27 10:41:09 JST 2015 +++
Initial lambda[j=14]: {0.03753776574773382, 0.00790321507749736, 0.03620028521108054}
(Initial BLEU[j=14]: 0.8079067029149904)

Final lambda[j=14]: {6.079792213645528E-19, 0.00790321507749736, 0.08125}
(Final BLEU[j=14]: 0.8212926668280485)

+++ Optimization of lambda[j=15] starting @ Tue Oct 27 10:41:09 JST 2015 +++
Initial lambda[j=15]: {0.009954244141451962, 0.02541025170060851, 0.593645578752771}
(Initial BLEU[j=15]: 0.8078476043664137)

Final lambda[j=15]: {4.342917580199898E-18, 0.02541025170060851, 0.593645578752771}
(Final BLEU[j=15]: 0.8212926668280485)

+++ Optimization of lambda[j=16] starting @ Tue Oct 27 10:41:09 JST 2015 +++
Initial lambda[j=16]: {0.6576106932759427, 0.17534745529356877, -0.6893751690924723}
(Initial BLEU[j=16]: 0.7951900272785856)

Final lambda[j=16]: {0.31294019193422457, 0.17534745529356877, 3.5828199396709792E16}
(Final BLEU[j=16]: 0.8212926668280485)

+++ Optimization of lambda[j=17] starting @ Tue Oct 27 10:41:09 JST 2015 +++
Initial lambda[j=17]: {-0.871756060640207, -0.8495287747458757, -0.3964594524802063}
(Initial BLEU[j=17]: 0.7584236051774417)

Final lambda[j=17]: {0.31294019193422457, -0.8495287747458757, 3.6784773499856648E16}
(Final BLEU[j=17]: 0.8212926668280485)

+++ Optimization of lambda[j=18] starting @ Tue Oct 27 10:41:09 JST 2015 +++
Initial lambda[j=18]: {-0.4629095033959656, -0.10291979788243277, -0.8706362780408492}
(Initial BLEU[j=18]: 0.7584236051774417)

Final lambda[j=18]: {0.15647009596711228, -0.10291979788243277, 1.9533011586803928E16}
(Final BLEU[j=18]: 0.8212926668280485)

+++ Optimization of lambda[j=19] starting @ Tue Oct 27 10:41:09 JST 2015 +++
Initial lambda[j=19]: {-0.8834296944416113, 0.3073471861931083, -0.08254985860243691}
(Initial BLEU[j=19]: 0.7586206259471697)

Final lambda[j=19]: {0.31294019193422457, 0.3073471861931083, 3.727735622419076E16}
(Final BLEU[j=19]: 0.8212926668280485)

+++ Optimization of lambda[j=20] starting @ Tue Oct 27 10:41:09 JST 2015 +++
Initial lambda[j=20]: {-0.2916952155637593, -0.8022503514522665, -0.33852947919372234}
(Initial BLEU[j=20]: 0.7584236051774417)

Final lambda[j=20]: {0.15647009596711228, -0.8022503514522665, 1.2308423101325852E16}
(Final BLEU[j=20]: 0.8212003989239001)

Best final lambda is lambda[j=1] (BLEU: 0.8213).

---  Z-MERT iteration #1 ending @ Tue Oct 27 10:41:09 JST 2015  ---

Next iteration will decode with lambda: {0.04380951991658247, 0.2, 5.44823856470895E15}

--- Starting Z-MERT iteration #2 @ Tue Oct 27 10:41:09 JST 2015 ---
Redecoding using weight vector {0.04380951991658247, 0.2, 5.44823856470895E15}
Running decoder...
...finished decoding @ Tue Oct 27 10:41:10 JST 2015
Reading candidate translations from iterations 1-2
(and computing BLEU sufficient statistics for previously unseen candidates)
  Progress: ...+...+...
Warning: attempt to delete ZMERT.temp.stats.mergedKnown was unsuccessful!
Processed 7763 distinct candidates (about 26 per sentence):
newCandidatesAdded[it=1] = 7763 (about 26 per sentence)
newCandidatesAdded[it=2] = 0 (about 0 per sentence)

No new candidates added in this iteration; exiting Z-MERT.

---  Z-MERT iteration #2 ending @ Tue Oct 27 10:41:11 JST 2015  ---


----------------------------------------------------
Z-MERT run ended @ Tue Oct 27 10:41:11 JST 2015
----------------------------------------------------

FINAL lambda: {0.04380951991658247, 0.2, 5.44823856470895E15} (BLEU: 0.8212926668280485)

(OP Lamda) : [0.04380951991658247,0.2,5.44823856470895E15]
Number of candidates => 200
tmpDirPrefix: ZMERT.
Processed the following args array:
  -r ref -rps 4 -p params.txt -m BLEU 4 closest -maxIt 15 -ipi 20 -cmd SDecoder_cmd.bat -decOut nbest.out -dcfg SDecoder_cfg.txt -N 10 -v 1 -seed 12341234 

----------------------------------------------------
Initializing...
----------------------------------------------------

Random number generator initialized using seed: 12341234

$$ decoderCommand: java SimpleDecoder SDecoder_cfg.txt nbest.out
Number of sentences: 200
Number of documents: 1
Optimizing BLEU
docSubsetInfo: {0, 1, 1, 1, 1, 0, 0}
Number of features: 3
Feature names: {"RD","Word Model","Headword Model"}

c    Default value	Optimizable?	Crit. val. range	Rand. val. range
1     0.1000		 Yes		 [-Infinity,Infinity]		 [-1.0,1.0]
2     0.2000		 Yes		 [-Infinity,Infinity]		 [-1.0,1.0]
3     -0.1000		 Yes		 [-Infinity,Infinity]		 [-1.0,1.0]

Weight vector normalization method: none.

----------------------------------------------------

----------------------------------------------------
Z-MERT run started @ Tue Oct 27 10:41:12 JST 2015
----------------------------------------------------

Initial lambda[]: {0.1, 0.2, -0.1}

--- Starting Z-MERT iteration #1 @ Tue Oct 27 10:41:12 JST 2015 ---
Decoding using initial weight vector {0.1, 0.2, -0.1}
Running decoder...
...finished decoding @ Tue Oct 27 10:41:12 JST 2015
Reading candidate translations from iterations 1-1
(and computing BLEU sufficient statistics for previously unseen candidates)
  Progress: Size: 2425
...+...+
Warning: attempt to delete ZMERT.temp.stats.unknown was unsuccessful!
Warning: attempt to delete ZMERT.temp.stats.mergedKnown was unsuccessful!
Processed 2425 distinct candidates (about 12 per sentence):
newCandidatesAdded[it=1] = 2425 (about 12 per sentence)

+++ Optimization of lambda[j=1] starting @ Tue Oct 27 10:41:13 JST 2015 +++
Initial lambda[j=1]: {0.1, 0.2, -0.1}
(Initial BLEU[j=1]: 0.8068531009827984)

Final lambda[j=1]: {0.1, 0.2, 5.752625189551698E15}
(Final BLEU[j=1]: 0.8271968687033173)

+++ Optimization of lambda[j=2] starting @ Tue Oct 27 10:41:13 JST 2015 +++
Initial lambda[j=2]: {-0.017230818545013626, -0.6577977590753961, 0.46016061237234096}
(Initial BLEU[j=2]: 0.7813064823907225)

Final lambda[j=2]: {4.3383624355222495E-18, -0.6577977590753961, 0.46016061237234096}
(Final BLEU[j=2]: 0.827427560187975)

+++ Optimization of lambda[j=3] starting @ Tue Oct 27 10:41:13 JST 2015 +++
Initial lambda[j=3]: {-0.5203200954373215, 0.09518077619965482, -0.059473491599185246}
(Initial BLEU[j=3]: 0.7743658608643853)

Final lambda[j=3]: {0.15630597958412928, 0.09518077619965482, 1.8691931777463612E16}
(Final BLEU[j=3]: 0.827427560187975)

+++ Optimization of lambda[j=4] starting @ Tue Oct 27 10:41:13 JST 2015 +++
Initial lambda[j=4]: {-0.6919952429797738, -0.8743327758402839, -0.6393613928095458}
(Initial BLEU[j=4]: 0.7743658608643853)

Final lambda[j=4]: {0.31261195916825857, -0.8743327758402839, 2.4859174161312828E16}
(Final BLEU[j=4]: 0.827427560187975)

+++ Optimization of lambda[j=5] starting @ Tue Oct 27 10:41:13 JST 2015 +++
Initial lambda[j=5]: {0.7737957524668755, 0.6493837878144797, -0.5778133794884044}
(Initial BLEU[j=5]: 0.8068531009827984)

Final lambda[j=5]: {0.31261195916825857, 0.6493837878144797, 4.4513569372090576E16}
(Final BLEU[j=5]: 0.827427560187975)

+++ Optimization of lambda[j=6] starting @ Tue Oct 27 10:41:13 JST 2015 +++
Initial lambda[j=6]: {0.2815800420089276, 0.15636862697411513, 0.6539535776649275}
(Initial BLEU[j=6]: 0.8150865458235481)

Final lambda[j=6]: {8.676724871044499E-18, 0.15636862697411513, 0.6539535776649275}
(Final BLEU[j=6]: 0.827427560187975)

+++ Optimization of lambda[j=7] starting @ Tue Oct 27 10:41:13 JST 2015 +++
Initial lambda[j=7]: {0.32669861662639876, 0.009245077311689887, -0.9330111163449395}
(Initial BLEU[j=7]: 0.8063098138310354)

Final lambda[j=7]: {0.15630597958412928, 0.009245077311689887, 1.8793746913967144E16}
(Final BLEU[j=7]: 0.827427560187975)

+++ Optimization of lambda[j=8] starting @ Tue Oct 27 10:41:13 JST 2015 +++
Initial lambda[j=8]: {0.6515944996339995, 0.08804197789590318, 0.9795005730080566}
(Initial BLEU[j=8]: 0.8150865458235481)

Final lambda[j=8]: {8.676724871044499E-18, 0.08804197789590318, 0.9795005730080566}
(Final BLEU[j=8]: 0.827427560187975)

+++ Optimization of lambda[j=9] starting @ Tue Oct 27 10:41:13 JST 2015 +++
Initial lambda[j=9]: {-0.004553671263154424, 0.8593774528720801, -0.01427276865927607}
(Initial BLEU[j=9]: 0.7743658608643853)

Final lambda[j=9]: {0.00244228093100202, 0.8593774528720801, 2.6157874970646606E14}
(Final BLEU[j=9]: 0.827427560187975)

+++ Optimization of lambda[j=10] starting @ Tue Oct 27 10:41:13 JST 2015 +++
Initial lambda[j=10]: {0.5053771649119221, -0.5713556223455967, -0.8739358729264859}
(Initial BLEU[j=10]: 0.8068531009827984)

Final lambda[j=10]: {0.5053771649119221, -0.5713556223455967, 2.9072454090965456E16}
(Final BLEU[j=10]: 0.8271968687033173)

+++ Optimization of lambda[j=11] starting @ Tue Oct 27 10:41:13 JST 2015 +++
Initial lambda[j=11]: {0.7980226618452084, -0.399205792984231, -0.5477913765324938}
(Initial BLEU[j=11]: 0.8068531009827984)

Final lambda[j=11]: {0.6252239183365171, -0.399205792984231, 4.5907252663638432E16}
(Final BLEU[j=11]: 0.827427560187975)

+++ Optimization of lambda[j=12] starting @ Tue Oct 27 10:41:13 JST 2015 +++
Initial lambda[j=12]: {0.594593012768021, -0.2974935383022126, 0.3275255626321376}
(Initial BLEU[j=12]: 0.8150865458235481)

Final lambda[j=12]: {0.31261195916825857, -0.2974935383022126, 3.420470742780752E16}
(Final BLEU[j=12]: 0.827427560187975)

+++ Optimization of lambda[j=13] starting @ Tue Oct 27 10:41:13 JST 2015 +++
Initial lambda[j=13]: {-0.21052430917292875, 0.981831267676273, -0.8102868749874037}
(Initial BLEU[j=13]: 0.7743658608643853)

Final lambda[j=13]: {0.07815298979206464, 0.981831267676273, 7.562856132340308E15}
(Final BLEU[j=13]: 0.827427560187975)

+++ Optimization of lambda[j=14] starting @ Tue Oct 27 10:41:13 JST 2015 +++
Initial lambda[j=14]: {0.03753776574773382, 0.00790321507749736, 0.03620028521108054}
(Initial BLEU[j=14]: 0.8150368772241998)

Final lambda[j=14]: {0.01953824744801616, 0.00790321507749736, 2.1594069679990448E15}
(Final BLEU[j=14]: 0.827427560187975)

+++ Optimization of lambda[j=15] starting @ Tue Oct 27 10:41:13 JST 2015 +++
Initial lambda[j=15]: {0.009954244141451962, 0.02541025170060851, 0.593645578752771}
(Initial BLEU[j=15]: 0.8150865458235481)

Final lambda[j=15]: {4.3383624355222495E-18, 0.02541025170060851, 0.593645578752771}
(Final BLEU[j=15]: 0.827427560187975)

+++ Optimization of lambda[j=16] starting @ Tue Oct 27 10:41:13 JST 2015 +++
Initial lambda[j=16]: {0.6576106932759427, 0.17534745529356877, -0.6893751690924723}
(Initial BLEU[j=16]: 0.8063098138310354)

Final lambda[j=16]: {0.31261195916825857, 0.17534745529356877, 3.7829878390577424E16}
(Final BLEU[j=16]: 0.827427560187975)

+++ Optimization of lambda[j=17] starting @ Tue Oct 27 10:41:13 JST 2015 +++
Initial lambda[j=17]: {-0.871756060640207, -0.8495287747458757, -0.3964594524802063}
(Initial BLEU[j=17]: 0.7743658608643853)

Final lambda[j=17]: {0.31261195916825857, -0.8495287747458757, 3.1316885422965712E16}
(Final BLEU[j=17]: 0.827427560187975)

+++ Optimization of lambda[j=18] starting @ Tue Oct 27 10:41:13 JST 2015 +++
Initial lambda[j=18]: {-0.4629095033959656, -0.10291979788243277, -0.8706362780408492}
(Initial BLEU[j=18]: 0.7743658608643853)

Final lambda[j=18]: {0.15630597958412928, -0.10291979788243277, 1.66295188913365E16}
(Final BLEU[j=18]: 0.827427560187975)

+++ Optimization of lambda[j=19] starting @ Tue Oct 27 10:41:13 JST 2015 +++
Initial lambda[j=19]: {-0.8834296944416113, 0.3073471861931083, -0.08254985860243691}
(Initial BLEU[j=19]: 0.7743658608643853)

Final lambda[j=19]: {0.31261195916825857, 0.3073471861931083, 3.1736247981752808E16}
(Final BLEU[j=19]: 0.827427560187975)

+++ Optimization of lambda[j=20] starting @ Tue Oct 27 10:41:13 JST 2015 +++
Initial lambda[j=20]: {-0.2916952155637593, -0.8022503514522665, -0.33852947919372234}
(Initial BLEU[j=20]: 0.7743658608643853)

Final lambda[j=20]: {0.07815298979206464, -0.8022503514522665, 1.0478832389795964E16}
(Final BLEU[j=20]: 0.827427560187975)

Best final lambda is lambda[j=2] (BLEU: 0.8274).

---  Z-MERT iteration #1 ending @ Tue Oct 27 10:41:13 JST 2015  ---

Next iteration will decode with lambda: {4.3383624355222495E-18, -0.6577977590753961, 0.46016061237234096}

--- Starting Z-MERT iteration #2 @ Tue Oct 27 10:41:13 JST 2015 ---
Redecoding using weight vector {4.3383624355222495E-18, -0.6577977590753961, 0.46016061237234096}
Running decoder...
...finished decoding @ Tue Oct 27 10:41:14 JST 2015
Reading candidate translations from iterations 1-2
(and computing BLEU sufficient statistics for previously unseen candidates)
  Progress: ...+...+
Warning: attempt to delete ZMERT.temp.stats.mergedKnown was unsuccessful!
Processed 2425 distinct candidates (about 12 per sentence):
newCandidatesAdded[it=1] = 2425 (about 12 per sentence)
newCandidatesAdded[it=2] = 0 (about 0 per sentence)

No new candidates added in this iteration; exiting Z-MERT.

---  Z-MERT iteration #2 ending @ Tue Oct 27 10:41:14 JST 2015  ---


----------------------------------------------------
Z-MERT run ended @ Tue Oct 27 10:41:14 JST 2015
----------------------------------------------------

FINAL lambda: {4.3383624355222495E-18, -0.6577977590753961, 0.46016061237234096} (BLEU: 0.827427560187975)

(OP Lamda) : [4.3383624355222495E-18,-0.6577977590753961,0.46016061237234096]
Number of candidates => 118
tmpDirPrefix: ZMERT.
Processed the following args array:
  -r ref -rps 4 -p params.txt -m BLEU 4 closest -maxIt 15 -ipi 20 -cmd SDecoder_cmd.bat -decOut nbest.out -dcfg SDecoder_cfg.txt -N 10 -v 1 -seed 12341234 

----------------------------------------------------
Initializing...
----------------------------------------------------

Random number generator initialized using seed: 12341234

$$ decoderCommand: java SimpleDecoder SDecoder_cfg.txt nbest.out
Number of sentences: 118
Number of documents: 1
Optimizing BLEU
docSubsetInfo: {0, 1, 1, 1, 1, 0, 0}
Number of features: 3
Feature names: {"RD","Word Model","Headword Model"}

c    Default value	Optimizable?	Crit. val. range	Rand. val. range
1     0.1000		 Yes		 [-Infinity,Infinity]		 [-1.0,1.0]
2     0.2000		 Yes		 [-Infinity,Infinity]		 [-1.0,1.0]
3     -0.1000		 Yes		 [-Infinity,Infinity]		 [-1.0,1.0]

Weight vector normalization method: none.

----------------------------------------------------

----------------------------------------------------
Z-MERT run started @ Tue Oct 27 10:41:14 JST 2015
----------------------------------------------------

Initial lambda[]: {0.1, 0.2, -0.1}

--- Starting Z-MERT iteration #1 @ Tue Oct 27 10:41:14 JST 2015 ---
Decoding using initial weight vector {0.1, 0.2, -0.1}
Running decoder...
...finished decoding @ Tue Oct 27 10:41:15 JST 2015
Reading candidate translations from iterations 1-1
(and computing BLEU sufficient statistics for previously unseen candidates)
  Progress: Size: 2526
...+
Warning: attempt to delete ZMERT.temp.stats.unknown was unsuccessful!
Warning: attempt to delete ZMERT.temp.stats.mergedKnown was unsuccessful!
Processed 2526 distinct candidates (about 21 per sentence):
newCandidatesAdded[it=1] = 2526 (about 21 per sentence)

+++ Optimization of lambda[j=1] starting @ Tue Oct 27 10:41:15 JST 2015 +++
Initial lambda[j=1]: {0.1, 0.2, -0.1}
(Initial BLEU[j=1]: 0.8031499441786497)

Final lambda[j=1]: {0.1, 0.2, 4.3733651988802156E14}
(Final BLEU[j=1]: 0.8271080971468279)

+++ Optimization of lambda[j=2] starting @ Tue Oct 27 10:41:15 JST 2015 +++
Initial lambda[j=2]: {-0.017230818545013626, -0.6577977590753961, 0.46016061237234096}
(Initial BLEU[j=2]: 0.7871841147095197)

Final lambda[j=2]: {5.144779586612399E-17, -0.6577977590753961, 0.46016061237234096}
(Final BLEU[j=2]: 0.8271080971468279)

+++ Optimization of lambda[j=3] starting @ Tue Oct 27 10:41:15 JST 2015 +++
Initial lambda[j=3]: {-0.5203200954373215, 0.09518077619965482, -0.059473491599185246}
(Initial BLEU[j=3]: 0.7835858400826642)

Final lambda[j=3]: {0.30893369905561247, 0.09518077619965482, 2.713020635644027E15}
(Final BLEU[j=3]: 0.8271080971468279)

+++ Optimization of lambda[j=4] starting @ Tue Oct 27 10:41:15 JST 2015 +++
Initial lambda[j=4]: {-0.6919952429797738, -0.8743327758402839, -0.6393613928095458}
(Initial BLEU[j=4]: 0.7835858400826642)

Final lambda[j=4]: {0.41191159874081656, -0.8743327758402839, 3.608158497883315E15}
(Final BLEU[j=4]: 0.8271080971468279)

+++ Optimization of lambda[j=5] starting @ Tue Oct 27 10:41:15 JST 2015 +++
Initial lambda[j=5]: {0.7737957524668755, 0.6493837878144797, -0.5778133794884044}
(Initial BLEU[j=5]: 0.8031499441786497)

Final lambda[j=5]: {0.25744474921301036, 0.6493837878144797, 2.265332344706374E15}
(Final BLEU[j=5]: 0.8271080971468279)

+++ Optimization of lambda[j=6] starting @ Tue Oct 27 10:41:15 JST 2015 +++
Initial lambda[j=6]: {0.2815800420089276, 0.15636862697411513, 0.6539535776649275}
(Initial BLEU[j=6]: 0.8135502458849357)

Final lambda[j=6]: {6.859706115483199E-17, 0.15636862697411513, 0.6539535776649275}
(Final BLEU[j=6]: 0.8271080971468279)

+++ Optimization of lambda[j=7] starting @ Tue Oct 27 10:41:15 JST 2015 +++
Initial lambda[j=7]: {0.32669861662639876, 0.009245077311689887, -0.9330111163449395}
(Initial BLEU[j=7]: 0.8031499441786497)

Final lambda[j=7]: {0.10297789968520414, 0.009245077311689887, 9.564293172393578E14}
(Final BLEU[j=7]: 0.8271080971468279)

+++ Optimization of lambda[j=8] starting @ Tue Oct 27 10:41:15 JST 2015 +++
Initial lambda[j=8]: {0.6515944996339995, 0.08804197789590318, 0.9795005730080566}
(Initial BLEU[j=8]: 0.8135502458849357)

Final lambda[j=8]: {1.143284352580533E-16, 0.08804197789590318, 0.9795005730080566}
(Final BLEU[j=8]: 0.8271080971468279)

+++ Optimization of lambda[j=9] starting @ Tue Oct 27 10:41:15 JST 2015 +++
Initial lambda[j=9]: {-0.004553671263154424, 0.8593774528720801, -0.01427276865927607}
(Initial BLEU[j=9]: 0.7835858400826642)

Final lambda[j=9]: {0.00965417809548789, 0.8593774528720801, 8.749789345114738E13}
(Final BLEU[j=9]: 0.8271080971468279)

+++ Optimization of lambda[j=10] starting @ Tue Oct 27 10:41:15 JST 2015 +++
Initial lambda[j=10]: {0.5053771649119221, -0.5713556223455967, -0.8739358729264859}
(Initial BLEU[j=10]: 0.8031499441786497)

Final lambda[j=10]: {0.15446684952780623, -0.5713556223455967, 1.4795212228823818E15}
(Final BLEU[j=10]: 0.8271080971468279)

+++ Optimization of lambda[j=11] starting @ Tue Oct 27 10:41:15 JST 2015 +++
Initial lambda[j=11]: {0.7980226618452084, -0.399205792984231, -0.5477913765324938}
(Initial BLEU[j=11]: 0.8031499441786497)

Final lambda[j=11]: {0.25744474921301036, -0.399205792984231, 2.3362580395709985E15}
(Final BLEU[j=11]: 0.8271080971468279)

+++ Optimization of lambda[j=12] starting @ Tue Oct 27 10:41:15 JST 2015 +++
Initial lambda[j=12]: {0.594593012768021, -0.2974935383022126, 0.3275255626321376}
(Initial BLEU[j=12]: 0.8135502458849357)

Final lambda[j=12]: {4.0014952340318656E-17, -0.2974935383022126, 0.225}
(Final BLEU[j=12]: 0.8271080971468279)

+++ Optimization of lambda[j=13] starting @ Tue Oct 27 10:41:15 JST 2015 +++
Initial lambda[j=13]: {-0.21052430917292875, 0.981831267676273, -0.8102868749874037}
(Initial BLEU[j=13]: 0.7835858400826642)

Final lambda[j=13]: {0.12872237460650518, 0.981831267676273, 1.0977027412535545E15}
(Final BLEU[j=13]: 0.8271080971468279)

+++ Optimization of lambda[j=14] starting @ Tue Oct 27 10:41:16 JST 2015 +++
Initial lambda[j=14]: {0.03753776574773382, 0.00790321507749736, 0.03620028521108054}
(Initial BLEU[j=14]: 0.8135502458849357)

Final lambda[j=14]: {0.03753776574773382, 0.00790321507749736, 1.6416635836485688E14}
(Final BLEU[j=14]: 0.8271080971468279)

+++ Optimization of lambda[j=15] starting @ Tue Oct 27 10:41:16 JST 2015 +++
Initial lambda[j=15]: {0.009954244141451962, 0.02541025170060851, 0.593645578752771}
(Initial BLEU[j=15]: 0.813621301411696)

Final lambda[j=15]: {6.859706115483199E-17, 0.02541025170060851, 0.593645578752771}
(Final BLEU[j=15]: 0.8271080971468279)

+++ Optimization of lambda[j=16] starting @ Tue Oct 27 10:41:16 JST 2015 +++
Initial lambda[j=16]: {0.6576106932759427, 0.17534745529356877, -0.6893751690924723}
(Initial BLEU[j=16]: 0.8031499441786497)

Final lambda[j=16]: {0.23170027429170933, 0.17534745529356877, 1.9251937852509038E15}
(Final BLEU[j=16]: 0.8271080971468279)

+++ Optimization of lambda[j=17] starting @ Tue Oct 27 10:41:16 JST 2015 +++
Initial lambda[j=17]: {-0.871756060640207, -0.8495287747458757, -0.3964594524802063}
(Initial BLEU[j=17]: 0.7835858400826642)

Final lambda[j=17]: {0.5663784482686228, -0.8495287747458757, 4.545456157669255E15}
(Final BLEU[j=17]: 0.8271080971468279)

+++ Optimization of lambda[j=18] starting @ Tue Oct 27 10:41:16 JST 2015 +++
Initial lambda[j=18]: {-0.4629095033959656, -0.10291979788243277, -0.8706362780408492}
(Initial BLEU[j=18]: 0.7835858400826642)

Final lambda[j=18]: {0.15446684952780623, -0.10291979788243277, 1.4548052726764492E15}
(Final BLEU[j=18]: 0.8271080971468279)

+++ Optimization of lambda[j=19] starting @ Tue Oct 27 10:41:16 JST 2015 +++
Initial lambda[j=19]: {-0.8834296944416113, 0.3073471861931083, -0.08254985860243691}
(Initial BLEU[j=19]: 0.7835858400826642)

Final lambda[j=19]: {0.5663784482686228, 0.3073471861931083, 4.606324091992535E15}
(Final BLEU[j=19]: 0.8271080971468279)

+++ Optimization of lambda[j=20] starting @ Tue Oct 27 10:41:16 JST 2015 +++
Initial lambda[j=20]: {-0.2916952155637593, -0.8022503514522665, -0.33852947919372234}
(Initial BLEU[j=20]: 0.7835858400826642)

Final lambda[j=20]: {0.18021132444910726, -0.8022503514522665, 1.5209390259624175E15}
(Final BLEU[j=20]: 0.8271080971468279)

Best final lambda is lambda[j=1] (BLEU: 0.8271).

---  Z-MERT iteration #1 ending @ Tue Oct 27 10:41:16 JST 2015  ---

Next iteration will decode with lambda: {0.1, 0.2, 4.3733651988802156E14}

--- Starting Z-MERT iteration #2 @ Tue Oct 27 10:41:16 JST 2015 ---
Redecoding using weight vector {0.1, 0.2, 4.3733651988802156E14}
Running decoder...
...finished decoding @ Tue Oct 27 10:41:16 JST 2015
Reading candidate translations from iterations 1-2
(and computing BLEU sufficient statistics for previously unseen candidates)
  Progress: ...+
Warning: attempt to delete ZMERT.temp.stats.mergedKnown was unsuccessful!
Processed 2526 distinct candidates (about 21 per sentence):
newCandidatesAdded[it=1] = 2526 (about 21 per sentence)
newCandidatesAdded[it=2] = 0 (about 0 per sentence)

No new candidates added in this iteration; exiting Z-MERT.

---  Z-MERT iteration #2 ending @ Tue Oct 27 10:41:16 JST 2015  ---


----------------------------------------------------
Z-MERT run ended @ Tue Oct 27 10:41:16 JST 2015
----------------------------------------------------

FINAL lambda: {0.1, 0.2, 4.3733651988802156E14} (BLEU: 0.8271080971468279)

(OP Lamda) : [0.1,0.2,4.3733651988802156E14]
Number of candidates => 67
tmpDirPrefix: ZMERT.
Processed the following args array:
  -r ref -rps 4 -p params.txt -m BLEU 4 closest -maxIt 15 -ipi 20 -cmd SDecoder_cmd.bat -decOut nbest.out -dcfg SDecoder_cfg.txt -N 10 -v 1 -seed 12341234 

----------------------------------------------------
Initializing...
----------------------------------------------------

Random number generator initialized using seed: 12341234

$$ decoderCommand: java SimpleDecoder SDecoder_cfg.txt nbest.out
Number of sentences: 67
Number of documents: 1
Optimizing BLEU
docSubsetInfo: {0, 1, 1, 1, 1, 0, 0}
Number of features: 3
Feature names: {"RD","Word Model","Headword Model"}

c    Default value	Optimizable?	Crit. val. range	Rand. val. range
1     0.1000		 Yes		 [-Infinity,Infinity]		 [-1.0,1.0]
2     0.2000		 Yes		 [-Infinity,Infinity]		 [-1.0,1.0]
3     -0.1000		 Yes		 [-Infinity,Infinity]		 [-1.0,1.0]

Weight vector normalization method: none.

----------------------------------------------------

----------------------------------------------------
Z-MERT run started @ Tue Oct 27 10:41:17 JST 2015
----------------------------------------------------

Initial lambda[]: {0.1, 0.2, -0.1}

--- Starting Z-MERT iteration #1 @ Tue Oct 27 10:41:17 JST 2015 ---
Decoding using initial weight vector {0.1, 0.2, -0.1}
Running decoder...
...finished decoding @ Tue Oct 27 10:41:17 JST 2015
Reading candidate translations from iterations 1-1
(and computing BLEU sufficient statistics for previously unseen candidates)
  Progress: Size: 841
..
Warning: attempt to delete ZMERT.temp.stats.unknown was unsuccessful!
Warning: attempt to delete ZMERT.temp.stats.mergedKnown was unsuccessful!
Processed 841 distinct candidates (about 12 per sentence):
newCandidatesAdded[it=1] = 841 (about 12 per sentence)

+++ Optimization of lambda[j=1] starting @ Tue Oct 27 10:41:17 JST 2015 +++
Initial lambda[j=1]: {0.1, 0.2, -0.1}
(Initial BLEU[j=1]: 0.7966209299271624)

Final lambda[j=1]: {0.04156976080758715, 0.2, 3.074896374925797E15}
(Final BLEU[j=1]: 0.8137530486134666)

+++ Optimization of lambda[j=2] starting @ Tue Oct 27 10:41:17 JST 2015 +++
Initial lambda[j=2]: {-0.017230818545013626, -0.6577977590753961, 0.46016061237234096}
(Initial BLEU[j=2]: 0.7758803126375615)

Final lambda[j=2]: {4.615170557674369E-18, -0.6577977590753961, 0.46016061237234096}
(Final BLEU[j=2]: 0.8137530486134666)

+++ Optimization of lambda[j=3] starting @ Tue Oct 27 10:41:17 JST 2015 +++
Initial lambda[j=3]: {-0.5203200954373215, 0.09518077619965482, -0.059473491599185246}
(Initial BLEU[j=3]: 0.7722150994254059)

Final lambda[j=3]: {0.1662790432303486, 0.09518077619965482, 1.6413493792421576E16}
(Final BLEU[j=3]: 0.8137530486134666)

+++ Optimization of lambda[j=4] starting @ Tue Oct 27 10:41:17 JST 2015 +++
Initial lambda[j=4]: {-0.6919952429797738, -0.8743327758402839, -0.6393613928095458}
(Initial BLEU[j=4]: 0.7725801185508009)

Final lambda[j=4]: {0.1662790432303486, -0.8743327758402839, 2.1828985127871132E16}
(Final BLEU[j=4]: 0.8137530486134666)

+++ Optimization of lambda[j=5] starting @ Tue Oct 27 10:41:17 JST 2015 +++
Initial lambda[j=5]: {0.7737957524668755, 0.6493837878144797, -0.5778133794884044}
(Initial BLEU[j=5]: 0.7966209299271624)

Final lambda[j=5]: {0.7737957524668755, 0.6493837878144797, 2.3793417541933744E16}
(Final BLEU[j=5]: 0.8133953874485507)

+++ Optimization of lambda[j=6] starting @ Tue Oct 27 10:41:17 JST 2015 +++
Initial lambda[j=6]: {0.2815800420089276, 0.15636862697411513, 0.6539535776649275}
(Initial BLEU[j=6]: 0.8036714351671543)

Final lambda[j=6]: {9.230341115348739E-18, 0.15636862697411513, 0.6539535776649275}
(Final BLEU[j=6]: 0.8137530486134666)

+++ Optimization of lambda[j=7] starting @ Tue Oct 27 10:41:17 JST 2015 +++
Initial lambda[j=7]: {0.32669861662639876, 0.009245077311689887, -0.9330111163449395}
(Initial BLEU[j=7]: 0.797342032475588)

Final lambda[j=7]: {0.0831395216151743, 0.009245077311689887, 1.004564391957786E16}
(Final BLEU[j=7]: 0.8137530486134666)

+++ Optimization of lambda[j=8] starting @ Tue Oct 27 10:41:17 JST 2015 +++
Initial lambda[j=8]: {0.6515944996339995, 0.08804197789590318, 0.9795005730080566}
(Initial BLEU[j=8]: 0.8036714351671543)

Final lambda[j=8]: {9.230341115348739E-18, 0.08804197789590318, 0.9795005730080566}
(Final BLEU[j=8]: 0.8137530486134666)

+++ Optimization of lambda[j=9] starting @ Tue Oct 27 10:41:17 JST 2015 +++
Initial lambda[j=9]: {-0.004553671263154424, 0.8593774528720801, -0.01427276865927607}
(Initial BLEU[j=9]: 0.7722150994254059)

Final lambda[j=9]: {0.0025981100504741967, 0.8593774528720801, 2.6191171032517006E14}
(Final BLEU[j=9]: 0.8137530486134666)

+++ Optimization of lambda[j=10] starting @ Tue Oct 27 10:41:17 JST 2015 +++
Initial lambda[j=10]: {0.5053771649119221, -0.5713556223455967, -0.8739358729264859}
(Initial BLEU[j=10]: 0.797342032475588)

Final lambda[j=10]: {0.1662790432303486, -0.5713556223455967, 1.5539824123579456E16}
(Final BLEU[j=10]: 0.8137530486134666)

+++ Optimization of lambda[j=11] starting @ Tue Oct 27 10:41:17 JST 2015 +++
Initial lambda[j=11]: {0.7980226618452084, -0.399205792984231, -0.5477913765324938}
(Initial BLEU[j=11]: 0.7966209299271624)

Final lambda[j=11]: {0.3325580864606972, -0.399205792984231, 2.4538369900164664E16}
(Final BLEU[j=11]: 0.8137530486134666)

+++ Optimization of lambda[j=12] starting @ Tue Oct 27 10:41:17 JST 2015 +++
Initial lambda[j=12]: {0.594593012768021, -0.2974935383022126, 0.3275255626321376}
(Initial BLEU[j=12]: 0.8036714351671543)

Final lambda[j=12]: {4.615170557674369E-18, -0.2974935383022126, 0.3275255626321376}
(Final BLEU[j=12]: 0.8137530486134666)

+++ Optimization of lambda[j=13] starting @ Tue Oct 27 10:41:17 JST 2015 +++
Initial lambda[j=13]: {-0.21052430917292875, 0.981831267676273, -0.8102868749874037}
(Initial BLEU[j=13]: 0.7725801185508009)

Final lambda[j=13]: {0.0831395216151743, 0.981831267676273, 6.640987868937602E15}
(Final BLEU[j=13]: 0.8137530486134666)

+++ Optimization of lambda[j=14] starting @ Tue Oct 27 10:41:17 JST 2015 +++
Initial lambda[j=14]: {0.03753776574773382, 0.00790321507749736, 0.03620028521108054}
(Initial BLEU[j=14]: 0.8036714351671543)

Final lambda[j=14]: {3.1980221407780524E-18, 0.00790321507749736, 0.2296875}
(Final BLEU[j=14]: 0.8137530486134666)

+++ Optimization of lambda[j=15] starting @ Tue Oct 27 10:41:17 JST 2015 +++
Initial lambda[j=15]: {0.009954244141451962, 0.02541025170060851, 0.593645578752771}
(Initial BLEU[j=15]: 0.8036714351671543)

Final lambda[j=15]: {4.615170557674369E-18, 0.02541025170060851, 0.593645578752771}
(Final BLEU[j=15]: 0.8137530486134666)

+++ Optimization of lambda[j=16] starting @ Tue Oct 27 10:41:17 JST 2015 +++
Initial lambda[j=16]: {0.6576106932759427, 0.17534745529356877, -0.6893751690924723}
(Initial BLEU[j=16]: 0.7966209299271624)

Final lambda[j=16]: {0.1662790432303486, 0.17534745529356877, 2.022084736866636E16}
(Final BLEU[j=16]: 0.8137530486134666)

+++ Optimization of lambda[j=17] starting @ Tue Oct 27 10:41:17 JST 2015 +++
Initial lambda[j=17]: {-0.871756060640207, -0.8495287747458757, -0.3964594524802063}
(Initial BLEU[j=17]: 0.7722150994254059)

Final lambda[j=17]: {0.3325580864606972, -0.8495287747458757, 2.7499538870967088E16}
(Final BLEU[j=17]: 0.8137530486134666)

+++ Optimization of lambda[j=18] starting @ Tue Oct 27 10:41:17 JST 2015 +++
Initial lambda[j=18]: {-0.4629095033959656, -0.10291979788243277, -0.8706362780408492}
(Initial BLEU[j=18]: 0.7722150994254059)

Final lambda[j=18]: {0.1662790432303486, -0.10291979788243277, 1.4602477065692914E16}
(Final BLEU[j=18]: 0.8137530486134666)

+++ Optimization of lambda[j=19] starting @ Tue Oct 27 10:41:17 JST 2015 +++
Initial lambda[j=19]: {-0.8834296944416113, 0.3073471861931083, -0.08254985860243691}
(Initial BLEU[j=19]: 0.7722150994254059)

Final lambda[j=19]: {0.3325580864606972, 0.3073471861931083, 2.7867783568057464E16}
(Final BLEU[j=19]: 0.8137530486134666)

+++ Optimization of lambda[j=20] starting @ Tue Oct 27 10:41:17 JST 2015 +++
Initial lambda[j=20]: {-0.2916952155637593, -0.8022503514522665, -0.33852947919372234}
(Initial BLEU[j=20]: 0.7722150994254059)

Final lambda[j=20]: {0.0831395216151743, -0.8022503514522665, 9.201523546598396E15}
(Final BLEU[j=20]: 0.8137530486134666)

Best final lambda is lambda[j=1] (BLEU: 0.8138).

---  Z-MERT iteration #1 ending @ Tue Oct 27 10:41:17 JST 2015  ---

Next iteration will decode with lambda: {0.04156976080758715, 0.2, 3.074896374925797E15}

--- Starting Z-MERT iteration #2 @ Tue Oct 27 10:41:17 JST 2015 ---
Redecoding using weight vector {0.04156976080758715, 0.2, 3.074896374925797E15}
Running decoder...
...finished decoding @ Tue Oct 27 10:41:18 JST 2015
Reading candidate translations from iterations 1-2
(and computing BLEU sufficient statistics for previously unseen candidates)
  Progress: ..
Warning: attempt to delete ZMERT.temp.stats.mergedKnown was unsuccessful!
Processed 841 distinct candidates (about 12 per sentence):
newCandidatesAdded[it=1] = 841 (about 12 per sentence)
newCandidatesAdded[it=2] = 0 (about 0 per sentence)

No new candidates added in this iteration; exiting Z-MERT.

---  Z-MERT iteration #2 ending @ Tue Oct 27 10:41:18 JST 2015  ---


----------------------------------------------------
Z-MERT run ended @ Tue Oct 27 10:41:18 JST 2015
----------------------------------------------------

FINAL lambda: {0.04156976080758715, 0.2, 3.074896374925797E15} (BLEU: 0.8137530486134666)

(OP Lamda) : [0.04156976080758715,0.2,3.074896374925797E15]
Number of candidates => 28
tmpDirPrefix: ZMERT.
Processed the following args array:
  -r ref -rps 4 -p params.txt -m BLEU 4 closest -maxIt 15 -ipi 20 -cmd SDecoder_cmd.bat -decOut nbest.out -dcfg SDecoder_cfg.txt -N 10 -v 1 -seed 12341234 

----------------------------------------------------
Initializing...
----------------------------------------------------

Random number generator initialized using seed: 12341234

$$ decoderCommand: java SimpleDecoder SDecoder_cfg.txt nbest.out
Number of sentences: 28
Number of documents: 1
Optimizing BLEU
docSubsetInfo: {0, 1, 1, 1, 1, 0, 0}
Number of features: 3
Feature names: {"RD","Word Model","Headword Model"}

c    Default value	Optimizable?	Crit. val. range	Rand. val. range
1     0.1000		 Yes		 [-Infinity,Infinity]		 [-1.0,1.0]
2     0.2000		 Yes		 [-Infinity,Infinity]		 [-1.0,1.0]
3     -0.1000		 Yes		 [-Infinity,Infinity]		 [-1.0,1.0]

Weight vector normalization method: none.

----------------------------------------------------

----------------------------------------------------
Z-MERT run started @ Tue Oct 27 10:41:18 JST 2015
----------------------------------------------------

Initial lambda[]: {0.1, 0.2, -0.1}

--- Starting Z-MERT iteration #1 @ Tue Oct 27 10:41:18 JST 2015 ---
Decoding using initial weight vector {0.1, 0.2, -0.1}
Running decoder...
...finished decoding @ Tue Oct 27 10:41:18 JST 2015
Reading candidate translations from iterations 1-1
(and computing BLEU sufficient statistics for previously unseen candidates)
  Progress: Size: 361
.
Warning: attempt to delete ZMERT.temp.stats.unknown was unsuccessful!
Warning: attempt to delete ZMERT.temp.stats.mergedKnown was unsuccessful!
Processed 361 distinct candidates (about 12 per sentence):
newCandidatesAdded[it=1] = 361 (about 12 per sentence)

+++ Optimization of lambda[j=1] starting @ Tue Oct 27 10:41:18 JST 2015 +++
Initial lambda[j=1]: {0.1, 0.2, -0.1}
(Initial BLEU[j=1]: 0.8255450151157742)

Final lambda[j=1]: {0.1, 0.2, 4.104483912769569E13}
(Final BLEU[j=1]: 0.8339932219487743)

+++ Optimization of lambda[j=2] starting @ Tue Oct 27 10:41:18 JST 2015 +++
Initial lambda[j=2]: {-0.017230818545013626, -0.6577977590753961, 0.46016061237234096}
(Initial BLEU[j=2]: 0.8018129833270048)

Final lambda[j=2]: {-0.017230818545013626, -0.6577977590753961, 3.8893099797262324E12}
(Final BLEU[j=2]: 0.8352815834749604)

+++ Optimization of lambda[j=3] starting @ Tue Oct 27 10:41:18 JST 2015 +++
Initial lambda[j=3]: {-0.5203200954373215, 0.09518077619965482, -0.059473491599185246}
(Initial BLEU[j=3]: 0.800204855999261)

Final lambda[j=3]: {-0.5203200954373215, 0.09518077619965482, 1.1744573448729652E14}
(Final BLEU[j=3]: 0.8352815834749604)

+++ Optimization of lambda[j=4] starting @ Tue Oct 27 10:41:18 JST 2015 +++
Initial lambda[j=4]: {-0.6919952429797738, -0.8743327758402839, -0.6393613928095458}
(Initial BLEU[j=4]: 0.800204855999261)

Final lambda[j=4]: {-0.6919952429797738, -0.8743327758402839, 1.561959460842405E14}
(Final BLEU[j=4]: 0.8352815834749604)

+++ Optimization of lambda[j=5] starting @ Tue Oct 27 10:41:18 JST 2015 +++
Initial lambda[j=5]: {0.7737957524668755, 0.6493837878144797, -0.5778133794884044}
(Initial BLEU[j=5]: 0.8255450151157742)

Final lambda[j=5]: {0.7737957524668755, 0.6493837878144797, 3.17603221776971E14}
(Final BLEU[j=5]: 0.8339932219487743)

+++ Optimization of lambda[j=6] starting @ Tue Oct 27 10:41:18 JST 2015 +++
Initial lambda[j=6]: {0.2815800420089276, 0.15636862697411513, 0.6539535776649275}
(Initial BLEU[j=6]: 0.8287865192268846)

Final lambda[j=6]: {7.9694015298893E-16, 0.15636862697411513, 0.6539535776649275}
(Final BLEU[j=6]: 0.8339932219487743)

+++ Optimization of lambda[j=7] starting @ Tue Oct 27 10:41:18 JST 2015 +++
Initial lambda[j=7]: {0.32669861662639876, 0.009245077311689887, -0.9330111163449395}
(Initial BLEU[j=7]: 0.8255450151157742)

Final lambda[j=7]: {0.32669861662639876, 0.009245077311689887, 1.340929216267125E14}
(Final BLEU[j=7]: 0.8339932219487743)

+++ Optimization of lambda[j=8] starting @ Tue Oct 27 10:41:18 JST 2015 +++
Initial lambda[j=8]: {0.6515944996339995, 0.08804197789590318, 0.9795005730080566}
(Initial BLEU[j=8]: 0.8287865192268846)

Final lambda[j=8]: {1.1840253701549819E-15, 0.08804197789590318, 0.9795005730080566}
(Final BLEU[j=8]: 0.8339932219487743)

+++ Optimization of lambda[j=9] starting @ Tue Oct 27 10:41:18 JST 2015 +++
Initial lambda[j=9]: {-0.004553671263154424, 0.8593774528720801, -0.01427276865927607}
(Initial BLEU[j=9]: 0.800204855999261)

Final lambda[j=9]: {0.0012517785212184471, 0.8593774528720801, 1.0278466482548479E12}
(Final BLEU[j=9]: 0.8339932219487743)

+++ Optimization of lambda[j=10] starting @ Tue Oct 27 10:41:18 JST 2015 +++
Initial lambda[j=10]: {0.5053771649119221, -0.5713556223455967, -0.8739358729264859}
(Initial BLEU[j=10]: 0.8255450151157742)

Final lambda[j=10]: {0.5053771649119221, -0.5713556223455967, 2.074312443262075E14}
(Final BLEU[j=10]: 0.8339932219487743)

+++ Optimization of lambda[j=11] starting @ Tue Oct 27 10:41:18 JST 2015 +++
Initial lambda[j=11]: {0.7980226618452084, -0.399205792984231, -0.5477913765324938}
(Initial BLEU[j=11]: 0.8255450151157742)

Final lambda[j=11]: {0.7980226618452084, -0.399205792984231, 3.275471177569204E14}
(Final BLEU[j=11]: 0.8339932219487743)

+++ Optimization of lambda[j=12] starting @ Tue Oct 27 10:41:18 JST 2015 +++
Initial lambda[j=12]: {0.594593012768021, -0.2974935383022126, 0.3275255626321376}
(Initial BLEU[j=12]: 0.8271343681860972)

Final lambda[j=12]: {4.041625061586717E-16, -0.2974935383022126, 0.3275255626321376}
(Final BLEU[j=12]: 0.8339932219487743)

+++ Optimization of lambda[j=13] starting @ Tue Oct 27 10:41:18 JST 2015 +++
Initial lambda[j=13]: {-0.21052430917292875, 0.981831267676273, -0.8102868749874037}
(Initial BLEU[j=13]: 0.800204855999261)

Final lambda[j=13]: {0.05768195425774604, 0.981831267676273, 4.751917585936053E13}
(Final BLEU[j=13]: 0.8339932219487743)

+++ Optimization of lambda[j=14] starting @ Tue Oct 27 10:41:18 JST 2015 +++
Initial lambda[j=14]: {0.03753776574773382, 0.00790321507749736, 0.03620028521108054}
(Initial BLEU[j=14]: 0.8287865192268846)

Final lambda[j=14]: {4.411632989760149E-17, 0.00790321507749736, 0.03620028521108054}
(Final BLEU[j=14]: 0.8339932219487743)

+++ Optimization of lambda[j=15] starting @ Tue Oct 27 10:41:18 JST 2015 +++
Initial lambda[j=15]: {0.009954244141451962, 0.02541025170060851, 0.593645578752771}
(Initial BLEU[j=15]: 0.8287865192268846)

Final lambda[j=15]: {7.229385673542437E-16, 0.02541025170060851, 0.593645578752771}
(Final BLEU[j=15]: 0.8339932219487743)

+++ Optimization of lambda[j=16] starting @ Tue Oct 27 10:41:18 JST 2015 +++
Initial lambda[j=16]: {0.6576106932759427, 0.17534745529356877, -0.6893751690924723}
(Initial BLEU[j=16]: 0.8255450151157742)

Final lambda[j=16]: {0.6576106932759427, 0.17534745529356877, 2.6991525114163456E14}
(Final BLEU[j=16]: 0.8339932219487743)

+++ Optimization of lambda[j=17] starting @ Tue Oct 27 10:41:18 JST 2015 +++
Initial lambda[j=17]: {-0.871756060640207, -0.8495287747458757, -0.3964594524802063}
(Initial BLEU[j=17]: 0.800204855999261)

Final lambda[j=17]: {0.24034147607394185, -0.8495287747458757, 1.96771240883151E14}
(Final BLEU[j=17]: 0.8339932219487743)

+++ Optimization of lambda[j=18] starting @ Tue Oct 27 10:41:18 JST 2015 +++
Initial lambda[j=18]: {-0.4629095033959656, -0.10291979788243277, -0.8706362780408492}
(Initial BLEU[j=18]: 0.800204855999261)

Final lambda[j=18]: {0.12657984406560938, -0.10291979788243277, 1.0448711688099303E14}
(Final BLEU[j=18]: 0.8339932219487743)

+++ Optimization of lambda[j=19] starting @ Tue Oct 27 10:41:18 JST 2015 +++
Initial lambda[j=19]: {-0.8834296944416113, 0.3073471861931083, -0.08254985860243691}
(Initial BLEU[j=19]: 0.800204855999261)

Final lambda[j=19]: {0.24354602908826106, 0.3073471861931083, 1.9940619292126E14}
(Final BLEU[j=19]: 0.8339932219487743)

+++ Optimization of lambda[j=20] starting @ Tue Oct 27 10:41:18 JST 2015 +++
Initial lambda[j=20]: {-0.2916952155637593, -0.8022503514522665, -0.33852947919372234}
(Initial BLEU[j=20]: 0.800204855999261)

Final lambda[j=20]: {0.08091496361156042, -0.8022503514522665, 6.584092972523453E13}
(Final BLEU[j=20]: 0.8339932219487743)

Best final lambda is lambda[j=2] (BLEU: 0.8353).

---  Z-MERT iteration #1 ending @ Tue Oct 27 10:41:18 JST 2015  ---

Next iteration will decode with lambda: {-0.017230818545013626, -0.6577977590753961, 3.8893099797262324E12}

--- Starting Z-MERT iteration #2 @ Tue Oct 27 10:41:18 JST 2015 ---
Redecoding using weight vector {-0.017230818545013626, -0.6577977590753961, 3.8893099797262324E12}
Running decoder...
...finished decoding @ Tue Oct 27 10:41:19 JST 2015
Reading candidate translations from iterations 1-2
(and computing BLEU sufficient statistics for previously unseen candidates)
  Progress: .
Warning: attempt to delete ZMERT.temp.stats.unknown was unsuccessful!
Warning: attempt to delete ZMERT.temp.stats.mergedKnown was unsuccessful!
Processed 361 distinct candidates (about 12 per sentence):
newCandidatesAdded[it=1] = 361 (about 12 per sentence)
newCandidatesAdded[it=2] = 0 (about 0 per sentence)

No new candidates added in this iteration; exiting Z-MERT.

---  Z-MERT iteration #2 ending @ Tue Oct 27 10:41:19 JST 2015  ---


----------------------------------------------------
Z-MERT run ended @ Tue Oct 27 10:41:19 JST 2015
----------------------------------------------------

FINAL lambda: {-0.017230818545013626, -0.6577977590753961, 3.8893099797262324E12} (BLEU: 0.8352815834749604)

(OP Lamda) : [-0.017230818545013626,-0.6577977590753961,3.8893099797262324E12]
Number of candidates => 15
tmpDirPrefix: ZMERT.
Processed the following args array:
  -r ref -rps 4 -p params.txt -m BLEU 4 closest -maxIt 15 -ipi 20 -cmd SDecoder_cmd.bat -decOut nbest.out -dcfg SDecoder_cfg.txt -N 10 -v 1 -seed 12341234 

----------------------------------------------------
Initializing...
----------------------------------------------------

Random number generator initialized using seed: 12341234

$$ decoderCommand: java SimpleDecoder SDecoder_cfg.txt nbest.out
Number of sentences: 15
Number of documents: 1
Optimizing BLEU
docSubsetInfo: {0, 1, 1, 1, 1, 0, 0}
Number of features: 3
Feature names: {"RD","Word Model","Headword Model"}

c    Default value	Optimizable?	Crit. val. range	Rand. val. range
1     0.1000		 Yes		 [-Infinity,Infinity]		 [-1.0,1.0]
2     0.2000		 Yes		 [-Infinity,Infinity]		 [-1.0,1.0]
3     -0.1000		 Yes		 [-Infinity,Infinity]		 [-1.0,1.0]

Weight vector normalization method: none.

----------------------------------------------------

----------------------------------------------------
Z-MERT run started @ Tue Oct 27 10:41:19 JST 2015
----------------------------------------------------

Initial lambda[]: {0.1, 0.2, -0.1}

--- Starting Z-MERT iteration #1 @ Tue Oct 27 10:41:19 JST 2015 ---
Decoding using initial weight vector {0.1, 0.2, -0.1}
Running decoder...
...finished decoding @ Tue Oct 27 10:41:19 JST 2015
Reading candidate translations from iterations 1-1
(and computing BLEU sufficient statistics for previously unseen candidates)
  Progress: Size: 74

Warning: attempt to delete ZMERT.temp.stats.unknown was unsuccessful!
Warning: attempt to delete ZMERT.temp.stats.mergedKnown was unsuccessful!
Processed 74 distinct candidates (about 4 per sentence):
newCandidatesAdded[it=1] = 74 (about 4 per sentence)

+++ Optimization of lambda[j=1] starting @ Tue Oct 27 10:41:19 JST 2015 +++
Initial lambda[j=1]: {0.1, 0.2, -0.1}
(Initial BLEU[j=1]: 0.848919633709986)

Final lambda[j=1]: {0.1, 0.2, 6.382284855764272E14}
(Final BLEU[j=1]: 0.8626653885447875)

+++ Optimization of lambda[j=2] starting @ Tue Oct 27 10:41:19 JST 2015 +++
Initial lambda[j=2]: {-0.017230818545013626, -0.6577977590753961, 0.46016061237234096}
(Initial BLEU[j=2]: 0.8249901002156383)

Final lambda[j=2]: {8.250784026057312E-18, -0.6577977590753961, 0.46016061237234096}
(Final BLEU[j=2]: 0.8626653885447875)

+++ Optimization of lambda[j=3] starting @ Tue Oct 27 10:41:19 JST 2015 +++
Initial lambda[j=3]: {-0.5203200954373215, 0.09518077619965482, -0.059473491599185246}
(Initial BLEU[j=3]: 0.822070677286207)

Final lambda[j=3]: {0.04219388039384911, 0.09518077619965482, 2.713433469290508E15}
(Final BLEU[j=3]: 0.8626653885447875)

+++ Optimization of lambda[j=4] starting @ Tue Oct 27 10:41:19 JST 2015 +++
Initial lambda[j=4]: {-0.6919952429797738, -0.8743327758402839, -0.6393613928095458}
(Initial BLEU[j=4]: 0.822070677286207)

Final lambda[j=4]: {0.06928080320194938, -0.8743327758402839, 3.608707542446482E15}
(Final BLEU[j=4]: 0.8626653885447875)

+++ Optimization of lambda[j=5] starting @ Tue Oct 27 10:41:19 JST 2015 +++
Initial lambda[j=5]: {0.7737957524668755, 0.6493837878144797, -0.5778133794884044}
(Initial BLEU[j=5]: 0.848919633709986)

Final lambda[j=5]: {0.03967605412955763, 0.6493837878144797, 2.469292456212029E15}
(Final BLEU[j=5]: 0.8626653885447875)

+++ Optimization of lambda[j=6] starting @ Tue Oct 27 10:41:19 JST 2015 +++
Initial lambda[j=6]: {0.2815800420089276, 0.15636862697411513, 0.6539535776649275}
(Initial BLEU[j=6]: 0.8596924462223581)

Final lambda[j=6]: {2.2939880817988823E-17, 0.15636862697411513, 0.6539535776649275}
(Final BLEU[j=6]: 0.8626653885447875)

+++ Optimization of lambda[j=7] starting @ Tue Oct 27 10:41:19 JST 2015 +++
Initial lambda[j=7]: {0.32669861662639876, 0.009245077311689887, -0.9330111163449395}
(Initial BLEU[j=7]: 0.848919633709986)

Final lambda[j=7]: {0.02960474907239173, 0.009245077311689887, 1.0425418166469012E15}
(Final BLEU[j=7]: 0.8626653885447875)

+++ Optimization of lambda[j=8] starting @ Tue Oct 27 10:41:19 JST 2015 +++
Initial lambda[j=8]: {0.6515944996339995, 0.08804197789590318, 0.9795005730080566}
(Initial BLEU[j=8]: 0.8596924462223581)

Final lambda[j=8]: {2.6294299246735636E-17, 0.08804197789590318, 0.9795005730080566}
(Final BLEU[j=8]: 0.8626653885447875)

+++ Optimization of lambda[j=9] starting @ Tue Oct 27 10:41:19 JST 2015 +++
Initial lambda[j=9]: {-0.004553671263154424, 0.8593774528720801, -0.01427276865927607}
(Initial BLEU[j=9]: 0.822070677286207)

Final lambda[j=9]: {-0.004553671263154424, 0.8593774528720801, 4.374529863568989E13}
(Final BLEU[j=9]: 0.8626653885447875)

+++ Optimization of lambda[j=10] starting @ Tue Oct 27 10:41:19 JST 2015 +++
Initial lambda[j=10]: {0.5053771649119221, -0.5713556223455967, -0.8739358729264859}
(Initial BLEU[j=10]: 0.848919633709986)

Final lambda[j=10]: {0.054173845616200506, -0.5713556223455967, 1.6127305130332215E15}
(Final BLEU[j=10]: 0.8626653885447875)

+++ Optimization of lambda[j=11] starting @ Tue Oct 27 10:41:19 JST 2015 +++
Initial lambda[j=11]: {0.7980226618452084, -0.399205792984231, -0.5477913765324938}
(Initial BLEU[j=11]: 0.848919633709986)

Final lambda[j=11]: {0.06172732440907491, -0.399205792984231, 2.546603974625683E15}
(Final BLEU[j=11]: 0.8626653885447875)

+++ Optimization of lambda[j=12] starting @ Tue Oct 27 10:41:19 JST 2015 +++
Initial lambda[j=12]: {0.594593012768021, -0.2974935383022126, 0.3275255626321376}
(Initial BLEU[j=12]: 0.8596924462223581)

Final lambda[j=12]: {7.132644549808378E-18, -0.2974935383022126, 0.3275255626321376}
(Final BLEU[j=12]: 0.8626653885447875)

+++ Optimization of lambda[j=13] starting @ Tue Oct 27 10:41:19 JST 2015 +++
Initial lambda[j=13]: {-0.21052430917292875, 0.981831267676273, -0.8102868749874037}
(Initial BLEU[j=13]: 0.822070677286207)

Final lambda[j=13]: {0.02960474907239173, 0.981831267676273, 1.0978697759673602E15}
(Final BLEU[j=13]: 0.8626653885447875)

+++ Optimization of lambda[j=14] starting @ Tue Oct 27 10:41:19 JST 2015 +++
Initial lambda[j=14]: {0.03753776574773382, 0.00790321507749736, 0.03620028521108054}
(Initial BLEU[j=14]: 0.8596924462223581)

Final lambda[j=14]: {8.216968514604886E-19, 0.00790321507749736, 0.03620028521108054}
(Final BLEU[j=14]: 0.8626653885447875)

+++ Optimization of lambda[j=15] starting @ Tue Oct 27 10:41:19 JST 2015 +++
Initial lambda[j=15]: {0.009954244141451962, 0.02541025170060851, 0.593645578752771}
(Initial BLEU[j=15]: 0.8596924462223581)

Final lambda[j=15]: {1.8602584958802786E-17, 0.02541025170060851, 0.593645578752771}
(Final BLEU[j=15]: 0.8626653885447875)

+++ Optimization of lambda[j=16] starting @ Tue Oct 27 10:41:19 JST 2015 +++
Initial lambda[j=16]: {0.6576106932759427, 0.17534745529356877, -0.6893751690924723}
(Initial BLEU[j=16]: 0.848919633709986)

Final lambda[j=16]: {0.05922265773281571, 0.17534745529356877, 2.098529384341846E15}
(Final BLEU[j=16]: 0.8626653885447875)

+++ Optimization of lambda[j=17] starting @ Tue Oct 27 10:41:19 JST 2015 +++
Initial lambda[j=17]: {-0.871756060640207, -0.8495287747458757, -0.3964594524802063}
(Initial BLEU[j=17]: 0.822070677286207)

Final lambda[j=17]: {0.1625215368486015, -0.8495287747458757, 4.54614782850133E15}
(Final BLEU[j=17]: 0.8626653885447875)

+++ Optimization of lambda[j=18] starting @ Tue Oct 27 10:41:19 JST 2015 +++
Initial lambda[j=18]: {-0.4629095033959656, -0.10291979788243277, -0.8706362780408492}
(Initial BLEU[j=18]: 0.822070677286207)

Final lambda[j=18]: {0.05920949814478346, -0.10291979788243277, 2.414041184996995E15}
(Final BLEU[j=18]: 0.8626653885447875)

+++ Optimization of lambda[j=19] starting @ Tue Oct 27 10:41:19 JST 2015 +++
Initial lambda[j=19]: {-0.8834296944416113, 0.3073471861931083, -0.08254985860243691}
(Initial BLEU[j=19]: 0.822070677286207)

Final lambda[j=19]: {0.12345464881814983, 0.3073471861931083, 4.607025024947775E15}
(Final BLEU[j=19]: 0.8626653885447875)

+++ Optimization of lambda[j=20] starting @ Tue Oct 27 10:41:19 JST 2015 +++
Initial lambda[j=20]: {-0.2916952155637593, -0.8022503514522665, -0.33852947919372234}
(Initial BLEU[j=20]: 0.822070677286207)

Final lambda[j=20]: {0.054173845616200506, -0.8022503514522665, 1.5211704634958862E15}
(Final BLEU[j=20]: 0.8626653885447875)

Best final lambda is lambda[j=1] (BLEU: 0.8627).

---  Z-MERT iteration #1 ending @ Tue Oct 27 10:41:19 JST 2015  ---

Next iteration will decode with lambda: {0.1, 0.2, 6.382284855764272E14}

--- Starting Z-MERT iteration #2 @ Tue Oct 27 10:41:19 JST 2015 ---
Redecoding using weight vector {0.1, 0.2, 6.382284855764272E14}
Running decoder...
...finished decoding @ Tue Oct 27 10:41:19 JST 2015
Reading candidate translations from iterations 1-2
(and computing BLEU sufficient statistics for previously unseen candidates)
  Progress: 
Warning: attempt to delete ZMERT.temp.stats.unknown was unsuccessful!
Warning: attempt to delete ZMERT.temp.stats.mergedKnown was unsuccessful!
Processed 74 distinct candidates (about 4 per sentence):
newCandidatesAdded[it=1] = 74 (about 4 per sentence)
newCandidatesAdded[it=2] = 0 (about 0 per sentence)

No new candidates added in this iteration; exiting Z-MERT.

---  Z-MERT iteration #2 ending @ Tue Oct 27 10:41:19 JST 2015  ---


----------------------------------------------------
Z-MERT run ended @ Tue Oct 27 10:41:19 JST 2015
----------------------------------------------------

FINAL lambda: {0.1, 0.2, 6.382284855764272E14} (BLEU: 0.8626653885447875)

(OP Lamda) : [0.1,0.2,6.382284855764272E14]
Number of candidates => 8
tmpDirPrefix: ZMERT.
Processed the following args array:
  -r ref -rps 4 -p params.txt -m BLEU 4 closest -maxIt 15 -ipi 20 -cmd SDecoder_cmd.bat -decOut nbest.out -dcfg SDecoder_cfg.txt -N 10 -v 1 -seed 12341234 

----------------------------------------------------
Initializing...
----------------------------------------------------

Random number generator initialized using seed: 12341234

$$ decoderCommand: java SimpleDecoder SDecoder_cfg.txt nbest.out
Number of sentences: 8
Number of documents: 1
Optimizing BLEU
docSubsetInfo: {0, 1, 1, 1, 1, 0, 0}
Number of features: 3
Feature names: {"RD","Word Model","Headword Model"}

c    Default value	Optimizable?	Crit. val. range	Rand. val. range
1     0.1000		 Yes		 [-Infinity,Infinity]		 [-1.0,1.0]
2     0.2000		 Yes		 [-Infinity,Infinity]		 [-1.0,1.0]
3     -0.1000		 Yes		 [-Infinity,Infinity]		 [-1.0,1.0]

Weight vector normalization method: none.

----------------------------------------------------

----------------------------------------------------
Z-MERT run started @ Tue Oct 27 10:41:19 JST 2015
----------------------------------------------------

Initial lambda[]: {0.1, 0.2, -0.1}

--- Starting Z-MERT iteration #1 @ Tue Oct 27 10:41:19 JST 2015 ---
Decoding using initial weight vector {0.1, 0.2, -0.1}
Running decoder...
...finished decoding @ Tue Oct 27 10:41:19 JST 2015
Reading candidate translations from iterations 1-1
(and computing BLEU sufficient statistics for previously unseen candidates)
  Progress: Size: 52

Warning: attempt to delete ZMERT.temp.stats.unknown was unsuccessful!
Warning: attempt to delete ZMERT.temp.stats.mergedKnown was unsuccessful!
Processed 52 distinct candidates (about 6 per sentence):
newCandidatesAdded[it=1] = 52 (about 6 per sentence)

+++ Optimization of lambda[j=1] starting @ Tue Oct 27 10:41:19 JST 2015 +++
Initial lambda[j=1]: {0.1, 0.2, -0.1}
(Initial BLEU[j=1]: 0.8700377656474493)

Final lambda[j=1]: {0.1, 0.2, -0.1}
(Final BLEU[j=1]: 0.8700377656474493)

+++ Optimization of lambda[j=2] starting @ Tue Oct 27 10:41:19 JST 2015 +++
Initial lambda[j=2]: {-0.017230818545013626, -0.6577977590753961, 0.46016061237234096}
(Initial BLEU[j=2]: 0.8330710287340123)

Final lambda[j=2]: {1.447069752995375E-14, -0.6577977590753961, 0.46016061237234096}
(Final BLEU[j=2]: 0.8700377656474493)

+++ Optimization of lambda[j=3] starting @ Tue Oct 27 10:41:19 JST 2015 +++
Initial lambda[j=3]: {-0.5203200954373215, 0.09518077619965482, -0.059473491599185246}
(Initial BLEU[j=3]: 0.8330710287340123)

Final lambda[j=3]: {0.05000019808857066, 0.09518077619965482, 3.974858333550954E11}
(Final BLEU[j=3]: 0.8700377656474493)

+++ Optimization of lambda[j=4] starting @ Tue Oct 27 10:41:19 JST 2015 +++
Initial lambda[j=4]: {-0.6919952429797738, -0.8743327758402839, -0.6393613928095458}
(Initial BLEU[j=4]: 0.8330710287340123)

Final lambda[j=4]: {0.050002129523272085, -0.8743327758402839, 3.975011876529025E11}
(Final BLEU[j=4]: 0.8700377656474493)

+++ Optimization of lambda[j=5] starting @ Tue Oct 27 10:41:19 JST 2015 +++
Initial lambda[j=5]: {0.7737957524668755, 0.6493837878144797, -0.5778133794884044}
(Initial BLEU[j=5]: 0.8700377656474493)

Final lambda[j=5]: {0.7737957524668755, 0.6493837878144797, -0.5778133794884044}
(Final BLEU[j=5]: 0.8700377656474493)

+++ Optimization of lambda[j=6] starting @ Tue Oct 27 10:41:19 JST 2015 +++
Initial lambda[j=6]: {0.2815800420089276, 0.15636862697411513, 0.6539535776649275}
(Initial BLEU[j=6]: 0.8700377656474493)

Final lambda[j=6]: {0.2815800420089276, 0.15636862697411513, 0.6539535776649275}
(Final BLEU[j=6]: 0.8700377656474493)

+++ Optimization of lambda[j=7] starting @ Tue Oct 27 10:41:19 JST 2015 +++
Initial lambda[j=7]: {0.32669861662639876, 0.009245077311689887, -0.9330111163449395}
(Initial BLEU[j=7]: 0.8628416930896428)

Final lambda[j=7]: {0.32669861662639876, 0.009245077311689887, 2.5971511483948433E12}
(Final BLEU[j=7]: 0.8700377656474493)

+++ Optimization of lambda[j=8] starting @ Tue Oct 27 10:41:19 JST 2015 +++
Initial lambda[j=8]: {0.6515944996339995, 0.08804197789590318, 0.9795005730080566}
(Initial BLEU[j=8]: 0.8700377656474493)

Final lambda[j=8]: {0.6515944996339995, 0.08804197789590318, 0.9795005730080566}
(Final BLEU[j=8]: 0.8700377656474493)

+++ Optimization of lambda[j=9] starting @ Tue Oct 27 10:41:19 JST 2015 +++
Initial lambda[j=9]: {-0.004553671263154424, 0.8593774528720801, -0.01427276865927607}
(Initial BLEU[j=9]: 0.8330710287340123)

Final lambda[j=9]: {0.050000047538361486, 0.8593774528720801, -0.01427276865927607}
(Final BLEU[j=9]: 0.8700377656474493)

+++ Optimization of lambda[j=10] starting @ Tue Oct 27 10:41:19 JST 2015 +++
Initial lambda[j=10]: {0.5053771649119221, -0.5713556223455967, -0.8739358729264859}
(Initial BLEU[j=10]: 0.8700377656474493)

Final lambda[j=10]: {0.5053771649119221, -0.5713556223455967, -0.8739358729264859}
(Final BLEU[j=10]: 0.8700377656474493)

+++ Optimization of lambda[j=11] starting @ Tue Oct 27 10:41:19 JST 2015 +++
Initial lambda[j=11]: {0.7980226618452084, -0.399205792984231, -0.5477913765324938}
(Initial BLEU[j=11]: 0.8700377656474493)

Final lambda[j=11]: {0.7980226618452084, -0.399205792984231, -0.5477913765324938}
(Final BLEU[j=11]: 0.8700377656474493)

+++ Optimization of lambda[j=12] starting @ Tue Oct 27 10:41:19 JST 2015 +++
Initial lambda[j=12]: {0.594593012768021, -0.2974935383022126, 0.3275255626321376}
(Initial BLEU[j=12]: 0.8700377656474493)

Final lambda[j=12]: {0.594593012768021, -0.2974935383022126, 0.3275255626321376}
(Final BLEU[j=12]: 0.8700377656474493)

+++ Optimization of lambda[j=13] starting @ Tue Oct 27 10:41:19 JST 2015 +++
Initial lambda[j=13]: {-0.21052430917292875, 0.981831267676273, -0.8102868749874037}
(Initial BLEU[j=13]: 0.8330710287340123)

Final lambda[j=13]: {0.05000269882538541, 0.981831267676273, 3.9750571342547125E11}
(Final BLEU[j=13]: 0.8700377656474493)

+++ Optimization of lambda[j=14] starting @ Tue Oct 27 10:41:19 JST 2015 +++
Initial lambda[j=14]: {0.03753776574773382, 0.00790321507749736, 0.03620028521108054}
(Initial BLEU[j=14]: 0.8700377656474493)

Final lambda[j=14]: {0.03753776574773382, 0.00790321507749736, 0.03620028521108054}
(Final BLEU[j=14]: 0.8700377656474493)

+++ Optimization of lambda[j=15] starting @ Tue Oct 27 10:41:19 JST 2015 +++
Initial lambda[j=15]: {0.009954244141451962, 0.02541025170060851, 0.593645578752771}
(Initial BLEU[j=15]: 0.8700377656474493)

Final lambda[j=15]: {0.009954244141451962, 0.02541025170060851, 0.593645578752771}
(Final BLEU[j=15]: 0.8700377656474493)

+++ Optimization of lambda[j=16] starting @ Tue Oct 27 10:41:19 JST 2015 +++
Initial lambda[j=16]: {0.6576106932759427, 0.17534745529356877, -0.6893751690924723}
(Initial BLEU[j=16]: 0.8700377656474493)

Final lambda[j=16]: {0.6576106932759427, 0.17534745529356877, -0.6893751690924723}
(Final BLEU[j=16]: 0.8700377656474493)

+++ Optimization of lambda[j=17] starting @ Tue Oct 27 10:41:19 JST 2015 +++
Initial lambda[j=17]: {-0.871756060640207, -0.8495287747458757, -0.3964594524802063}
(Initial BLEU[j=17]: 0.8330710287340123)

Final lambda[j=17]: {0.05000132048891283, -0.8495287747458757, 3.974947560844528E11}
(Final BLEU[j=17]: 0.8700377656474493)

+++ Optimization of lambda[j=18] starting @ Tue Oct 27 10:41:19 JST 2015 +++
Initial lambda[j=18]: {-0.4629095033959656, -0.10291979788243277, -0.8706362780408492}
(Initial BLEU[j=18]: 0.8330710287340123)

Final lambda[j=18]: {0.05000289983135746, -0.10291979788243277, 3.975073113596669E11}
(Final BLEU[j=18]: 0.8700377656474493)

+++ Optimization of lambda[j=19] starting @ Tue Oct 27 10:41:19 JST 2015 +++
Initial lambda[j=19]: {-0.8834296944416113, 0.3073471861931083, -0.08254985860243691}
(Initial BLEU[j=19]: 0.8330710287340123)

Final lambda[j=19]: {0.05000027494910857, 0.3073471861931083, 3.9748644437217395E11}
(Final BLEU[j=19]: 0.8700377656474493)

+++ Optimization of lambda[j=20] starting @ Tue Oct 27 10:41:19 JST 2015 +++
Initial lambda[j=20]: {-0.2916952155637593, -0.8022503514522665, -0.33852947919372234}
(Initial BLEU[j=20]: 0.8330710287340123)

Final lambda[j=20]: {0.05000112754134413, -0.8022503514522665, -0.33852947919372234}
(Final BLEU[j=20]: 0.8700377656474493)

Best final lambda is lambda[j=1] (BLEU: 0.8700).

---  Z-MERT iteration #1 ending @ Tue Oct 27 10:41:19 JST 2015  ---

No parameter value changed in this iteration; exiting Z-MERT.


----------------------------------------------------
Z-MERT run ended @ Tue Oct 27 10:41:19 JST 2015
----------------------------------------------------

FINAL lambda: {0.1, 0.2, -0.1} (BLEU: 0.8700377656474493)

(OP Lamda) : [0.1,0.2,-0.1]
Number of candidates => 3
tmpDirPrefix: ZMERT.
Processed the following args array:
  -r ref -rps 4 -p params.txt -m BLEU 4 closest -maxIt 15 -ipi 20 -cmd SDecoder_cmd.bat -decOut nbest.out -dcfg SDecoder_cfg.txt -N 10 -v 1 -seed 12341234 

----------------------------------------------------
Initializing...
----------------------------------------------------

Random number generator initialized using seed: 12341234

$$ decoderCommand: java SimpleDecoder SDecoder_cfg.txt nbest.out
Number of sentences: 3
Number of documents: 1
Optimizing BLEU
docSubsetInfo: {0, 1, 1, 1, 1, 0, 0}
Number of features: 3
Feature names: {"RD","Word Model","Headword Model"}

c    Default value	Optimizable?	Crit. val. range	Rand. val. range
1     0.1000		 Yes		 [-Infinity,Infinity]		 [-1.0,1.0]
2     0.2000		 Yes		 [-Infinity,Infinity]		 [-1.0,1.0]
3     -0.1000		 Yes		 [-Infinity,Infinity]		 [-1.0,1.0]

Weight vector normalization method: none.

----------------------------------------------------

----------------------------------------------------
Z-MERT run started @ Tue Oct 27 10:41:19 JST 2015
----------------------------------------------------

Initial lambda[]: {0.1, 0.2, -0.1}

--- Starting Z-MERT iteration #1 @ Tue Oct 27 10:41:19 JST 2015 ---
Decoding using initial weight vector {0.1, 0.2, -0.1}
Running decoder...
...finished decoding @ Tue Oct 27 10:41:20 JST 2015
Reading candidate translations from iterations 1-1
(and computing BLEU sufficient statistics for previously unseen candidates)
  Progress: Size: 4

Warning: attempt to delete ZMERT.temp.stats.unknown was unsuccessful!
Warning: attempt to delete ZMERT.temp.stats.mergedKnown was unsuccessful!
Processed 4 distinct candidates (about 1 per sentence):
newCandidatesAdded[it=1] = 4 (about 1 per sentence)

+++ Optimization of lambda[j=1] starting @ Tue Oct 27 10:41:20 JST 2015 +++
Initial lambda[j=1]: {0.1, 0.2, -0.1}
(Initial BLEU[j=1]: 0.9037664163933351)

Final lambda[j=1]: {0.1, 0.2, -0.1}
(Final BLEU[j=1]: 0.9037664163933351)

+++ Optimization of lambda[j=2] starting @ Tue Oct 27 10:41:20 JST 2015 +++
Initial lambda[j=2]: {-0.017230818545013626, -0.6577977590753961, 0.46016061237234096}
(Initial BLEU[j=2]: 0.8830710861889355)

Final lambda[j=2]: {0.049999996380437256, -0.6577977590753961, 0.46016061237234096}
(Final BLEU[j=2]: 0.9037664163933351)

+++ Optimization of lambda[j=3] starting @ Tue Oct 27 10:41:20 JST 2015 +++
Initial lambda[j=3]: {-0.5203200954373215, 0.09518077619965482, -0.059473491599185246}
(Initial BLEU[j=3]: 0.8830710861889355)

Final lambda[j=3]: {0.050000000467810654, 0.09518077619965482, -0.059473491599185246}
(Final BLEU[j=3]: 0.9037664163933351)

+++ Optimization of lambda[j=4] starting @ Tue Oct 27 10:41:20 JST 2015 +++
Initial lambda[j=4]: {-0.6919952429797738, -0.8743327758402839, -0.6393613928095458}
(Initial BLEU[j=4]: 0.8830710861889355)

Final lambda[j=4]: {0.05000000502913246, -0.8743327758402839, -0.6393613928095458}
(Final BLEU[j=4]: 0.9037664163933351)

+++ Optimization of lambda[j=5] starting @ Tue Oct 27 10:41:20 JST 2015 +++
Initial lambda[j=5]: {0.7737957524668755, 0.6493837878144797, -0.5778133794884044}
(Initial BLEU[j=5]: 0.9037664163933351)

Final lambda[j=5]: {0.7737957524668755, 0.6493837878144797, -0.5778133794884044}
(Final BLEU[j=5]: 0.9037664163933351)

+++ Optimization of lambda[j=6] starting @ Tue Oct 27 10:41:20 JST 2015 +++
Initial lambda[j=6]: {0.2815800420089276, 0.15636862697411513, 0.6539535776649275}
(Initial BLEU[j=6]: 0.9037664163933351)

Final lambda[j=6]: {0.2815800420089276, 0.15636862697411513, 0.6539535776649275}
(Final BLEU[j=6]: 0.9037664163933351)

+++ Optimization of lambda[j=7] starting @ Tue Oct 27 10:41:20 JST 2015 +++
Initial lambda[j=7]: {0.32669861662639876, 0.009245077311689887, -0.9330111163449395}
(Initial BLEU[j=7]: 0.9037664163933351)

Final lambda[j=7]: {0.32669861662639876, 0.009245077311689887, -0.9330111163449395}
(Final BLEU[j=7]: 0.9037664163933351)

+++ Optimization of lambda[j=8] starting @ Tue Oct 27 10:41:20 JST 2015 +++
Initial lambda[j=8]: {0.6515944996339995, 0.08804197789590318, 0.9795005730080566}
(Initial BLEU[j=8]: 0.9037664163933351)

Final lambda[j=8]: {0.6515944996339995, 0.08804197789590318, 0.9795005730080566}
(Final BLEU[j=8]: 0.9037664163933351)

+++ Optimization of lambda[j=9] starting @ Tue Oct 27 10:41:20 JST 2015 +++
Initial lambda[j=9]: {-0.004553671263154424, 0.8593774528720801, -0.01427276865927607}
(Initial BLEU[j=9]: 0.8830710861889355)

Final lambda[j=9]: {0.050000000112267726, 0.8593774528720801, -0.01427276865927607}
(Final BLEU[j=9]: 0.9037664163933351)

+++ Optimization of lambda[j=10] starting @ Tue Oct 27 10:41:20 JST 2015 +++
Initial lambda[j=10]: {0.5053771649119221, -0.5713556223455967, -0.8739358729264859}
(Initial BLEU[j=10]: 0.9037664163933351)

Final lambda[j=10]: {0.5053771649119221, -0.5713556223455967, -0.8739358729264859}
(Final BLEU[j=10]: 0.9037664163933351)

+++ Optimization of lambda[j=11] starting @ Tue Oct 27 10:41:20 JST 2015 +++
Initial lambda[j=11]: {0.7980226618452084, -0.399205792984231, -0.5477913765324938}
(Initial BLEU[j=11]: 0.9037664163933351)

Final lambda[j=11]: {0.7980226618452084, -0.399205792984231, -0.5477913765324938}
(Final BLEU[j=11]: 0.9037664163933351)

+++ Optimization of lambda[j=12] starting @ Tue Oct 27 10:41:20 JST 2015 +++
Initial lambda[j=12]: {0.594593012768021, -0.2974935383022126, 0.3275255626321376}
(Initial BLEU[j=12]: 0.9037664163933351)

Final lambda[j=12]: {0.594593012768021, -0.2974935383022126, 0.3275255626321376}
(Final BLEU[j=12]: 0.9037664163933351)

+++ Optimization of lambda[j=13] starting @ Tue Oct 27 10:41:20 JST 2015 +++
Initial lambda[j=13]: {-0.21052430917292875, 0.981831267676273, -0.8102868749874037}
(Initial BLEU[j=13]: 0.8830710861889355)

Final lambda[j=13]: {0.05000000637360981, 0.981831267676273, -0.8102868749874037}
(Final BLEU[j=13]: 0.9037664163933351)

+++ Optimization of lambda[j=14] starting @ Tue Oct 27 10:41:20 JST 2015 +++
Initial lambda[j=14]: {0.03753776574773382, 0.00790321507749736, 0.03620028521108054}
(Initial BLEU[j=14]: 0.9037664163933351)

Final lambda[j=14]: {0.03753776574773382, 0.00790321507749736, 0.03620028521108054}
(Final BLEU[j=14]: 0.9037664163933351)

+++ Optimization of lambda[j=15] starting @ Tue Oct 27 10:41:20 JST 2015 +++
Initial lambda[j=15]: {0.009954244141451962, 0.02541025170060851, 0.593645578752771}
(Initial BLEU[j=15]: 0.9037664163933351)

Final lambda[j=15]: {0.009954244141451962, 0.02541025170060851, 0.593645578752771}
(Final BLEU[j=15]: 0.9037664163933351)

+++ Optimization of lambda[j=16] starting @ Tue Oct 27 10:41:20 JST 2015 +++
Initial lambda[j=16]: {0.6576106932759427, 0.17534745529356877, -0.6893751690924723}
(Initial BLEU[j=16]: 0.9037664163933351)

Final lambda[j=16]: {0.6576106932759427, 0.17534745529356877, -0.6893751690924723}
(Final BLEU[j=16]: 0.9037664163933351)

+++ Optimization of lambda[j=17] starting @ Tue Oct 27 10:41:20 JST 2015 +++
Initial lambda[j=17]: {-0.871756060640207, -0.8495287747458757, -0.3964594524802063}
(Initial BLEU[j=17]: 0.8830710861889355)

Final lambda[j=17]: {0.050000003118497796, -0.8495287747458757, -0.3964594524802063}
(Final BLEU[j=17]: 0.9037664163933351)

+++ Optimization of lambda[j=18] starting @ Tue Oct 27 10:41:20 JST 2015 +++
Initial lambda[j=18]: {-0.4629095033959656, -0.10291979788243277, -0.8706362780408492}
(Initial BLEU[j=18]: 0.8830710861889355)

Final lambda[j=18]: {0.05000000684831024, -0.10291979788243277, -0.8706362780408492}
(Final BLEU[j=18]: 0.9037664163933351)

+++ Optimization of lambda[j=19] starting @ Tue Oct 27 10:41:20 JST 2015 +++
Initial lambda[j=19]: {-0.8834296944416113, 0.3073471861931083, -0.08254985860243691}
(Initial BLEU[j=19]: 0.8830710861889355)

Final lambda[j=19]: {0.05000000064932632, 0.3073471861931083, -0.08254985860243691}
(Final BLEU[j=19]: 0.9037664163933351)

+++ Optimization of lambda[j=20] starting @ Tue Oct 27 10:41:20 JST 2015 +++
Initial lambda[j=20]: {-0.2916952155637593, -0.8022503514522665, -0.33852947919372234}
(Initial BLEU[j=20]: 0.8830710861889355)

Final lambda[j=20]: {0.050000002662828294, -0.8022503514522665, -0.33852947919372234}
(Final BLEU[j=20]: 0.9037664163933351)

Best final lambda is lambda[j=1] (BLEU: 0.9038).

---  Z-MERT iteration #1 ending @ Tue Oct 27 10:41:20 JST 2015  ---

No parameter value changed in this iteration; exiting Z-MERT.


----------------------------------------------------
Z-MERT run ended @ Tue Oct 27 10:41:20 JST 2015
----------------------------------------------------

FINAL lambda: {0.1, 0.2, -0.1} (BLEU: 0.9037664163933351)

(OP Lamda) : [0.1,0.2,-0.1]
Number of candidates => 1
tmpDirPrefix: ZMERT.
Processed the following args array:
  -r ref -rps 4 -p params.txt -m BLEU 4 closest -maxIt 15 -ipi 20 -cmd SDecoder_cmd.bat -decOut nbest.out -dcfg SDecoder_cfg.txt -N 10 -v 1 -seed 12341234 

----------------------------------------------------
Initializing...
----------------------------------------------------

Random number generator initialized using seed: 12341234

$$ decoderCommand: java SimpleDecoder SDecoder_cfg.txt nbest.out
Number of sentences: 1
Number of documents: 1
Optimizing BLEU
docSubsetInfo: {0, 1, 1, 1, 1, 0, 0}
Number of features: 3
Feature names: {"RD","Word Model","Headword Model"}

c    Default value	Optimizable?	Crit. val. range	Rand. val. range
1     0.1000		 Yes		 [-Infinity,Infinity]		 [-1.0,1.0]
2     0.2000		 Yes		 [-Infinity,Infinity]		 [-1.0,1.0]
3     -0.1000		 Yes		 [-Infinity,Infinity]		 [-1.0,1.0]

Weight vector normalization method: none.

----------------------------------------------------

----------------------------------------------------
Z-MERT run started @ Tue Oct 27 10:41:20 JST 2015
----------------------------------------------------

Initial lambda[]: {0.1, 0.2, -0.1}

--- Starting Z-MERT iteration #1 @ Tue Oct 27 10:41:20 JST 2015 ---
Decoding using initial weight vector {0.1, 0.2, -0.1}
Running decoder...
...finished decoding @ Tue Oct 27 10:41:20 JST 2015
Reading candidate translations from iterations 1-1
(and computing BLEU sufficient statistics for previously unseen candidates)
  Progress: Size: 2

Warning: attempt to delete ZMERT.temp.stats.unknown was unsuccessful!
Warning: attempt to delete ZMERT.temp.stats.mergedKnown was unsuccessful!
Processed 2 distinct candidates (about 2 per sentence):
newCandidatesAdded[it=1] = 2 (about 2 per sentence)

+++ Optimization of lambda[j=1] starting @ Tue Oct 27 10:41:20 JST 2015 +++
Initial lambda[j=1]: {0.1, 0.2, -0.1}
(Initial BLEU[j=1]: 0.9426092134060646)

Final lambda[j=1]: {0.1, 0.2, -0.1}
(Final BLEU[j=1]: 0.9426092134060646)

+++ Optimization of lambda[j=2] starting @ Tue Oct 27 10:41:20 JST 2015 +++
Initial lambda[j=2]: {-0.017230818545013626, -0.6577977590753961, 0.46016061237234096}
(Initial BLEU[j=2]: 0.8916809066702428)

Final lambda[j=2]: {0.04999983683296236, -0.6577977590753961, 0.46016061237234096}
(Final BLEU[j=2]: 0.9426092134060646)

+++ Optimization of lambda[j=3] starting @ Tue Oct 27 10:41:20 JST 2015 +++
Initial lambda[j=3]: {-0.5203200954373215, 0.09518077619965482, -0.059473491599185246}
(Initial BLEU[j=3]: 0.8916809066702428)

Final lambda[j=3]: {0.05000002108853557, 0.09518077619965482, -0.059473491599185246}
(Final BLEU[j=3]: 0.9426092134060646)

+++ Optimization of lambda[j=4] starting @ Tue Oct 27 10:41:20 JST 2015 +++
Initial lambda[j=4]: {-0.6919952429797738, -0.8743327758402839, -0.6393613928095458}
(Initial BLEU[j=4]: 0.8916809066702428)

Final lambda[j=4]: {0.05000022670933073, -0.8743327758402839, -0.6393613928095458}
(Final BLEU[j=4]: 0.9426092134060646)

+++ Optimization of lambda[j=5] starting @ Tue Oct 27 10:41:20 JST 2015 +++
Initial lambda[j=5]: {0.7737957524668755, 0.6493837878144797, -0.5778133794884044}
(Initial BLEU[j=5]: 0.9426092134060646)

Final lambda[j=5]: {0.7737957524668755, 0.6493837878144797, -0.5778133794884044}
(Final BLEU[j=5]: 0.9426092134060646)

+++ Optimization of lambda[j=6] starting @ Tue Oct 27 10:41:20 JST 2015 +++
Initial lambda[j=6]: {0.2815800420089276, 0.15636862697411513, 0.6539535776649275}
(Initial BLEU[j=6]: 0.9426092134060646)

Final lambda[j=6]: {0.2815800420089276, 0.15636862697411513, 0.6539535776649275}
(Final BLEU[j=6]: 0.9426092134060646)

+++ Optimization of lambda[j=7] starting @ Tue Oct 27 10:41:20 JST 2015 +++
Initial lambda[j=7]: {0.32669861662639876, 0.009245077311689887, -0.9330111163449395}
(Initial BLEU[j=7]: 0.9426092134060646)

Final lambda[j=7]: {0.32669861662639876, 0.009245077311689887, -0.9330111163449395}
(Final BLEU[j=7]: 0.9426092134060646)

+++ Optimization of lambda[j=8] starting @ Tue Oct 27 10:41:20 JST 2015 +++
Initial lambda[j=8]: {0.6515944996339995, 0.08804197789590318, 0.9795005730080566}
(Initial BLEU[j=8]: 0.9426092134060646)

Final lambda[j=8]: {0.6515944996339995, 0.08804197789590318, 0.9795005730080566}
(Final BLEU[j=8]: 0.9426092134060646)

+++ Optimization of lambda[j=9] starting @ Tue Oct 27 10:41:20 JST 2015 +++
Initial lambda[j=9]: {-0.004553671263154424, 0.8593774528720801, -0.01427276865927607}
(Initial BLEU[j=9]: 0.8916809066702428)

Final lambda[j=9]: {0.050000005060940295, 0.8593774528720801, -0.01427276865927607}
(Final BLEU[j=9]: 0.9426092134060646)

+++ Optimization of lambda[j=10] starting @ Tue Oct 27 10:41:20 JST 2015 +++
Initial lambda[j=10]: {0.5053771649119221, -0.5713556223455967, -0.8739358729264859}
(Initial BLEU[j=10]: 0.9426092134060646)

Final lambda[j=10]: {0.5053771649119221, -0.5713556223455967, -0.8739358729264859}
(Final BLEU[j=10]: 0.9426092134060646)

+++ Optimization of lambda[j=11] starting @ Tue Oct 27 10:41:20 JST 2015 +++
Initial lambda[j=11]: {0.7980226618452084, -0.399205792984231, -0.5477913765324938}
(Initial BLEU[j=11]: 0.9426092134060646)

Final lambda[j=11]: {0.7980226618452084, -0.399205792984231, -0.5477913765324938}
(Final BLEU[j=11]: 0.9426092134060646)

+++ Optimization of lambda[j=12] starting @ Tue Oct 27 10:41:20 JST 2015 +++
Initial lambda[j=12]: {0.594593012768021, -0.2974935383022126, 0.3275255626321376}
(Initial BLEU[j=12]: 0.9426092134060646)

Final lambda[j=12]: {0.594593012768021, -0.2974935383022126, 0.3275255626321376}
(Final BLEU[j=12]: 0.9426092134060646)

+++ Optimization of lambda[j=13] starting @ Tue Oct 27 10:41:20 JST 2015 +++
Initial lambda[j=13]: {-0.21052430917292875, 0.981831267676273, -0.8102868749874037}
(Initial BLEU[j=13]: 0.8916809066702428)

Final lambda[j=13]: {0.050000287317309405, 0.981831267676273, -0.8102868749874037}
(Final BLEU[j=13]: 0.9426092134060646)

+++ Optimization of lambda[j=14] starting @ Tue Oct 27 10:41:20 JST 2015 +++
Initial lambda[j=14]: {0.03753776574773382, 0.00790321507749736, 0.03620028521108054}
(Initial BLEU[j=14]: 0.9426092134060646)

Final lambda[j=14]: {0.03753776574773382, 0.00790321507749736, 0.03620028521108054}
(Final BLEU[j=14]: 0.9426092134060646)

+++ Optimization of lambda[j=15] starting @ Tue Oct 27 10:41:20 JST 2015 +++
Initial lambda[j=15]: {0.009954244141451962, 0.02541025170060851, 0.593645578752771}
(Initial BLEU[j=15]: 0.9426092134060646)

Final lambda[j=15]: {0.009954244141451962, 0.02541025170060851, 0.593645578752771}
(Final BLEU[j=15]: 0.9426092134060646)

+++ Optimization of lambda[j=16] starting @ Tue Oct 27 10:41:20 JST 2015 +++
Initial lambda[j=16]: {0.6576106932759427, 0.17534745529356877, -0.6893751690924723}
(Initial BLEU[j=16]: 0.9426092134060646)

Final lambda[j=16]: {0.6576106932759427, 0.17534745529356877, -0.6893751690924723}
(Final BLEU[j=16]: 0.9426092134060646)

+++ Optimization of lambda[j=17] starting @ Tue Oct 27 10:41:20 JST 2015 +++
Initial lambda[j=17]: {-0.871756060640207, -0.8495287747458757, -0.3964594524802063}
(Initial BLEU[j=17]: 0.8916809066702428)

Final lambda[j=17]: {0.050000140579425256, -0.8495287747458757, -0.3964594524802063}
(Final BLEU[j=17]: 0.9426092134060646)

+++ Optimization of lambda[j=18] starting @ Tue Oct 27 10:41:20 JST 2015 +++
Initial lambda[j=18]: {-0.4629095033959656, -0.10291979788243277, -0.8706362780408492}
(Initial BLEU[j=18]: 0.8916809066702428)

Final lambda[j=18]: {0.05000030871643191, -0.10291979788243277, -0.8706362780408492}
(Final BLEU[j=18]: 0.9426092134060646)

+++ Optimization of lambda[j=19] starting @ Tue Oct 27 10:41:20 JST 2015 +++
Initial lambda[j=19]: {-0.8834296944416113, 0.3073471861931083, -0.08254985860243691}
(Initial BLEU[j=19]: 0.8916809066702428)

Final lambda[j=19]: {0.05000002927111866, 0.3073471861931083, -0.08254985860243691}
(Final BLEU[j=19]: 0.9426092134060646)

+++ Optimization of lambda[j=20] starting @ Tue Oct 27 10:41:20 JST 2015 +++
Initial lambda[j=20]: {-0.2916952155637593, -0.8022503514522665, -0.33852947919372234}
(Initial BLEU[j=20]: 0.8916809066702428)

Final lambda[j=20]: {0.05000012003820142, -0.8022503514522665, -0.33852947919372234}
(Final BLEU[j=20]: 0.9426092134060646)

Best final lambda is lambda[j=1] (BLEU: 0.9426).

---  Z-MERT iteration #1 ending @ Tue Oct 27 10:41:20 JST 2015  ---

No parameter value changed in this iteration; exiting Z-MERT.


----------------------------------------------------
Z-MERT run ended @ Tue Oct 27 10:41:20 JST 2015
----------------------------------------------------

FINAL lambda: {0.1, 0.2, -0.1} (BLEU: 0.9426092134060646)

(OP Lamda) : [0.1,0.2,-0.1]
Number of candidates => 0
Processing 526 sentences...

Corpus level score:
 See data/results/bleu_results.txt
Test Cumulative: 113809
Making Dependency Statistics ....
487212
0
168292
corpara: 0
next => 

Train Sentence: 499
Number of candidates => 1559
tmpDirPrefix: ZMERT.
Processed the following args array:
  -r ref -rps 4 -p params.txt -m BLEU 4 closest -maxIt 15 -ipi 20 -cmd SDecoder_cmd.bat -decOut nbest.out -dcfg SDecoder_cfg.txt -N 10 -v 1 -seed 12341234 

----------------------------------------------------
Initializing...
----------------------------------------------------

Random number generator initialized using seed: 12341234

$$ decoderCommand: java SimpleDecoder SDecoder_cfg.txt nbest.out
Number of sentences: 1559
Number of documents: 1
Optimizing BLEU
docSubsetInfo: {0, 1, 1, 1, 1, 0, 0}
Number of features: 3
Feature names: {"RD","Word Model","Headword Model"}

c    Default value	Optimizable?	Crit. val. range	Rand. val. range
1     0.1000		 Yes		 [-Infinity,Infinity]		 [-1.0,1.0]
2     0.2000		 Yes		 [-Infinity,Infinity]		 [-1.0,1.0]
3     -0.1000		 Yes		 [-Infinity,Infinity]		 [-1.0,1.0]

Weight vector normalization method: none.

----------------------------------------------------

----------------------------------------------------
Z-MERT run started @ Tue Oct 27 10:43:03 JST 2015
----------------------------------------------------

Initial lambda[]: {0.1, 0.2, -0.1}

--- Starting Z-MERT iteration #1 @ Tue Oct 27 10:43:03 JST 2015 ---
Decoding using initial weight vector {0.1, 0.2, -0.1}
Running decoder...
...finished decoding @ Tue Oct 27 10:43:10 JST 2015
Reading candidate translations from iterations 1-1
(and computing BLEU sufficient statistics for previously unseen candidates)
  Progress: Size: 2152
...+...+...+...+...500
            ...+...+...+...+...1000
            ...+...+...+...+...1500
            ..
Warning: attempt to delete ZMERT.temp.stats.unknown was unsuccessful!
Warning: attempt to delete ZMERT.temp.stats.mergedKnown was unsuccessful!
Processed 2152 distinct candidates (about 1 per sentence):
newCandidatesAdded[it=1] = 2152 (about 1 per sentence)

+++ Optimization of lambda[j=1] starting @ Tue Oct 27 10:43:10 JST 2015 +++
Initial lambda[j=1]: {0.1, 0.2, -0.1}
(Initial BLEU[j=1]: 0.8175835532538354)

Final lambda[j=1]: {10.591005065658518, 5.6182150357335925E14, 1.1817157487265552E14}
(Final BLEU[j=1]: 0.917784512024492)

+++ Optimization of lambda[j=2] starting @ Tue Oct 27 10:43:10 JST 2015 +++
Initial lambda[j=2]: {-0.017230818545013626, -0.6577977590753961, 0.46016061237234096}
(Initial BLEU[j=2]: 0.8652989048548032)

Final lambda[j=2]: {-0.017230818545013626, 1.6189630004374225E14, 3.2316213584048047E13}
(Final BLEU[j=2]: 0.9171139996873481)

+++ Optimization of lambda[j=3] starting @ Tue Oct 27 10:43:10 JST 2015 +++
Initial lambda[j=3]: {-0.5203200954373215, 0.09518077619965482, -0.059473491599185246}
(Initial BLEU[j=3]: 0.7915860007944014)

Final lambda[j=3]: {69.45543693640778, 3.720090624058514E15, 7.741306870413572E14}
(Final BLEU[j=3]: 0.917784512024492)

+++ Optimization of lambda[j=4] starting @ Tue Oct 27 10:43:10 JST 2015 +++
Initial lambda[j=4]: {-0.6919952429797738, -0.8743327758402839, -0.6393613928095458}
(Initial BLEU[j=4]: 0.7806761238144728)

Final lambda[j=4]: {92.39779793858236, 4.947503308584682E15, 1.029548565241123E15}
(Final BLEU[j=4]: 0.917784512024492)

+++ Optimization of lambda[j=5] starting @ Tue Oct 27 10:43:10 JST 2015 +++
Initial lambda[j=5]: {0.7737957524668755, 0.6493837878144797, -0.5778133794884044}
(Initial BLEU[j=5]: 0.8159776117918609)

Final lambda[j=5]: {81.97431452488448, 4.347350931096166E15, 9.1440645428124E14}
(Final BLEU[j=5]: 0.917784512024492)

+++ Optimization of lambda[j=6] starting @ Tue Oct 27 10:43:10 JST 2015 +++
Initial lambda[j=6]: {0.2815800420089276, 0.15636862697411513, 0.6539535776649275}
(Initial BLEU[j=6]: 0.900485032111919)

Final lambda[j=6]: {3.2507817126125354E-15, 0.019144858619011232, 0.6539535776649275}
(Final BLEU[j=6]: 0.9176594477016291)

+++ Optimization of lambda[j=7] starting @ Tue Oct 27 10:43:10 JST 2015 +++
Initial lambda[j=7]: {0.32669861662639876, 0.009245077311689887, -0.9330111163449395}
(Initial BLEU[j=7]: 0.8131216615861605)

Final lambda[j=7]: {0.32669861662639876, 1.1669806793063143E13, 3.860648378532335E14}
(Final BLEU[j=7]: 0.9177219862543282)

+++ Optimization of lambda[j=8] starting @ Tue Oct 27 10:43:10 JST 2015 +++
Initial lambda[j=8]: {0.6515944996339995, 0.08804197789590318, 0.9795005730080566}
(Initial BLEU[j=8]: 0.900485032111919)

Final lambda[j=8]: {1.8357314168906524E-15, 0.08804197789590318, 0.9795005730080566}
(Final BLEU[j=8]: 0.9176594477016291)

+++ Optimization of lambda[j=9] starting @ Tue Oct 27 10:43:10 JST 2015 +++
Initial lambda[j=9]: {-0.004553671263154424, 0.8593774528720801, -0.01427276865927607}
(Initial BLEU[j=9]: 0.7995515604825638)

Final lambda[j=9]: {0.7649934440000198, 4.060341122012522E13, 8.540361471105835E12}
(Final BLEU[j=9]: 0.917784512024492)

+++ Optimization of lambda[j=10] starting @ Tue Oct 27 10:43:10 JST 2015 +++
Initial lambda[j=10]: {0.5053771649119221, -0.5713556223455967, -0.8739358729264859}
(Initial BLEU[j=10]: 0.8041155598364106)

Final lambda[j=10]: {53.656167887063525, 2.8393175866246175E15, 5.972120002740069E14}
(Final BLEU[j=10]: 0.917784512024492)

+++ Optimization of lambda[j=11] starting @ Tue Oct 27 10:43:10 JST 2015 +++
Initial lambda[j=11]: {0.7980226618452084, -0.399205792984231, -0.5477913765324938}
(Initial BLEU[j=11]: 0.8030153539967888)

Final lambda[j=11]: {84.50164113707345, 4.4834629176348645E15, 9.430356925023218E14}
(Final BLEU[j=11]: 0.917784512024492)

+++ Optimization of lambda[j=12] starting @ Tue Oct 27 10:43:10 JST 2015 +++
Initial lambda[j=12]: {0.594593012768021, -0.2974935383022126, 0.3275255626321376}
(Initial BLEU[j=12]: 0.8907425760902816)

Final lambda[j=12]: {0.594593012768021, 2.0950544376244414E13, 7.026399014576682E14}
(Final BLEU[j=12]: 0.9177219862543282)

+++ Optimization of lambda[j=13] starting @ Tue Oct 27 10:43:10 JST 2015 +++
Initial lambda[j=13]: {-0.21052430917292875, 0.981831267676273, -0.8102868749874037}
(Initial BLEU[j=13]: 0.7915574497435856)

Final lambda[j=13]: {27.978547555528895, 1.4891291157336155E15, 3.1321750447614906E14}
(Final BLEU[j=13]: 0.917784512024492)

+++ Optimization of lambda[j=14] starting @ Tue Oct 27 10:43:10 JST 2015 +++
Initial lambda[j=14]: {0.03753776574773382, 0.00790321507749736, 0.03620028521108054}
(Initial BLEU[j=14]: 0.900485032111919)

Final lambda[j=14]: {1.6420626705051878E-16, 0.0010597915722171634, 0.03620028521108054}
(Final BLEU[j=14]: 0.9176594477016291)

+++ Optimization of lambda[j=15] starting @ Tue Oct 27 10:43:10 JST 2015 +++
Initial lambda[j=15]: {0.009954244141451962, 0.02541025170060851, 0.593645578752771}
(Initial BLEU[j=15]: 0.900485032111919)

Final lambda[j=15]: {5.253533502572047E-16, 0.018099402167483188, 0.593645578752771}
(Final BLEU[j=15]: 0.9177219862543282)

+++ Optimization of lambda[j=16] starting @ Tue Oct 27 10:43:11 JST 2015 +++
Initial lambda[j=16]: {0.6576106932759427, 0.17534745529356877, -0.6893751690924723}
(Initial BLEU[j=16]: 0.8147902583129618)

Final lambda[j=16]: {69.6887917709289, 3.694598284622095E15, 7.771086897632512E14}
(Final BLEU[j=16]: 0.917784512024492)

+++ Optimization of lambda[j=17] starting @ Tue Oct 27 10:43:11 JST 2015 +++
Initial lambda[j=17]: {-0.871756060640207, -0.8495287747458757, -0.3964594524802063}
(Initial BLEU[j=17]: 0.7809038269253386)

Final lambda[j=17]: {116.25271193986217, 6.166306099359616E15, 1.2969962831570695E15}
(Final BLEU[j=17]: 0.917784512024492)

+++ Optimization of lambda[j=18] starting @ Tue Oct 27 10:43:11 JST 2015 +++
Initial lambda[j=18]: {-0.4629095033959656, -0.10291979788243277, -0.8706362780408492}
(Initial BLEU[j=18]: 0.7809634857230483)

Final lambda[j=18]: {61.968190122914606, 3.274358301731647E15, 6.887155051975758E14}
(Final BLEU[j=18]: 0.917784512024492)

+++ Optimization of lambda[j=19] starting @ Tue Oct 27 10:43:11 JST 2015 +++
Initial lambda[j=19]: {-0.8834296944416113, 0.3073471861931083, -0.08254985860243691}
(Initial BLEU[j=19]: 0.7923771134032078)

Final lambda[j=19]: {118.50279492915637, 6.31618753555445E15, 1.3143643270901555E15}
(Final BLEU[j=19]: 0.917784512024492)

+++ Optimization of lambda[j=20] starting @ Tue Oct 27 10:43:11 JST 2015 +++
Initial lambda[j=20]: {-0.2916952155637593, -0.8022503514522665, -0.33852947919372234}
(Initial BLEU[j=20]: 0.7806761238144728)

Final lambda[j=20]: {38.909151703479466, 2.0632858985389988E15, 4.339833218988662E14}
(Final BLEU[j=20]: 0.917784512024492)

Best final lambda is lambda[j=1] (BLEU: 0.9178).

---  Z-MERT iteration #1 ending @ Tue Oct 27 10:43:11 JST 2015  ---

Next iteration will decode with lambda: {10.591005065658518, 5.6182150357335925E14, 1.1817157487265552E14}

--- Starting Z-MERT iteration #2 @ Tue Oct 27 10:43:11 JST 2015 ---
Redecoding using weight vector {10.591005065658518, 5.6182150357335925E14, 1.1817157487265552E14}
Running decoder...
...finished decoding @ Tue Oct 27 10:43:11 JST 2015
Reading candidate translations from iterations 1-2
(and computing BLEU sufficient statistics for previously unseen candidates)
  Progress: ...+...+...+...+...500
            ...+...+...+...+...1000
            ...+...+...+...+...1500
            ..
Warning: attempt to delete ZMERT.temp.stats.mergedKnown was unsuccessful!
Processed 2152 distinct candidates (about 1 per sentence):
newCandidatesAdded[it=1] = 2152 (about 1 per sentence)
newCandidatesAdded[it=2] = 0 (about 0 per sentence)

No new candidates added in this iteration; exiting Z-MERT.

---  Z-MERT iteration #2 ending @ Tue Oct 27 10:43:11 JST 2015  ---


----------------------------------------------------
Z-MERT run ended @ Tue Oct 27 10:43:11 JST 2015
----------------------------------------------------

FINAL lambda: {10.591005065658518, 5.6182150357335925E14, 1.1817157487265552E14} (BLEU: 0.917784512024492)

(OP Lamda) : [10.591005065658518,5.6182150357335925E14,1.1817157487265552E14]
Number of candidates => 908
tmpDirPrefix: ZMERT.
Processed the following args array:
  -r ref -rps 4 -p params.txt -m BLEU 4 closest -maxIt 15 -ipi 20 -cmd SDecoder_cmd.bat -decOut nbest.out -dcfg SDecoder_cfg.txt -N 10 -v 1 -seed 12341234 

----------------------------------------------------
Initializing...
----------------------------------------------------

Random number generator initialized using seed: 12341234

$$ decoderCommand: java SimpleDecoder SDecoder_cfg.txt nbest.out
Number of sentences: 908
Number of documents: 1
Optimizing BLEU
docSubsetInfo: {0, 1, 1, 1, 1, 0, 0}
Number of features: 3
Feature names: {"RD","Word Model","Headword Model"}

c    Default value	Optimizable?	Crit. val. range	Rand. val. range
1     0.1000		 Yes		 [-Infinity,Infinity]		 [-1.0,1.0]
2     0.2000		 Yes		 [-Infinity,Infinity]		 [-1.0,1.0]
3     -0.1000		 Yes		 [-Infinity,Infinity]		 [-1.0,1.0]

Weight vector normalization method: none.

----------------------------------------------------

----------------------------------------------------
Z-MERT run started @ Tue Oct 27 10:43:13 JST 2015
----------------------------------------------------

Initial lambda[]: {0.1, 0.2, -0.1}

--- Starting Z-MERT iteration #1 @ Tue Oct 27 10:43:13 JST 2015 ---
Decoding using initial weight vector {0.1, 0.2, -0.1}
Running decoder...
...finished decoding @ Tue Oct 27 10:43:14 JST 2015
Reading candidate translations from iterations 1-1
(and computing BLEU sufficient statistics for previously unseen candidates)
  Progress: Size: 9061
...+...+...+...+...500
            ...+...+...+...+
Warning: attempt to delete ZMERT.temp.stats.unknown was unsuccessful!
Warning: attempt to delete ZMERT.temp.stats.mergedKnown was unsuccessful!
Processed 9061 distinct candidates (about 9 per sentence):
newCandidatesAdded[it=1] = 9061 (about 9 per sentence)

+++ Optimization of lambda[j=1] starting @ Tue Oct 27 10:43:15 JST 2015 +++
Initial lambda[j=1]: {0.1, 0.2, -0.1}
(Initial BLEU[j=1]: 0.7929001202290609)

Final lambda[j=1]: {0.03917462304144103, 0.2, 4.0174684467701195E15}
(Final BLEU[j=1]: 0.8521001614146391)

+++ Optimization of lambda[j=2] starting @ Tue Oct 27 10:43:15 JST 2015 +++
Initial lambda[j=2]: {-0.017230818545013626, -0.6577977590753961, 0.46016061237234096}
(Initial BLEU[j=2]: 0.7609079171540221)

Final lambda[j=2]: {8.413797340751366E-16, -0.6577977590753961, 34.5}
(Final BLEU[j=2]: 0.851894112626097)

+++ Optimization of lambda[j=3] starting @ Tue Oct 27 10:43:15 JST 2015 +++
Initial lambda[j=3]: {-0.5203200954373215, 0.09518077619965482, -0.059473491599185246}
(Initial BLEU[j=3]: 0.7302903353336566)

Final lambda[j=3]: {0.9758505089945568, 0.09518077619965482, 2.9985469623835288E16}
(Final BLEU[j=3]: 0.851894112626097)

+++ Optimization of lambda[j=4] starting @ Tue Oct 27 10:43:15 JST 2015 +++
Initial lambda[j=4]: {-0.6919952429797738, -0.8743327758402839, -0.6393613928095458}
(Initial BLEU[j=4]: 0.7267795517910447)

Final lambda[j=4]: {0.9758505089945568, -0.8743327758402839, 3.9878917843387576E16}
(Final BLEU[j=4]: 0.851894112626097)

+++ Optimization of lambda[j=5] starting @ Tue Oct 27 10:43:15 JST 2015 +++
Initial lambda[j=5]: {0.7737957524668755, 0.6493837878144797, -0.5778133794884044}
(Initial BLEU[j=5]: 0.7927351642077628)

Final lambda[j=5]: {0.7737957524668755, 0.6493837878144797, 3.108700019780414E16}
(Final BLEU[j=5]: 0.851894112626097)

+++ Optimization of lambda[j=6] starting @ Tue Oct 27 10:43:15 JST 2015 +++
Initial lambda[j=6]: {0.2815800420089276, 0.15636862697411513, 0.6539535776649275}
(Initial BLEU[j=6]: 0.8293357179020798)

Final lambda[j=6]: {2.1746284240809505E-18, 0.15636862697411513, 0.06608646261082733}
(Final BLEU[j=6]: 0.8525121968016368)

+++ Optimization of lambda[j=7] starting @ Tue Oct 27 10:43:15 JST 2015 +++
Initial lambda[j=7]: {0.32669861662639876, 0.009245077311689887, -0.9330111163449395}
(Initial BLEU[j=7]: 0.7921619116079617)

Final lambda[j=7]: {0.32669861662639876, 0.009245077311689887, 1.3125013839000048E16}
(Final BLEU[j=7]: 0.851894112626097)

+++ Optimization of lambda[j=8] starting @ Tue Oct 27 10:43:15 JST 2015 +++
Initial lambda[j=8]: {0.6515944996339995, 0.08804197789590318, 0.9795005730080566}
(Initial BLEU[j=8]: 0.8297975976813737)

Final lambda[j=8]: {2.7085292591948385E-17, 0.08804197789590318, 0.03872667200831772}
(Final BLEU[j=8]: 0.8521416947949425)

+++ Optimization of lambda[j=9] starting @ Tue Oct 27 10:43:15 JST 2015 +++
Initial lambda[j=9]: {-0.004553671263154424, 0.8593774528720801, -0.01427276865927607}
(Initial BLEU[j=9]: 0.7279767487078588)

Final lambda[j=9]: {0.4879252544972784, 0.8593774528720801, 1.9028927400307436E16}
(Final BLEU[j=9]: 0.8521001614146391)

+++ Optimization of lambda[j=10] starting @ Tue Oct 27 10:43:15 JST 2015 +++
Initial lambda[j=10]: {0.5053771649119221, -0.5713556223455967, -0.8739358729264859}
(Initial BLEU[j=10]: 0.7925218159301731)

Final lambda[j=10]: {0.5053771649119221, -0.5713556223455967, 2.0303368137517856E16}
(Final BLEU[j=10]: 0.851894112626097)

+++ Optimization of lambda[j=11] starting @ Tue Oct 27 10:43:15 JST 2015 +++
Initial lambda[j=11]: {0.7980226618452084, -0.399205792984231, -0.5477913765324938}
(Initial BLEU[j=11]: 0.7925218159301731)

Final lambda[j=11]: {0.31339698433152824, -0.399205792984231, 3.2060308637706256E16}
(Final BLEU[j=11]: 0.8521001614146391)

+++ Optimization of lambda[j=12] starting @ Tue Oct 27 10:43:15 JST 2015 +++
Initial lambda[j=12]: {0.594593012768021, -0.2974935383022126, 0.3275255626321376}
(Initial BLEU[j=12]: 0.8275799354996982)

Final lambda[j=12]: {0.594593012768021, -0.2974935383022126, 2.3887586674655068E16}
(Final BLEU[j=12]: 0.851894112626097)

+++ Optimization of lambda[j=13] starting @ Tue Oct 27 10:43:15 JST 2015 +++
Initial lambda[j=13]: {-0.21052430917292875, 0.981831267676273, -0.8102868749874037}
(Initial BLEU[j=13]: 0.7280921376517732)

Final lambda[j=13]: {0.4879252544972784, 0.981831267676273, 1.2132282287652288E16}
(Final BLEU[j=13]: 0.851894112626097)

+++ Optimization of lambda[j=14] starting @ Tue Oct 27 10:43:15 JST 2015 +++
Initial lambda[j=14]: {0.03753776574773382, 0.00790321507749736, 0.03620028521108054}
(Initial BLEU[j=14]: 0.8289673248621926)

Final lambda[j=14]: {0.03753776574773382, 0.00790321507749736, 1.5080678945376875E15}
(Final BLEU[j=14]: 0.851894112626097)

+++ Optimization of lambda[j=15] starting @ Tue Oct 27 10:43:15 JST 2015 +++
Initial lambda[j=15]: {0.009954244141451962, 0.02541025170060851, 0.593645578752771}
(Initial BLEU[j=15]: 0.8295889429164341)

Final lambda[j=15]: {1.3542646295974193E-17, 0.02541025170060851, 0.01191107887341241}
(Final BLEU[j=15]: 0.8521416947949425)

+++ Optimization of lambda[j=16] starting @ Tue Oct 27 10:43:15 JST 2015 +++
Initial lambda[j=16]: {0.6576106932759427, 0.17534745529356877, -0.6893751690924723}
(Initial BLEU[j=16]: 0.7929001202290609)

Final lambda[j=16]: {0.6576106932759427, 0.17534745529356877, 2.6419302104947224E16}
(Final BLEU[j=16]: 0.851894112626097)

+++ Optimization of lambda[j=17] starting @ Tue Oct 27 10:43:15 JST 2015 +++
Initial lambda[j=17]: {-0.871756060640207, -0.8495287747458757, -0.3964594524802063}
(Initial BLEU[j=17]: 0.7290275433749936)

Final lambda[j=17]: {92.02954151913944, -0.8495287747458757, 3.697257792238633E18}
(Final BLEU[j=17]: 0.851894112626097)

+++ Optimization of lambda[j=18] starting @ Tue Oct 27 10:43:15 JST 2015 +++
Initial lambda[j=18]: {-0.4629095033959656, -0.10291979788243277, -0.8706362780408492}
(Initial BLEU[j=18]: 0.7283150153527672)

Final lambda[j=18]: {49.668027897108786, -0.10291979788243277, 1.99539734889932595E18}
(Final BLEU[j=18]: 0.851894112626097)

+++ Optimization of lambda[j=19] starting @ Tue Oct 27 10:43:15 JST 2015 +++
Initial lambda[j=19]: {-0.8834296944416113, 0.3073471861931083, -0.08254985860243691}
(Initial BLEU[j=19]: 0.7302903353336566)

Final lambda[j=19]: {95.68279865667851, 0.3073471861931083, 3.8440262450186429E18}
(Final BLEU[j=19]: 0.851894112626097)

+++ Optimization of lambda[j=20] starting @ Tue Oct 27 10:43:15 JST 2015 +++
Initial lambda[j=20]: {-0.2916952155637593, -0.8022503514522665, -0.33852947919372234}
(Initial BLEU[j=20]: 0.7267795517910447)

Final lambda[j=20]: {0.4879252544972784, -0.8022503514522665, 1.6810071535587696E16}
(Final BLEU[j=20]: 0.8521001614146391)

Best final lambda is lambda[j=6] (BLEU: 0.8525).

---  Z-MERT iteration #1 ending @ Tue Oct 27 10:43:15 JST 2015  ---

Next iteration will decode with lambda: {2.1746284240809505E-18, 0.15636862697411513, 0.06608646261082733}

--- Starting Z-MERT iteration #2 @ Tue Oct 27 10:43:15 JST 2015 ---
Redecoding using weight vector {2.1746284240809505E-18, 0.15636862697411513, 0.06608646261082733}
Running decoder...
...finished decoding @ Tue Oct 27 10:43:16 JST 2015
Reading candidate translations from iterations 1-2
(and computing BLEU sufficient statistics for previously unseen candidates)
  Progress: ...+...+...+...+...500
            ...+...+...+...+
Warning: attempt to delete ZMERT.temp.stats.mergedKnown was unsuccessful!
Processed 9061 distinct candidates (about 9 per sentence):
newCandidatesAdded[it=1] = 9061 (about 9 per sentence)
newCandidatesAdded[it=2] = 0 (about 0 per sentence)

No new candidates added in this iteration; exiting Z-MERT.

---  Z-MERT iteration #2 ending @ Tue Oct 27 10:43:17 JST 2015  ---


----------------------------------------------------
Z-MERT run ended @ Tue Oct 27 10:43:17 JST 2015
----------------------------------------------------

FINAL lambda: {2.1746284240809505E-18, 0.15636862697411513, 0.06608646261082733} (BLEU: 0.8525121968016368)

(OP Lamda) : [2.1746284240809505E-18,0.15636862697411513,0.06608646261082733]
Number of candidates => 608
tmpDirPrefix: ZMERT.
Processed the following args array:
  -r ref -rps 4 -p params.txt -m BLEU 4 closest -maxIt 15 -ipi 20 -cmd SDecoder_cmd.bat -decOut nbest.out -dcfg SDecoder_cfg.txt -N 10 -v 1 -seed 12341234 

----------------------------------------------------
Initializing...
----------------------------------------------------

Random number generator initialized using seed: 12341234

$$ decoderCommand: java SimpleDecoder SDecoder_cfg.txt nbest.out
Number of sentences: 608
Number of documents: 1
Optimizing BLEU
docSubsetInfo: {0, 1, 1, 1, 1, 0, 0}
Number of features: 3
Feature names: {"RD","Word Model","Headword Model"}

c    Default value	Optimizable?	Crit. val. range	Rand. val. range
1     0.1000		 Yes		 [-Infinity,Infinity]		 [-1.0,1.0]
2     0.2000		 Yes		 [-Infinity,Infinity]		 [-1.0,1.0]
3     -0.1000		 Yes		 [-Infinity,Infinity]		 [-1.0,1.0]

Weight vector normalization method: none.

----------------------------------------------------

----------------------------------------------------
Z-MERT run started @ Tue Oct 27 10:43:17 JST 2015
----------------------------------------------------

Initial lambda[]: {0.1, 0.2, -0.1}

--- Starting Z-MERT iteration #1 @ Tue Oct 27 10:43:17 JST 2015 ---
Decoding using initial weight vector {0.1, 0.2, -0.1}
Running decoder...
...finished decoding @ Tue Oct 27 10:43:18 JST 2015
Reading candidate translations from iterations 1-1
(and computing BLEU sufficient statistics for previously unseen candidates)
  Progress: Size: 3143
...+...+...+...+...500
            ...+
Warning: attempt to delete ZMERT.temp.stats.unknown was unsuccessful!
Warning: attempt to delete ZMERT.temp.stats.mergedKnown was unsuccessful!
Processed 3143 distinct candidates (about 5 per sentence):
newCandidatesAdded[it=1] = 3143 (about 5 per sentence)

+++ Optimization of lambda[j=1] starting @ Tue Oct 27 10:43:18 JST 2015 +++
Initial lambda[j=1]: {0.1, 0.2, -0.1}
(Initial BLEU[j=1]: 0.7898749141075628)

Final lambda[j=1]: {0.1, 0.2, 4.986415633856591E14}
(Final BLEU[j=1]: 0.8305465080104708)

+++ Optimization of lambda[j=2] starting @ Tue Oct 27 10:43:18 JST 2015 +++
Initial lambda[j=2]: {-0.017230818545013626, -0.6577977590753961, 0.46016061237234096}
(Initial BLEU[j=2]: 0.7522798441851402)

Final lambda[j=2]: {4.557837612444475E-17, -0.6577977590753961, 0.46016061237234096}
(Final BLEU[j=2]: 0.8305465080104708)

+++ Optimization of lambda[j=3] starting @ Tue Oct 27 10:43:18 JST 2015 +++
Initial lambda[j=3]: {-0.5203200954373215, 0.09518077619965482, -0.059473491599185246}
(Initial BLEU[j=3]: 0.7387774174656553)

Final lambda[j=3]: {2.6274144989465817, 0.09518077619965482, 2.6400554375216304E16}
(Final BLEU[j=3]: 0.8305465080104708)

+++ Optimization of lambda[j=4] starting @ Tue Oct 27 10:43:18 JST 2015 +++
Initial lambda[j=4]: {-0.6919952429797738, -0.8743327758402839, -0.6393613928095458}
(Initial BLEU[j=4]: 0.7387774174656553)

Final lambda[j=4]: {3.61269493605155, -0.8743327758402839, 3.5111190591867604E16}
(Final BLEU[j=4]: 0.8305465080104708)

+++ Optimization of lambda[j=5] starting @ Tue Oct 27 10:43:18 JST 2015 +++
Initial lambda[j=5]: {0.7737957524668755, 0.6493837878144797, -0.5778133794884044}
(Initial BLEU[j=5]: 0.788643876211727)

Final lambda[j=5]: {0.2873734608222824, 0.6493837878144797, 3.037883327527041E15}
(Final BLEU[j=5]: 0.8305465080104708)

+++ Optimization of lambda[j=6] starting @ Tue Oct 27 10:43:18 JST 2015 +++
Initial lambda[j=6]: {0.2815800420089276, 0.15636862697411513, 0.6539535776649275}
(Initial BLEU[j=6]: 0.812393866451348)

Final lambda[j=6]: {6.380972657422265E-17, 0.15636862697411513, 0.6539535776649275}
(Final BLEU[j=6]: 0.8305465080104708)

+++ Optimization of lambda[j=7] starting @ Tue Oct 27 10:43:18 JST 2015 +++
Initial lambda[j=7]: {0.32669861662639876, 0.009245077311689887, -0.9330111163449395}
(Initial BLEU[j=7]: 0.788643876211727)

Final lambda[j=7]: {0.1334233925246311, 0.009245077311689887, 1.2826023888234912E15}
(Final BLEU[j=7]: 0.8305465080104708)

+++ Optimization of lambda[j=8] starting @ Tue Oct 27 10:43:18 JST 2015 +++
Initial lambda[j=8]: {0.6515944996339995, 0.08804197789590318, 0.9795005730080566}
(Initial BLEU[j=8]: 0.812393866451348)

Final lambda[j=8]: {1.0027242747377846E-16, 0.08804197789590318, 0.9795005730080566}
(Final BLEU[j=8]: 0.8305465080104708)

+++ Optimization of lambda[j=9] starting @ Tue Oct 27 10:43:18 JST 2015 +++
Initial lambda[j=9]: {-0.004553671263154424, 0.8593774528720801, -0.01427276865927607}
(Initial BLEU[j=9]: 0.7385620898084896)

Final lambda[j=9]: {0.02309251024464769, 0.8593774528720801, 2.31049015488678E14}
(Final BLEU[j=9]: 0.8305465080104708)

+++ Optimization of lambda[j=10] starting @ Tue Oct 27 10:43:18 JST 2015 +++
Initial lambda[j=10]: {0.5053771649119221, -0.5713556223455967, -0.8739358729264859}
(Initial BLEU[j=10]: 0.788643876211727)

Final lambda[j=10]: {0.5053771649119221, -0.5713556223455967, 1.9840854107874335E15}
(Final BLEU[j=10]: 0.8303820901918246)

+++ Optimization of lambda[j=11] starting @ Tue Oct 27 10:43:18 JST 2015 +++
Initial lambda[j=11]: {0.7980226618452084, -0.399205792984231, -0.5477913765324938}
(Initial BLEU[j=11]: 0.788643876211727)

Final lambda[j=11]: {0.3284268123683227, -0.399205792984231, 3.132996959054887E15}
(Final BLEU[j=11]: 0.8305465080104708)

+++ Optimization of lambda[j=12] starting @ Tue Oct 27 10:43:18 JST 2015 +++
Initial lambda[j=12]: {0.594593012768021, -0.2974935383022126, 0.3275255626321376}
(Initial BLEU[j=12]: 0.812393866451348)

Final lambda[j=12]: {3.1904863287111327E-17, -0.2974935383022126, 0.2090909090909091}
(Final BLEU[j=12]: 0.8305465080104708)

+++ Optimization of lambda[j=13] starting @ Tue Oct 27 10:43:18 JST 2015 +++
Initial lambda[j=13]: {-0.21052430917292875, 0.981831267676273, -0.8102868749874037}
(Initial BLEU[j=13]: 0.7387774174656553)

Final lambda[j=13]: {1.0673871401970487, 0.981831267676273, 1.0681806296474808E16}
(Final BLEU[j=13]: 0.8305465080104708)

+++ Optimization of lambda[j=14] starting @ Tue Oct 27 10:43:18 JST 2015 +++
Initial lambda[j=14]: {0.03753776574773382, 0.00790321507749736, 0.03620028521108054}
(Initial BLEU[j=14]: 0.8120365599704426)

Final lambda[j=14]: {0.03753776574773382, 0.00790321507749736, 1.8717890198454638E14}
(Final BLEU[j=14]: 0.8305465080104708)

+++ Optimization of lambda[j=15] starting @ Tue Oct 27 10:43:18 JST 2015 +++
Initial lambda[j=15]: {0.009954244141451962, 0.02541025170060851, 0.593645578752771}
(Initial BLEU[j=15]: 0.8136057727338699)

Final lambda[j=15]: {5.925188896177817E-17, 0.02541025170060851, 0.593645578752771}
(Final BLEU[j=15]: 0.8305465080104708)

+++ Optimization of lambda[j=16] starting @ Tue Oct 27 10:43:18 JST 2015 +++
Initial lambda[j=16]: {0.6576106932759427, 0.17534745529356877, -0.6893751690924723}
(Initial BLEU[j=16]: 0.788643876211727)

Final lambda[j=16]: {0.2668467850492622, 0.17534745529356877, 2.5817466104429205E15}
(Final BLEU[j=16]: 0.8305465080104708)

+++ Optimization of lambda[j=17] starting @ Tue Oct 27 10:43:18 JST 2015 +++
Initial lambda[j=17]: {-0.871756060640207, -0.8495287747458757, -0.3964594524802063}
(Initial BLEU[j=17]: 0.7387774174656553)

Final lambda[j=17]: {4.269548560788195, -0.8495287747458757, 4.4232086138269376E16}
(Final BLEU[j=17]: 0.8305465080104708)

+++ Optimization of lambda[j=18] starting @ Tue Oct 27 10:43:18 JST 2015 +++
Initial lambda[j=18]: {-0.4629095033959656, -0.10291979788243277, -0.8706362780408492}
(Initial BLEU[j=18]: 0.7387774174656553)

Final lambda[j=18]: {2.6274144989465817, -0.10291979788243277, 2.3487594698678576E16}
(Final BLEU[j=18]: 0.8305465080104708)

+++ Optimization of lambda[j=19] starting @ Tue Oct 27 10:43:18 JST 2015 +++
Initial lambda[j=19]: {-0.8834296944416113, 0.3073471861931083, -0.08254985860243691}
(Initial BLEU[j=19]: 0.7387774174656553)

Final lambda[j=19]: {4.597975373156518, 0.3073471861931083, 4.4824395385274928E16}
(Final BLEU[j=19]: 0.8305465080104708)

+++ Optimization of lambda[j=20] starting @ Tue Oct 27 10:43:18 JST 2015 +++
Initial lambda[j=20]: {-0.2916952155637593, -0.8022503514522665, -0.33852947919372234}
(Initial BLEU[j=20]: 0.7387774174656553)

Final lambda[j=20]: {1.4779206556574522, -0.8022503514522665, 1.4800342072141116E16}
(Final BLEU[j=20]: 0.8305465080104708)

Best final lambda is lambda[j=1] (BLEU: 0.8305).

---  Z-MERT iteration #1 ending @ Tue Oct 27 10:43:18 JST 2015  ---

Next iteration will decode with lambda: {0.1, 0.2, 4.986415633856591E14}

--- Starting Z-MERT iteration #2 @ Tue Oct 27 10:43:18 JST 2015 ---
Redecoding using weight vector {0.1, 0.2, 4.986415633856591E14}
Running decoder...
...finished decoding @ Tue Oct 27 10:43:19 JST 2015
Reading candidate translations from iterations 1-2
(and computing BLEU sufficient statistics for previously unseen candidates)
  Progress: ...+...+...+...+...500
            ...+
Warning: attempt to delete ZMERT.temp.stats.mergedKnown was unsuccessful!
Processed 3143 distinct candidates (about 5 per sentence):
newCandidatesAdded[it=1] = 3143 (about 5 per sentence)
newCandidatesAdded[it=2] = 0 (about 0 per sentence)

No new candidates added in this iteration; exiting Z-MERT.

---  Z-MERT iteration #2 ending @ Tue Oct 27 10:43:19 JST 2015  ---


----------------------------------------------------
Z-MERT run ended @ Tue Oct 27 10:43:19 JST 2015
----------------------------------------------------

FINAL lambda: {0.1, 0.2, 4.986415633856591E14} (BLEU: 0.8305465080104708)

(OP Lamda) : [0.1,0.2,4.986415633856591E14]
Number of candidates => 417
tmpDirPrefix: ZMERT.
Processed the following args array:
  -r ref -rps 4 -p params.txt -m BLEU 4 closest -maxIt 15 -ipi 20 -cmd SDecoder_cmd.bat -decOut nbest.out -dcfg SDecoder_cfg.txt -N 10 -v 1 -seed 12341234 

----------------------------------------------------
Initializing...
----------------------------------------------------

Random number generator initialized using seed: 12341234

$$ decoderCommand: java SimpleDecoder SDecoder_cfg.txt nbest.out
Number of sentences: 417
Number of documents: 1
Optimizing BLEU
docSubsetInfo: {0, 1, 1, 1, 1, 0, 0}
Number of features: 3
Feature names: {"RD","Word Model","Headword Model"}

c    Default value	Optimizable?	Crit. val. range	Rand. val. range
1     0.1000		 Yes		 [-Infinity,Infinity]		 [-1.0,1.0]
2     0.2000		 Yes		 [-Infinity,Infinity]		 [-1.0,1.0]
3     -0.1000		 Yes		 [-Infinity,Infinity]		 [-1.0,1.0]

Weight vector normalization method: none.

----------------------------------------------------

----------------------------------------------------
Z-MERT run started @ Tue Oct 27 10:43:20 JST 2015
----------------------------------------------------

Initial lambda[]: {0.1, 0.2, -0.1}

--- Starting Z-MERT iteration #1 @ Tue Oct 27 10:43:20 JST 2015 ---
Decoding using initial weight vector {0.1, 0.2, -0.1}
Running decoder...
...finished decoding @ Tue Oct 27 10:43:21 JST 2015
Reading candidate translations from iterations 1-1
(and computing BLEU sufficient statistics for previously unseen candidates)
  Progress: Size: 3460
...+...+...+...+
Warning: attempt to delete ZMERT.temp.stats.unknown was unsuccessful!
Warning: attempt to delete ZMERT.temp.stats.mergedKnown was unsuccessful!
Processed 3460 distinct candidates (about 8 per sentence):
newCandidatesAdded[it=1] = 3460 (about 8 per sentence)

+++ Optimization of lambda[j=1] starting @ Tue Oct 27 10:43:21 JST 2015 +++
Initial lambda[j=1]: {0.1, 0.2, -0.1}
(Initial BLEU[j=1]: 0.7945722532921508)

Final lambda[j=1]: {0.04174359681011487, 0.2, 1.68240344160828E15}
(Final BLEU[j=1]: 0.8216547568467055)

+++ Optimization of lambda[j=2] starting @ Tue Oct 27 10:43:21 JST 2015 +++
Initial lambda[j=2]: {-0.017230818545013626, -0.6577977590753961, 0.46016061237234096}
(Initial BLEU[j=2]: 0.7582229035613055)

Final lambda[j=2]: {9.268940461851754E-18, -0.6577977590753961, 0.46016061237234096}
(Final BLEU[j=2]: 0.8216547568467055)

+++ Optimization of lambda[j=3] starting @ Tue Oct 27 10:43:21 JST 2015 +++
Initial lambda[j=3]: {-0.5203200954373215, 0.09518077619965482, -0.059473491599185246}
(Initial BLEU[j=3]: 0.7453646207104485)

Final lambda[j=3]: {0.333948774480919, 0.09518077619965482, 2.2181987806957656E16}
(Final BLEU[j=3]: 0.8216547568467055)

+++ Optimization of lambda[j=4] starting @ Tue Oct 27 10:43:21 JST 2015 +++
Initial lambda[j=4]: {-0.6919952429797738, -0.8743327758402839, -0.6393613928095458}
(Initial BLEU[j=4]: 0.7457008357116687)

Final lambda[j=4]: {0.667897548961838, -0.8743327758402839, 2.9500744208906124E16}
(Final BLEU[j=4]: 0.8216547568467055)

+++ Optimization of lambda[j=5] starting @ Tue Oct 27 10:43:21 JST 2015 +++
Initial lambda[j=5]: {0.7737957524668755, 0.6493837878144797, -0.5778133794884044}
(Initial BLEU[j=5]: 0.7945722532921508)

Final lambda[j=5]: {0.7737957524668755, 0.6493837878144797, 1.3018366370521396E16}
(Final BLEU[j=5]: 0.8210379973383526)

+++ Optimization of lambda[j=6] starting @ Tue Oct 27 10:43:21 JST 2015 +++
Initial lambda[j=6]: {0.2815800420089276, 0.15636862697411513, 0.6539535776649275}
(Initial BLEU[j=6]: 0.8101783791743696)

Final lambda[j=6]: {1.8537880923703508E-17, 0.15636862697411513, 0.6539535776649275}
(Final BLEU[j=6]: 0.8216547568467055)

+++ Optimization of lambda[j=7] starting @ Tue Oct 27 10:43:21 JST 2015 +++
Initial lambda[j=7]: {0.32669861662639876, 0.009245077311689887, -0.9330111163449395}
(Initial BLEU[j=7]: 0.7945722532921508)

Final lambda[j=7]: {0.08348719362022974, 0.009245077311689887, 5.496388769809172E15}
(Final BLEU[j=7]: 0.8216547568467055)

+++ Optimization of lambda[j=8] starting @ Tue Oct 27 10:43:21 JST 2015 +++
Initial lambda[j=8]: {0.6515944996339995, 0.08804197789590318, 0.9795005730080566}
(Initial BLEU[j=8]: 0.8101783791743696)

Final lambda[j=8]: {1.8537880923703508E-17, 0.08804197789590318, 0.9795005730080566}
(Final BLEU[j=8]: 0.8216547568467055)

+++ Optimization of lambda[j=9] starting @ Tue Oct 27 10:43:22 JST 2015 +++
Initial lambda[j=9]: {-0.004553671263154424, 0.8593774528720801, -0.01427276865927607}
(Initial BLEU[j=9]: 0.7456765776163979)

Final lambda[j=9]: {0.005217949601264359, 0.8593774528720801, 2.6249056528764506E14}
(Final BLEU[j=9]: 0.8216547568467055)

+++ Optimization of lambda[j=10] starting @ Tue Oct 27 10:43:22 JST 2015 +++
Initial lambda[j=10]: {0.5053771649119221, -0.5713556223455967, -0.8739358729264859}
(Initial BLEU[j=10]: 0.7945722532921508)

Final lambda[j=10]: {0.1669743872404595, -0.5713556223455967, 8.502482815580526E15}
(Final BLEU[j=10]: 0.8216547568467055)

+++ Optimization of lambda[j=11] starting @ Tue Oct 27 10:43:22 JST 2015 +++
Initial lambda[j=11]: {0.7980226618452084, -0.399205792984231, -0.5477913765324938}
(Initial BLEU[j=11]: 0.7945722532921508)

Final lambda[j=11]: {0.333948774480919, -0.399205792984231, 1.3425960727697792E16}
(Final BLEU[j=11]: 0.8216547568467055)

+++ Optimization of lambda[j=12] starting @ Tue Oct 27 10:43:22 JST 2015 +++
Initial lambda[j=12]: {0.594593012768021, -0.2974935383022126, 0.3275255626321376}
(Initial BLEU[j=12]: 0.8101783791743696)

Final lambda[j=12]: {0.1669743872404595, -0.2974935383022126, 1.0003453310371542E16}
(Final BLEU[j=12]: 0.8216547568467055)

+++ Optimization of lambda[j=13] starting @ Tue Oct 27 10:43:22 JST 2015 +++
Initial lambda[j=13]: {-0.21052430917292875, 0.981831267676273, -0.8102868749874037}
(Initial BLEU[j=13]: 0.7453646207104485)

Final lambda[j=13]: {0.1669743872404595, 0.981831267676273, 8.974951573256364E15}
(Final BLEU[j=13]: 0.8216547568467055)

+++ Optimization of lambda[j=14] starting @ Tue Oct 27 10:43:22 JST 2015 +++
Initial lambda[j=14]: {0.03753776574773382, 0.00790321507749736, 0.03620028521108054}
(Initial BLEU[j=14]: 0.8101783791743696)

Final lambda[j=14]: {0.03753776574773382, 0.00790321507749736, 1.0124610763826858E15}
(Final BLEU[j=14]: 0.8216547568467055)

+++ Optimization of lambda[j=15] starting @ Tue Oct 27 10:43:22 JST 2015 +++
Initial lambda[j=15]: {0.009954244141451962, 0.02541025170060851, 0.593645578752771}
(Initial BLEU[j=15]: 0.8104796618813049)

Final lambda[j=15]: {9.268940461851754E-18, 0.02541025170060851, 0.593645578752771}
(Final BLEU[j=15]: 0.8216547568467055)

+++ Optimization of lambda[j=16] starting @ Tue Oct 27 10:43:22 JST 2015 +++
Initial lambda[j=16]: {0.6576106932759427, 0.17534745529356877, -0.6893751690924723}
(Initial BLEU[j=16]: 0.7945722532921508)

Final lambda[j=16]: {0.1669743872404595, 0.17534745529356877, 1.1063664936058524E16}
(Final BLEU[j=16]: 0.8216547568467055)

+++ Optimization of lambda[j=17] starting @ Tue Oct 27 10:43:22 JST 2015 +++
Initial lambda[j=17]: {-0.871756060640207, -0.8495287747458757, -0.3964594524802063}
(Initial BLEU[j=17]: 0.7453646207104485)

Final lambda[j=17]: {0.667897548961838, -0.8495287747458757, 3.7164204260667288E16}
(Final BLEU[j=17]: 0.8216547568467055)

+++ Optimization of lambda[j=18] starting @ Tue Oct 27 10:43:22 JST 2015 +++
Initial lambda[j=18]: {-0.4629095033959656, -0.10291979788243277, -0.8706362780408492}
(Initial BLEU[j=18]: 0.7453646207104485)

Final lambda[j=18]: {0.333948774480919, -0.10291979788243277, 1.9734492382854856E16}
(Final BLEU[j=18]: 0.8216547568467055)

+++ Optimization of lambda[j=19] starting @ Tue Oct 27 10:43:22 JST 2015 +++
Initial lambda[j=19]: {-0.8834296944416113, 0.3073471861931083, -0.08254985860243691}
(Initial BLEU[j=19]: 0.7453646207104485)

Final lambda[j=19]: {0.667897548961838, 0.3073471861931083, 3.7661867919857696E16}
(Final BLEU[j=19]: 0.8216547568467055)

+++ Optimization of lambda[j=20] starting @ Tue Oct 27 10:43:22 JST 2015 +++
Initial lambda[j=20]: {-0.2916952155637593, -0.8022503514522665, -0.33852947919372234}
(Initial BLEU[j=20]: 0.7453646207104485)

Final lambda[j=20]: {0.333948774480919, -0.8022503514522665, 1.243538308768362E16}
(Final BLEU[j=20]: 0.8216547568467055)

Best final lambda is lambda[j=1] (BLEU: 0.8217).

---  Z-MERT iteration #1 ending @ Tue Oct 27 10:43:22 JST 2015  ---

Next iteration will decode with lambda: {0.04174359681011487, 0.2, 1.68240344160828E15}

--- Starting Z-MERT iteration #2 @ Tue Oct 27 10:43:22 JST 2015 ---
Redecoding using weight vector {0.04174359681011487, 0.2, 1.68240344160828E15}
Running decoder...
...finished decoding @ Tue Oct 27 10:43:22 JST 2015
Reading candidate translations from iterations 1-2
(and computing BLEU sufficient statistics for previously unseen candidates)
  Progress: ...+...+...+...+
Warning: attempt to delete ZMERT.temp.stats.mergedKnown was unsuccessful!
Processed 3460 distinct candidates (about 8 per sentence):
newCandidatesAdded[it=1] = 3460 (about 8 per sentence)
newCandidatesAdded[it=2] = 0 (about 0 per sentence)

No new candidates added in this iteration; exiting Z-MERT.

---  Z-MERT iteration #2 ending @ Tue Oct 27 10:43:23 JST 2015  ---


----------------------------------------------------
Z-MERT run ended @ Tue Oct 27 10:43:23 JST 2015
----------------------------------------------------

FINAL lambda: {0.04174359681011487, 0.2, 1.68240344160828E15} (BLEU: 0.8216547568467055)

(OP Lamda) : [0.04174359681011487,0.2,1.68240344160828E15]
Number of candidates => 290
tmpDirPrefix: ZMERT.
Processed the following args array:
  -r ref -rps 4 -p params.txt -m BLEU 4 closest -maxIt 15 -ipi 20 -cmd SDecoder_cmd.bat -decOut nbest.out -dcfg SDecoder_cfg.txt -N 10 -v 1 -seed 12341234 

----------------------------------------------------
Initializing...
----------------------------------------------------

Random number generator initialized using seed: 12341234

$$ decoderCommand: java SimpleDecoder SDecoder_cfg.txt nbest.out
Number of sentences: 290
Number of documents: 1
Optimizing BLEU
docSubsetInfo: {0, 1, 1, 1, 1, 0, 0}
Number of features: 3
Feature names: {"RD","Word Model","Headword Model"}

c    Default value	Optimizable?	Crit. val. range	Rand. val. range
1     0.1000		 Yes		 [-Infinity,Infinity]		 [-1.0,1.0]
2     0.2000		 Yes		 [-Infinity,Infinity]		 [-1.0,1.0]
3     -0.1000		 Yes		 [-Infinity,Infinity]		 [-1.0,1.0]

Weight vector normalization method: none.

----------------------------------------------------

----------------------------------------------------
Z-MERT run started @ Tue Oct 27 10:43:25 JST 2015
----------------------------------------------------

Initial lambda[]: {0.1, 0.2, -0.1}

--- Starting Z-MERT iteration #1 @ Tue Oct 27 10:43:25 JST 2015 ---
Decoding using initial weight vector {0.1, 0.2, -0.1}
Running decoder...
...finished decoding @ Tue Oct 27 10:43:26 JST 2015
Reading candidate translations from iterations 1-1
(and computing BLEU sufficient statistics for previously unseen candidates)
  Progress: Size: 7763
...+...+...
Warning: attempt to delete ZMERT.temp.stats.unknown was unsuccessful!
Warning: attempt to delete ZMERT.temp.stats.mergedKnown was unsuccessful!
Processed 7763 distinct candidates (about 26 per sentence):
newCandidatesAdded[it=1] = 7763 (about 26 per sentence)

+++ Optimization of lambda[j=1] starting @ Tue Oct 27 10:43:27 JST 2015 +++
Initial lambda[j=1]: {0.1, 0.2, -0.1}
(Initial BLEU[j=1]: 0.7967324500316569)

Final lambda[j=1]: {0.1, 0.2, 3.1928086279947725E15}
(Final BLEU[j=1]: 0.8155810712209217)

+++ Optimization of lambda[j=2] starting @ Tue Oct 27 10:43:27 JST 2015 +++
Initial lambda[j=2]: {-0.017230818545013626, -0.6577977590753961, 0.46016061237234096}
(Initial BLEU[j=2]: 0.7650742780127183)

Final lambda[j=2]: {4.351519665575881E-18, -0.6577977590753961, 0.46016061237234096}
(Final BLEU[j=2]: 0.8155810712209217)

+++ Optimization of lambda[j=3] starting @ Tue Oct 27 10:43:27 JST 2015 +++
Initial lambda[j=3]: {-0.5203200954373215, 0.09518077619965482, -0.059473491599185246}
(Initial BLEU[j=3]: 0.7582660239360252)

Final lambda[j=3]: {0.1567800187550634, 0.09518077619965482, 2.1492543892804584E16}
(Final BLEU[j=3]: 0.8155810712209217)

+++ Optimization of lambda[j=4] starting @ Tue Oct 27 10:43:27 JST 2015 +++
Initial lambda[j=4]: {-0.6919952429797738, -0.8743327758402839, -0.6393613928095458}
(Initial BLEU[j=4]: 0.7583170323802905)

Final lambda[j=4]: {2.1875480858237246, -0.8743327758402839, 2.8583824195478056E16}
(Final BLEU[j=4]: 0.8155810712209217)

+++ Optimization of lambda[j=5] starting @ Tue Oct 27 10:43:27 JST 2015 +++
Initial lambda[j=5]: {0.7737957524668755, 0.6493837878144797, -0.5778133794884044}
(Initial BLEU[j=5]: 0.7967324500316569)

Final lambda[j=5]: {0.7737957524668755, 0.6493837878144797, 2.4705817547819468E16}
(Final BLEU[j=5]: 0.8155810712209217)

+++ Optimization of lambda[j=6] starting @ Tue Oct 27 10:43:27 JST 2015 +++
Initial lambda[j=6]: {0.2815800420089276, 0.15636862697411513, 0.6539535776649275}
(Initial BLEU[j=6]: 0.8088649162200141)

Final lambda[j=6]: {8.703039331151763E-18, 0.15636862697411513, 0.6539535776649275}
(Final BLEU[j=6]: 0.8155810712209217)

+++ Optimization of lambda[j=7] starting @ Tue Oct 27 10:43:27 JST 2015 +++
Initial lambda[j=7]: {0.32669861662639876, 0.009245077311689887, -0.9330111163449395}
(Initial BLEU[j=7]: 0.7967324500316569)

Final lambda[j=7]: {0.32669861662639876, 0.009245077311689887, 1.0430861619187222E16}
(Final BLEU[j=7]: 0.8155810712209217)

+++ Optimization of lambda[j=8] starting @ Tue Oct 27 10:43:27 JST 2015 +++
Initial lambda[j=8]: {0.6515944996339995, 0.08804197789590318, 0.9795005730080566}
(Initial BLEU[j=8]: 0.8090162412104719)

Final lambda[j=8]: {8.703039331151763E-18, 0.08804197789590318, 0.9795005730080566}
(Final BLEU[j=8]: 0.8155810712209217)

+++ Optimization of lambda[j=9] starting @ Tue Oct 27 10:43:27 JST 2015 +++
Initial lambda[j=9]: {-0.004553671263154424, 0.8593774528720801, -0.01427276865927607}
(Initial BLEU[j=9]: 0.7578416791247258)

Final lambda[j=9]: {0.0024496877930478655, 0.8593774528720801, 1.880957133021955E14}
(Final BLEU[j=9]: 0.8155810712209217)

+++ Optimization of lambda[j=10] starting @ Tue Oct 27 10:43:27 JST 2015 +++
Initial lambda[j=10]: {0.5053771649119221, -0.5713556223455967, -0.8739358729264859}
(Initial BLEU[j=10]: 0.7967324500316569)

Final lambda[j=10]: {0.5053771649119221, -0.5713556223455967, 1.6135725725223216E16}
(Final BLEU[j=10]: 0.8155810712209217)

+++ Optimization of lambda[j=11] starting @ Tue Oct 27 10:43:27 JST 2015 +++
Initial lambda[j=11]: {0.7980226618452084, -0.399205792984231, -0.5477913765324938}
(Initial BLEU[j=11]: 0.7967324500316569)

Final lambda[j=11]: {0.7980226618452084, -0.399205792984231, 2.547933640074736E16}
(Final BLEU[j=11]: 0.8155810712209217)

+++ Optimization of lambda[j=12] starting @ Tue Oct 27 10:43:27 JST 2015 +++
Initial lambda[j=12]: {0.594593012768021, -0.2974935383022126, 0.3275255626321376}
(Initial BLEU[j=12]: 0.8088649162200141)

Final lambda[j=12]: {2.6021424132387722E-17, -0.2974935383022126, 0.3275255626321376}
(Final BLEU[j=12]: 0.8155810712209217)

+++ Optimization of lambda[j=13] starting @ Tue Oct 27 10:43:27 JST 2015 +++
Initial lambda[j=13]: {-0.21052430917292875, 0.981831267676273, -0.8102868749874037}
(Initial BLEU[j=13]: 0.7581106819549914)

Final lambda[j=13]: {0.0783900093775317, 0.981831267676273, 8.695998857392942E15}
(Final BLEU[j=13]: 0.8155810712209217)

+++ Optimization of lambda[j=14] starting @ Tue Oct 27 10:43:27 JST 2015 +++
Initial lambda[j=14]: {0.03753776574773382, 0.00790321507749736, 0.03620028521108054}
(Initial BLEU[j=14]: 0.8088649162200141)

Final lambda[j=14]: {0.03753776574773382, 0.00790321507749736, 1.1985090235501115E15}
(Final BLEU[j=14]: 0.8155810712209217)

+++ Optimization of lambda[j=15] starting @ Tue Oct 27 10:43:27 JST 2015 +++
Initial lambda[j=15]: {0.009954244141451962, 0.02541025170060851, 0.593645578752771}
(Initial BLEU[j=15]: 0.8090162412104719)

Final lambda[j=15]: {4.351519665575881E-18, 0.02541025170060851, 0.593645578752771}
(Final BLEU[j=15]: 0.8155810712209217)

+++ Optimization of lambda[j=16] starting @ Tue Oct 27 10:43:27 JST 2015 +++
Initial lambda[j=16]: {0.6576106932759427, 0.17534745529356877, -0.6893751690924723}
(Initial BLEU[j=16]: 0.7967324500316569)

Final lambda[j=16]: {0.6576106932759427, 0.17534745529356877, 2.0996250953530532E16}
(Final BLEU[j=16]: 0.8155810712209217)

+++ Optimization of lambda[j=17] starting @ Tue Oct 27 10:43:27 JST 2015 +++
Initial lambda[j=17]: {-0.871756060640207, -0.8495287747458757, -0.3964594524802063}
(Initial BLEU[j=17]: 0.7582660239360252)

Final lambda[j=17]: {0.3135600375101268, -0.8495287747458757, 3.6009094327561032E16}
(Final BLEU[j=17]: 0.8155810712209217)

+++ Optimization of lambda[j=18] starting @ Tue Oct 27 10:43:27 JST 2015 +++
Initial lambda[j=18]: {-0.4629095033959656, -0.10291979788243277, -0.8706362780408492}
(Initial BLEU[j=18]: 0.7581106819549914)

Final lambda[j=18]: {0.1567800187550634, -0.10291979788243277, 1.912111968647316E16}
(Final BLEU[j=18]: 0.8155810712209217)

+++ Optimization of lambda[j=19] starting @ Tue Oct 27 10:43:27 JST 2015 +++
Initial lambda[j=19]: {-0.8834296944416113, 0.3073471861931083, -0.08254985860243691}
(Initial BLEU[j=19]: 0.7582660239360252)

Final lambda[j=19]: {0.3135600375101268, 0.3073471861931083, 3.6491289978017952E16}
(Final BLEU[j=19]: 0.8155810712209217)

+++ Optimization of lambda[j=20] starting @ Tue Oct 27 10:43:27 JST 2015 +++
Initial lambda[j=20]: {-0.2916952155637593, -0.8022503514522665, -0.33852947919372234}
(Initial BLEU[j=20]: 0.7583077384747023)

Final lambda[j=20]: {0.9375206082101678, -0.8022503514522665, 1.2048875833934416E16}
(Final BLEU[j=20]: 0.8155810712209217)

Best final lambda is lambda[j=1] (BLEU: 0.8156).

---  Z-MERT iteration #1 ending @ Tue Oct 27 10:43:27 JST 2015  ---

Next iteration will decode with lambda: {0.1, 0.2, 3.1928086279947725E15}

--- Starting Z-MERT iteration #2 @ Tue Oct 27 10:43:27 JST 2015 ---
Redecoding using weight vector {0.1, 0.2, 3.1928086279947725E15}
Running decoder...
...finished decoding @ Tue Oct 27 10:43:28 JST 2015
Reading candidate translations from iterations 1-2
(and computing BLEU sufficient statistics for previously unseen candidates)
  Progress: ...+...+...
Warning: attempt to delete ZMERT.temp.stats.mergedKnown was unsuccessful!
Processed 7763 distinct candidates (about 26 per sentence):
newCandidatesAdded[it=1] = 7763 (about 26 per sentence)
newCandidatesAdded[it=2] = 0 (about 0 per sentence)

No new candidates added in this iteration; exiting Z-MERT.

---  Z-MERT iteration #2 ending @ Tue Oct 27 10:43:29 JST 2015  ---


----------------------------------------------------
Z-MERT run ended @ Tue Oct 27 10:43:29 JST 2015
----------------------------------------------------

FINAL lambda: {0.1, 0.2, 3.1928086279947725E15} (BLEU: 0.8155810712209217)

(OP Lamda) : [0.1,0.2,3.1928086279947725E15]
Number of candidates => 200
tmpDirPrefix: ZMERT.
Processed the following args array:
  -r ref -rps 4 -p params.txt -m BLEU 4 closest -maxIt 15 -ipi 20 -cmd SDecoder_cmd.bat -decOut nbest.out -dcfg SDecoder_cfg.txt -N 10 -v 1 -seed 12341234 

----------------------------------------------------
Initializing...
----------------------------------------------------

Random number generator initialized using seed: 12341234

$$ decoderCommand: java SimpleDecoder SDecoder_cfg.txt nbest.out
Number of sentences: 200
Number of documents: 1
Optimizing BLEU
docSubsetInfo: {0, 1, 1, 1, 1, 0, 0}
Number of features: 3
Feature names: {"RD","Word Model","Headword Model"}

c    Default value	Optimizable?	Crit. val. range	Rand. val. range
1     0.1000		 Yes		 [-Infinity,Infinity]		 [-1.0,1.0]
2     0.2000		 Yes		 [-Infinity,Infinity]		 [-1.0,1.0]
3     -0.1000		 Yes		 [-Infinity,Infinity]		 [-1.0,1.0]

Weight vector normalization method: none.

----------------------------------------------------

----------------------------------------------------
Z-MERT run started @ Tue Oct 27 10:43:30 JST 2015
----------------------------------------------------

Initial lambda[]: {0.1, 0.2, -0.1}

--- Starting Z-MERT iteration #1 @ Tue Oct 27 10:43:30 JST 2015 ---
Decoding using initial weight vector {0.1, 0.2, -0.1}
Running decoder...
...finished decoding @ Tue Oct 27 10:43:30 JST 2015
Reading candidate translations from iterations 1-1
(and computing BLEU sufficient statistics for previously unseen candidates)
  Progress: Size: 2425
...+...+
Warning: attempt to delete ZMERT.temp.stats.unknown was unsuccessful!
Warning: attempt to delete ZMERT.temp.stats.mergedKnown was unsuccessful!
Processed 2425 distinct candidates (about 12 per sentence):
newCandidatesAdded[it=1] = 2425 (about 12 per sentence)

+++ Optimization of lambda[j=1] starting @ Tue Oct 27 10:43:31 JST 2015 +++
Initial lambda[j=1]: {0.1, 0.2, -0.1}
(Initial BLEU[j=1]: 0.8090999742824304)

Final lambda[j=1]: {0.029953311782496144, 0.2, 2.645807784429807E15}
(Final BLEU[j=1]: 0.8222426467553179)

+++ Optimization of lambda[j=2] starting @ Tue Oct 27 10:43:31 JST 2015 +++
Initial lambda[j=2]: {-0.017230818545013626, -0.6577977590753961, 0.46016061237234096}
(Initial BLEU[j=2]: 0.7804203737337145)

Final lambda[j=2]: {6.650971280940642E-18, -0.6577977590753961, 0.46016061237234096}
(Final BLEU[j=2]: 0.8222426467553179)

+++ Optimization of lambda[j=3] starting @ Tue Oct 27 10:43:31 JST 2015 +++
Initial lambda[j=3]: {-0.5203200954373215, 0.09518077619965482, -0.059473491599185246}
(Initial BLEU[j=3]: 0.775712194357685)

Final lambda[j=3]: {0.11981324712998458, 0.09518077619965482, 1.0216903759625672E16}
(Final BLEU[j=3]: 0.8222426467553179)

+++ Optimization of lambda[j=4] starting @ Tue Oct 27 10:43:31 JST 2015 +++
Initial lambda[j=4]: {-0.6919952429797738, -0.8743327758402839, -0.6393613928095458}
(Initial BLEU[j=4]: 0.775712194357685)

Final lambda[j=4]: {0.23962649425996915, -0.8743327758402839, 1.358788342337779E16}
(Final BLEU[j=4]: 0.8222426467553179)

+++ Optimization of lambda[j=5] starting @ Tue Oct 27 10:43:31 JST 2015 +++
Initial lambda[j=5]: {0.7737957524668755, 0.6493837878144797, -0.5778133794884044}
(Initial BLEU[j=5]: 0.8090999742824304)

Final lambda[j=5]: {0.23962649425996915, 0.6493837878144797, 2.0473148254355792E16}
(Final BLEU[j=5]: 0.8222426467553179)

+++ Optimization of lambda[j=6] starting @ Tue Oct 27 10:43:31 JST 2015 +++
Initial lambda[j=6]: {0.2815800420089276, 0.15636862697411513, 0.6539535776649275}
(Initial BLEU[j=6]: 0.8161422086335495)

Final lambda[j=6]: {1.3301942561881283E-17, 0.15636862697411513, 0.6539535776649275}
(Final BLEU[j=6]: 0.8222426467553179)

+++ Optimization of lambda[j=7] starting @ Tue Oct 27 10:43:31 JST 2015 +++
Initial lambda[j=7]: {0.32669861662639876, 0.009245077311689887, -0.9330111163449395}
(Initial BLEU[j=7]: 0.8087323999028982)

Final lambda[j=7]: {0.11981324712998458, 0.009245077311689887, 8.64381743032575E15}
(Final BLEU[j=7]: 0.8222426467553179)

+++ Optimization of lambda[j=8] starting @ Tue Oct 27 10:43:31 JST 2015 +++
Initial lambda[j=8]: {0.6515944996339995, 0.08804197789590318, 0.9795005730080566}
(Initial BLEU[j=8]: 0.8161422086335495)

Final lambda[j=8]: {1.3301942561881283E-17, 0.08804197789590318, 0.9795005730080566}
(Final BLEU[j=8]: 0.8222426467553179)

+++ Optimization of lambda[j=9] starting @ Tue Oct 27 10:43:31 JST 2015 +++
Initial lambda[j=9]: {-0.004553671263154424, 0.8593774528720801, -0.01427276865927607}
(Initial BLEU[j=9]: 0.7754552210455176)

Final lambda[j=9]: {0.003060642894670401, 0.8593774528720801, 1.1504495980313205E14}
(Final BLEU[j=9]: 0.8222426467553179)

+++ Optimization of lambda[j=10] starting @ Tue Oct 27 10:43:31 JST 2015 +++
Initial lambda[j=10]: {0.5053771649119221, -0.5713556223455967, -0.8739358729264859}
(Initial BLEU[j=10]: 0.8090999742824304)

Final lambda[j=10]: {0.5053771649119221, -0.5713556223455967, 1.3371308369970296E16}
(Final BLEU[j=10]: 0.8215146662590564)

+++ Optimization of lambda[j=11] starting @ Tue Oct 27 10:43:31 JST 2015 +++
Initial lambda[j=11]: {0.7980226618452084, -0.399205792984231, -0.5477913765324938}
(Initial BLEU[j=11]: 0.8090999742824304)

Final lambda[j=11]: {0.4792529885199383, -0.399205792984231, 2.111414570861448E16}
(Final BLEU[j=11]: 0.8222426467553179)

+++ Optimization of lambda[j=12] starting @ Tue Oct 27 10:43:31 JST 2015 +++
Initial lambda[j=12]: {0.594593012768021, -0.2974935383022126, 0.3275255626321376}
(Initial BLEU[j=12]: 0.8161422086335495)

Final lambda[j=12]: {1.0873587877819094E-17, -0.2974935383022126, 0.55}
(Final BLEU[j=12]: 0.8222426467553179)

+++ Optimization of lambda[j=13] starting @ Tue Oct 27 10:43:31 JST 2015 +++
Initial lambda[j=13]: {-0.21052430917292875, 0.981831267676273, -0.8102868749874037}
(Initial BLEU[j=13]: 0.775712194357685)

Final lambda[j=13]: {0.05990662356499229, 0.981831267676273, 4.133814213102201E15}
(Final BLEU[j=13]: 0.8222426467553179)

+++ Optimization of lambda[j=14] starting @ Tue Oct 27 10:43:31 JST 2015 +++
Initial lambda[j=14]: {0.03753776574773382, 0.00790321507749736, 0.03620028521108054}
(Initial BLEU[j=14]: 0.8161422086335495)

Final lambda[j=14]: {1.3591984847273867E-18, 0.00790321507749736, 0.096875}
(Final BLEU[j=14]: 0.8222426467553179)

+++ Optimization of lambda[j=15] starting @ Tue Oct 27 10:43:31 JST 2015 +++
Initial lambda[j=15]: {0.009954244141451962, 0.02541025170060851, 0.593645578752771}
(Initial BLEU[j=15]: 0.8161422086335495)

Final lambda[j=15]: {6.650971280940642E-18, 0.02541025170060851, 0.593645578752771}
(Final BLEU[j=15]: 0.8222426467553179)

+++ Optimization of lambda[j=16] starting @ Tue Oct 27 10:43:31 JST 2015 +++
Initial lambda[j=16]: {0.6576106932759427, 0.17534745529356877, -0.6893751690924723}
(Initial BLEU[j=16]: 0.8090999742824304)

Final lambda[j=16]: {0.23962649425996915, 0.17534745529356877, 1.739911491393771E16}
(Final BLEU[j=16]: 0.8222426467553179)

+++ Optimization of lambda[j=17] starting @ Tue Oct 27 10:43:31 JST 2015 +++
Initial lambda[j=17]: {-0.871756060640207, -0.8495287747458757, -0.3964594524802063}
(Initial BLEU[j=17]: 0.775712194357685)

Final lambda[j=17]: {0.23962649425996915, -0.8495287747458757, 1.7117631726188644E16}
(Final BLEU[j=17]: 0.8222426467553179)

+++ Optimization of lambda[j=18] starting @ Tue Oct 27 10:43:31 JST 2015 +++
Initial lambda[j=18]: {-0.4629095033959656, -0.10291979788243277, -0.8706362780408492}
(Initial BLEU[j=18]: 0.775712194357685)

Final lambda[j=18]: {0.11981324712998458, -0.10291979788243277, 9.089600588340944E15}
(Final BLEU[j=18]: 0.8222426467553179)

+++ Optimization of lambda[j=19] starting @ Tue Oct 27 10:43:31 JST 2015 +++
Initial lambda[j=19]: {-0.8834296944416113, 0.3073471861931083, -0.08254985860243691}
(Initial BLEU[j=19]: 0.775712194357685)

Final lambda[j=19]: {0.23962649425996915, 0.3073471861931083, 1.7346852919296354E16}
(Final BLEU[j=19]: 0.8222426467553179)

+++ Optimization of lambda[j=20] starting @ Tue Oct 27 10:43:31 JST 2015 +++
Initial lambda[j=20]: {-0.2916952155637593, -0.8022503514522665, -0.33852947919372234}
(Initial BLEU[j=20]: 0.775712194357685)

Final lambda[j=20]: {0.11981324712998458, -0.8022503514522665, 5.72767027583926E15}
(Final BLEU[j=20]: 0.8222426467553179)

Best final lambda is lambda[j=1] (BLEU: 0.8222).

---  Z-MERT iteration #1 ending @ Tue Oct 27 10:43:31 JST 2015  ---

Next iteration will decode with lambda: {0.029953311782496144, 0.2, 2.645807784429807E15}

--- Starting Z-MERT iteration #2 @ Tue Oct 27 10:43:31 JST 2015 ---
Redecoding using weight vector {0.029953311782496144, 0.2, 2.645807784429807E15}
Running decoder...
...finished decoding @ Tue Oct 27 10:43:32 JST 2015
Reading candidate translations from iterations 1-2
(and computing BLEU sufficient statistics for previously unseen candidates)
  Progress: ...+...+
Warning: attempt to delete ZMERT.temp.stats.mergedKnown was unsuccessful!
Processed 2425 distinct candidates (about 12 per sentence):
newCandidatesAdded[it=1] = 2425 (about 12 per sentence)
newCandidatesAdded[it=2] = 0 (about 0 per sentence)

No new candidates added in this iteration; exiting Z-MERT.

---  Z-MERT iteration #2 ending @ Tue Oct 27 10:43:32 JST 2015  ---


----------------------------------------------------
Z-MERT run ended @ Tue Oct 27 10:43:32 JST 2015
----------------------------------------------------

FINAL lambda: {0.029953311782496144, 0.2, 2.645807784429807E15} (BLEU: 0.8222426467553179)

(OP Lamda) : [0.029953311782496144,0.2,2.645807784429807E15]
Number of candidates => 118
tmpDirPrefix: ZMERT.
Processed the following args array:
  -r ref -rps 4 -p params.txt -m BLEU 4 closest -maxIt 15 -ipi 20 -cmd SDecoder_cmd.bat -decOut nbest.out -dcfg SDecoder_cfg.txt -N 10 -v 1 -seed 12341234 

----------------------------------------------------
Initializing...
----------------------------------------------------

Random number generator initialized using seed: 12341234

$$ decoderCommand: java SimpleDecoder SDecoder_cfg.txt nbest.out
Number of sentences: 118
Number of documents: 1
Optimizing BLEU
docSubsetInfo: {0, 1, 1, 1, 1, 0, 0}
Number of features: 3
Feature names: {"RD","Word Model","Headword Model"}

c    Default value	Optimizable?	Crit. val. range	Rand. val. range
1     0.1000		 Yes		 [-Infinity,Infinity]		 [-1.0,1.0]
2     0.2000		 Yes		 [-Infinity,Infinity]		 [-1.0,1.0]
3     -0.1000		 Yes		 [-Infinity,Infinity]		 [-1.0,1.0]

Weight vector normalization method: none.

----------------------------------------------------

----------------------------------------------------
Z-MERT run started @ Tue Oct 27 10:43:33 JST 2015
----------------------------------------------------

Initial lambda[]: {0.1, 0.2, -0.1}

--- Starting Z-MERT iteration #1 @ Tue Oct 27 10:43:33 JST 2015 ---
Decoding using initial weight vector {0.1, 0.2, -0.1}
Running decoder...
...finished decoding @ Tue Oct 27 10:43:33 JST 2015
Reading candidate translations from iterations 1-1
(and computing BLEU sufficient statistics for previously unseen candidates)
  Progress: Size: 2526
...+
Warning: attempt to delete ZMERT.temp.stats.unknown was unsuccessful!
Warning: attempt to delete ZMERT.temp.stats.mergedKnown was unsuccessful!
Processed 2526 distinct candidates (about 21 per sentence):
newCandidatesAdded[it=1] = 2526 (about 21 per sentence)

+++ Optimization of lambda[j=1] starting @ Tue Oct 27 10:43:34 JST 2015 +++
Initial lambda[j=1]: {0.1, 0.2, -0.1}
(Initial BLEU[j=1]: 0.8062242211479125)

Final lambda[j=1]: {0.1, 0.2, 2.465525670828773E14}
(Final BLEU[j=1]: 0.8218198832989962)

+++ Optimization of lambda[j=2] starting @ Tue Oct 27 10:43:34 JST 2015 +++
Initial lambda[j=2]: {-0.017230818545013626, -0.6577977590753961, 0.46016061237234096}
(Initial BLEU[j=2]: 0.7869472175294724)

Final lambda[j=2]: {1.0139825472430143E-16, -0.6577977590753961, 0.46016061237234096}
(Final BLEU[j=2]: 0.8218198832989962)

+++ Optimization of lambda[j=3] starting @ Tue Oct 27 10:43:34 JST 2015 +++
Initial lambda[j=3]: {-0.5203200954373215, 0.09518077619965482, -0.059473491599185246}
(Initial BLEU[j=3]: 0.7840590805771568)

Final lambda[j=3]: {0.9133142843847651, 0.09518077619965482, 5.906658083592908E15}
(Final BLEU[j=3]: 0.8218198832989962)

+++ Optimization of lambda[j=4] starting @ Tue Oct 27 10:43:34 JST 2015 +++
Initial lambda[j=4]: {-0.6919952429797738, -0.8743327758402839, -0.6393613928095458}
(Initial BLEU[j=4]: 0.7840590805771568)

Final lambda[j=4]: {1.3699714265771477, -0.8743327758402839, 7.855509198273298E15}
(Final BLEU[j=4]: 0.8218198832989962)

+++ Optimization of lambda[j=5] starting @ Tue Oct 27 10:43:34 JST 2015 +++
Initial lambda[j=5]: {0.7737957524668755, 0.6493837878144797, -0.5778133794884044}
(Initial BLEU[j=5]: 0.8062242211479125)

Final lambda[j=5]: {0.3424928566442869, 0.6493837878144797, 1.719297939268739E15}
(Final BLEU[j=5]: 0.8218198832989962)

+++ Optimization of lambda[j=6] starting @ Tue Oct 27 10:43:34 JST 2015 +++
Initial lambda[j=6]: {0.2815800420089276, 0.15636862697411513, 0.6539535776649275}
(Initial BLEU[j=6]: 0.8119665608260567)

Final lambda[j=6]: {1.5209738208645214E-16, 0.15636862697411513, 0.6539535776649275}
(Final BLEU[j=6]: 0.8218198832989962)

+++ Optimization of lambda[j=7] starting @ Tue Oct 27 10:43:34 JST 2015 +++
Initial lambda[j=7]: {0.32669861662639876, 0.009245077311689887, -0.9330111163449395}
(Initial BLEU[j=7]: 0.8062242211479125)

Final lambda[j=7]: {0.32669861662639876, 0.009245077311689887, 8.05483825916634E14}
(Final BLEU[j=7]: 0.8218198832989962)

+++ Optimization of lambda[j=8] starting @ Tue Oct 27 10:43:34 JST 2015 +++
Initial lambda[j=8]: {0.6515944996339995, 0.08804197789590318, 0.9795005730080566}
(Initial BLEU[j=8]: 0.8119665608260567)

Final lambda[j=8]: {2.0279650944860287E-16, 0.08804197789590318, 0.9795005730080566}
(Final BLEU[j=8]: 0.8218198832989962)

+++ Optimization of lambda[j=9] starting @ Tue Oct 27 10:43:34 JST 2015 +++
Initial lambda[j=9]: {-0.004553671263154424, 0.8593774528720801, -0.01427276865927607}
(Initial BLEU[j=9]: 0.7840590805771568)

Final lambda[j=9]: {0.010702901770133966, 0.8593774528720801, 5.439811671575305E13}
(Final BLEU[j=9]: 0.8218198832989962)

+++ Optimization of lambda[j=10] starting @ Tue Oct 27 10:43:34 JST 2015 +++
Initial lambda[j=10]: {0.5053771649119221, -0.5713556223455967, -0.8739358729264859}
(Initial BLEU[j=10]: 0.8062242211479125)

Final lambda[j=10]: {0.22832857109619129, -0.5713556223455967, 1.122898278281439E15}
(Final BLEU[j=10]: 0.8218198832989962)

+++ Optimization of lambda[j=11] starting @ Tue Oct 27 10:43:34 JST 2015 +++
Initial lambda[j=11]: {0.7980226618452084, -0.399205792984231, -0.5477913765324938}
(Initial BLEU[j=11]: 0.8062242211479125)

Final lambda[j=11]: {0.3424928566442869, -0.399205792984231, 1.7731277454368745E15}
(Final BLEU[j=11]: 0.8218198832989962)

+++ Optimization of lambda[j=12] starting @ Tue Oct 27 10:43:34 JST 2015 +++
Initial lambda[j=12]: {0.594593012768021, -0.2974935383022126, 0.3275255626321376}
(Initial BLEU[j=12]: 0.8119665608260567)

Final lambda[j=12]: {5.0699127362150717E-17, -0.2974935383022126, 0.3275255626321376}
(Final BLEU[j=12]: 0.8218198832989962)

+++ Optimization of lambda[j=13] starting @ Tue Oct 27 10:43:34 JST 2015 +++
Initial lambda[j=13]: {-0.21052430917292875, 0.981831267676273, -0.8102868749874037}
(Initial BLEU[j=13]: 0.7840590805771568)

Final lambda[j=13]: {0.45665714219238257, 0.981831267676273, 2.389865629779208E15}
(Final BLEU[j=13]: 0.8218198832989962)

+++ Optimization of lambda[j=14] starting @ Tue Oct 27 10:43:34 JST 2015 +++
Initial lambda[j=14]: {0.03753776574773382, 0.00790321507749736, 0.03620028521108054}
(Initial BLEU[j=14]: 0.8119665608260567)

Final lambda[j=14]: {6.3373909202688396E-18, 0.00790321507749736, 0.03620028521108054}
(Final BLEU[j=14]: 0.8218198832989962)

+++ Optimization of lambda[j=15] starting @ Tue Oct 27 10:43:34 JST 2015 +++
Initial lambda[j=15]: {0.009954244141451962, 0.02541025170060851, 0.593645578752771}
(Initial BLEU[j=15]: 0.8119665608260567)

Final lambda[j=15]: {1.267478184053768E-16, 0.02541025170060851, 0.593645578752771}
(Final BLEU[j=15]: 0.8218198832989962)

+++ Optimization of lambda[j=16] starting @ Tue Oct 27 10:43:34 JST 2015 +++
Initial lambda[j=16]: {0.6576106932759427, 0.17534745529356877, -0.6893751690924723}
(Initial BLEU[j=16]: 0.8062242211479125)

Final lambda[j=16]: {0.3424928566442869, 0.17534745529356877, 1.461146182550045E15}
(Final BLEU[j=16]: 0.8218198832989962)

+++ Optimization of lambda[j=17] starting @ Tue Oct 27 10:43:34 JST 2015 +++
Initial lambda[j=17]: {-0.871756060640207, -0.8495287747458757, -0.3964594524802063}
(Initial BLEU[j=17]: 0.7840590805771568)

Final lambda[j=17]: {1.8266285687695303, -0.8495287747458757, 9.896148597093468E15}
(Final BLEU[j=17]: 0.8218198832989962)

+++ Optimization of lambda[j=18] starting @ Tue Oct 27 10:43:34 JST 2015 +++
Initial lambda[j=18]: {-0.4629095033959656, -0.10291979788243277, -0.8706362780408492}
(Initial BLEU[j=18]: 0.7840590805771568)

Final lambda[j=18]: {1.1416428554809566, -0.10291979788243277, 5.254934768390336E15}
(Final BLEU[j=18]: 0.8218198832989962)

+++ Optimization of lambda[j=19] starting @ Tue Oct 27 10:43:34 JST 2015 +++
Initial lambda[j=19]: {-0.8834296944416113, 0.3073471861931083, -0.08254985860243691}
(Initial BLEU[j=19]: 0.7840590805771568)

Final lambda[j=19]: {2.283285710961913, 0.3073471861931083, 1.0028667337120246E16}
(Final BLEU[j=19]: 0.8218198832989962)

+++ Optimization of lambda[j=20] starting @ Tue Oct 27 10:43:34 JST 2015 +++
Initial lambda[j=20]: {-0.2916952155637593, -0.8022503514522665, -0.33852947919372234}
(Initial BLEU[j=20]: 0.7840590805771568)

Final lambda[j=20]: {0.6849857132885738, -0.8022503514522665, 3.3113153192881115E15}
(Final BLEU[j=20]: 0.8218198832989962)

Best final lambda is lambda[j=1] (BLEU: 0.8218).

---  Z-MERT iteration #1 ending @ Tue Oct 27 10:43:34 JST 2015  ---

Next iteration will decode with lambda: {0.1, 0.2, 2.465525670828773E14}

--- Starting Z-MERT iteration #2 @ Tue Oct 27 10:43:34 JST 2015 ---
Redecoding using weight vector {0.1, 0.2, 2.465525670828773E14}
Running decoder...
...finished decoding @ Tue Oct 27 10:43:35 JST 2015
Reading candidate translations from iterations 1-2
(and computing BLEU sufficient statistics for previously unseen candidates)
  Progress: ...+
Warning: attempt to delete ZMERT.temp.stats.mergedKnown was unsuccessful!
Processed 2526 distinct candidates (about 21 per sentence):
newCandidatesAdded[it=1] = 2526 (about 21 per sentence)
newCandidatesAdded[it=2] = 0 (about 0 per sentence)

No new candidates added in this iteration; exiting Z-MERT.

---  Z-MERT iteration #2 ending @ Tue Oct 27 10:43:35 JST 2015  ---


----------------------------------------------------
Z-MERT run ended @ Tue Oct 27 10:43:35 JST 2015
----------------------------------------------------

FINAL lambda: {0.1, 0.2, 2.465525670828773E14} (BLEU: 0.8218198832989962)

(OP Lamda) : [0.1,0.2,2.465525670828773E14]
Number of candidates => 67
tmpDirPrefix: ZMERT.
Processed the following args array:
  -r ref -rps 4 -p params.txt -m BLEU 4 closest -maxIt 15 -ipi 20 -cmd SDecoder_cmd.bat -decOut nbest.out -dcfg SDecoder_cfg.txt -N 10 -v 1 -seed 12341234 

----------------------------------------------------
Initializing...
----------------------------------------------------

Random number generator initialized using seed: 12341234

$$ decoderCommand: java SimpleDecoder SDecoder_cfg.txt nbest.out
Number of sentences: 67
Number of documents: 1
Optimizing BLEU
docSubsetInfo: {0, 1, 1, 1, 1, 0, 0}
Number of features: 3
Feature names: {"RD","Word Model","Headword Model"}

c    Default value	Optimizable?	Crit. val. range	Rand. val. range
1     0.1000		 Yes		 [-Infinity,Infinity]		 [-1.0,1.0]
2     0.2000		 Yes		 [-Infinity,Infinity]		 [-1.0,1.0]
3     -0.1000		 Yes		 [-Infinity,Infinity]		 [-1.0,1.0]

Weight vector normalization method: none.

----------------------------------------------------

----------------------------------------------------
Z-MERT run started @ Tue Oct 27 10:43:35 JST 2015
----------------------------------------------------

Initial lambda[]: {0.1, 0.2, -0.1}

--- Starting Z-MERT iteration #1 @ Tue Oct 27 10:43:35 JST 2015 ---
Decoding using initial weight vector {0.1, 0.2, -0.1}
Running decoder...
...finished decoding @ Tue Oct 27 10:43:36 JST 2015
Reading candidate translations from iterations 1-1
(and computing BLEU sufficient statistics for previously unseen candidates)
  Progress: Size: 841
..
Warning: attempt to delete ZMERT.temp.stats.unknown was unsuccessful!
Warning: attempt to delete ZMERT.temp.stats.mergedKnown was unsuccessful!
Processed 841 distinct candidates (about 12 per sentence):
newCandidatesAdded[it=1] = 841 (about 12 per sentence)

+++ Optimization of lambda[j=1] starting @ Tue Oct 27 10:43:36 JST 2015 +++
Initial lambda[j=1]: {0.1, 0.2, -0.1}
(Initial BLEU[j=1]: 0.7966209299271624)

Final lambda[j=1]: {0.1, 0.2, 1.05939152478795E15}
(Final BLEU[j=1]: 0.8086924321140149)

+++ Optimization of lambda[j=2] starting @ Tue Oct 27 10:43:36 JST 2015 +++
Initial lambda[j=2]: {-0.017230818545013626, -0.6577977590753961, 0.46016061237234096}
(Initial BLEU[j=2]: 0.7752717607089675)

Final lambda[j=2]: {2.3598451955714916E-17, -0.6577977590753961, 0.46016061237234096}
(Final BLEU[j=2]: 0.8086924321140149)

+++ Optimization of lambda[j=3] starting @ Tue Oct 27 10:43:36 JST 2015 +++
Initial lambda[j=3]: {-0.5203200954373215, 0.09518077619965482, -0.059473491599185246}
(Initial BLEU[j=3]: 0.772598437712651)

Final lambda[j=3]: {0.05313898971713912, 0.09518077619965482, 1.0649446499130132E15}
(Final BLEU[j=3]: 0.8086924321140149)

+++ Optimization of lambda[j=4] starting @ Tue Oct 27 10:43:36 JST 2015 +++
Initial lambda[j=4]: {-0.6919952429797738, -0.8743327758402839, -0.6393613928095458}
(Initial BLEU[j=4]: 0.772598437712651)

Final lambda[j=4]: {0.05313898971713912, -0.8743327758402839, 1.4163139925571805E15}
(Final BLEU[j=4]: 0.8086924321140149)

+++ Optimization of lambda[j=5] starting @ Tue Oct 27 10:43:36 JST 2015 +++
Initial lambda[j=5]: {0.7737957524668755, 0.6493837878144797, -0.5778133794884044}
(Initial BLEU[j=5]: 0.7966209299271624)

Final lambda[j=5]: {0.2125559588685565, 0.6493837878144797, 4.1025799761120825E15}
(Final BLEU[j=5]: 0.8086924321140149)

+++ Optimization of lambda[j=6] starting @ Tue Oct 27 10:43:36 JST 2015 +++
Initial lambda[j=6]: {0.2815800420089276, 0.15636862697411513, 0.6539535776649275}
(Initial BLEU[j=6]: 0.8015142236986205)

Final lambda[j=6]: {3.5397677933572374E-17, 0.15636862697411513, 0.6539535776649275}
(Final BLEU[j=6]: 0.8086924321140149)

+++ Optimization of lambda[j=7] starting @ Tue Oct 27 10:43:36 JST 2015 +++
Initial lambda[j=7]: {0.32669861662639876, 0.009245077311689887, -0.9330111163449395}
(Initial BLEU[j=7]: 0.7966209299271624)

Final lambda[j=7]: {0.07970848457570869, 0.009245077311689887, 1.73212013444382E15}
(Final BLEU[j=7]: 0.8086924321140149)

+++ Optimization of lambda[j=8] starting @ Tue Oct 27 10:43:36 JST 2015 +++
Initial lambda[j=8]: {0.6515944996339995, 0.08804197789590318, 0.9795005730080566}
(Initial BLEU[j=8]: 0.8015142236986205)

Final lambda[j=8]: {4.719690391142983E-17, 0.08804197789590318, 0.9795005730080566}
(Final BLEU[j=8]: 0.8086924321140149)

+++ Optimization of lambda[j=9] starting @ Tue Oct 27 10:43:36 JST 2015 +++
Initial lambda[j=9]: {-0.004553671263154424, 0.8593774528720801, -0.01427276865927607}
(Initial BLEU[j=9]: 0.772598437712651)

Final lambda[j=9]: {8.302967143302988E-4, 0.8593774528720801, 1.738410759172555E13}
(Final BLEU[j=9]: 0.8086924321140149)

+++ Optimization of lambda[j=10] starting @ Tue Oct 27 10:43:36 JST 2015 +++
Initial lambda[j=10]: {0.5053771649119221, -0.5713556223455967, -0.8739358729264859}
(Initial BLEU[j=10]: 0.7966209299271624)

Final lambda[j=10]: {0.10627797943427825, -0.5713556223455967, 2.6794541460612385E15}
(Final BLEU[j=10]: 0.8086924321140149)

+++ Optimization of lambda[j=11] starting @ Tue Oct 27 10:43:36 JST 2015 +++
Initial lambda[j=11]: {0.7980226618452084, -0.399205792984231, -0.5477913765324938}
(Initial BLEU[j=11]: 0.7966209299271624)

Final lambda[j=11]: {0.2125559588685565, -0.399205792984231, 4.231028385116351E15}
(Final BLEU[j=11]: 0.8086924321140149)

+++ Optimization of lambda[j=12] starting @ Tue Oct 27 10:43:36 JST 2015 +++
Initial lambda[j=12]: {0.594593012768021, -0.2974935383022126, 0.3275255626321376}
(Initial BLEU[j=12]: 0.8015142236986205)

Final lambda[j=12]: {1.1799225977857458E-17, -0.2974935383022126, 0.3275255626321376}
(Final BLEU[j=12]: 0.8086924321140149)

+++ Optimization of lambda[j=13] starting @ Tue Oct 27 10:43:36 JST 2015 +++
Initial lambda[j=13]: {-0.21052430917292875, 0.981831267676273, -0.8102868749874037}
(Initial BLEU[j=13]: 0.772598437712651)

Final lambda[j=13]: {0.03985424228785434, 0.981831267676273, 8.03698165686346E14}
(Final BLEU[j=13]: 0.8086924321140149)

+++ Optimization of lambda[j=14] starting @ Tue Oct 27 10:43:36 JST 2015 +++
Initial lambda[j=14]: {0.03753776574773382, 0.00790321507749736, 0.03620028521108054}
(Initial BLEU[j=14]: 0.8015142236986205)

Final lambda[j=14]: {1.4749032472321822E-18, 0.00790321507749736, 0.03620028521108054}
(Final BLEU[j=14]: 0.8086924321140149)

+++ Optimization of lambda[j=15] starting @ Tue Oct 27 10:43:36 JST 2015 +++
Initial lambda[j=15]: {0.009954244141451962, 0.02541025170060851, 0.593645578752771}
(Initial BLEU[j=15]: 0.8015142236986205)

Final lambda[j=15]: {2.949806494464364E-17, 0.02541025170060851, 0.593645578752771}
(Final BLEU[j=15]: 0.8086924321140149)

+++ Optimization of lambda[j=16] starting @ Tue Oct 27 10:43:36 JST 2015 +++
Initial lambda[j=16]: {0.6576106932759427, 0.17534745529356877, -0.6893751690924723}
(Initial BLEU[j=16]: 0.7966209299271624)

Final lambda[j=16]: {0.15941696915141737, 0.17534745529356877, 3.4865795705263425E15}
(Final BLEU[j=16]: 0.8086924321140149)

+++ Optimization of lambda[j=17] starting @ Tue Oct 27 10:43:36 JST 2015 +++
Initial lambda[j=17]: {-0.871756060640207, -0.8495287747458757, -0.3964594524802063}
(Initial BLEU[j=17]: 0.772598437712651)

Final lambda[j=17]: {0.07970848457570869, -0.8495287747458757, 1.7842323618651508E15}
(Final BLEU[j=17]: 0.8086924321140149)

+++ Optimization of lambda[j=18] starting @ Tue Oct 27 10:43:36 JST 2015 +++
Initial lambda[j=18]: {-0.4629095033959656, -0.10291979788243277, -0.8706362780408492}
(Initial BLEU[j=18]: 0.772598437712651)

Final lambda[j=18]: {0.03985424228785434, -0.10291979788243277, 9.474417831605884E14}
(Final BLEU[j=18]: 0.8086924321140149)

+++ Optimization of lambda[j=19] starting @ Tue Oct 27 10:43:36 JST 2015 +++
Initial lambda[j=19]: {-0.8834296944416113, 0.3073471861931083, -0.08254985860243691}
(Initial BLEU[j=19]: 0.772598437712651)

Final lambda[j=19]: {0.07970848457570869, 0.3073471861931083, 1.8081249117990535E15}
(Final BLEU[j=19]: 0.8086924321140149)

+++ Optimization of lambda[j=20] starting @ Tue Oct 27 10:43:36 JST 2015 +++
Initial lambda[j=20]: {-0.2916952155637593, -0.8022503514522665, -0.33852947919372234}
(Initial BLEU[j=20]: 0.772598437712651)

Final lambda[j=20]: {0.05313898971713912, -0.8022503514522665, 1.113576434992632E15}
(Final BLEU[j=20]: 0.8086924321140149)

Best final lambda is lambda[j=1] (BLEU: 0.8087).

---  Z-MERT iteration #1 ending @ Tue Oct 27 10:43:36 JST 2015  ---

Next iteration will decode with lambda: {0.1, 0.2, 1.05939152478795E15}

--- Starting Z-MERT iteration #2 @ Tue Oct 27 10:43:36 JST 2015 ---
Redecoding using weight vector {0.1, 0.2, 1.05939152478795E15}
Running decoder...
...finished decoding @ Tue Oct 27 10:43:36 JST 2015
Reading candidate translations from iterations 1-2
(and computing BLEU sufficient statistics for previously unseen candidates)
  Progress: ..
Warning: attempt to delete ZMERT.temp.stats.mergedKnown was unsuccessful!
Processed 841 distinct candidates (about 12 per sentence):
newCandidatesAdded[it=1] = 841 (about 12 per sentence)
newCandidatesAdded[it=2] = 0 (about 0 per sentence)

No new candidates added in this iteration; exiting Z-MERT.

---  Z-MERT iteration #2 ending @ Tue Oct 27 10:43:36 JST 2015  ---


----------------------------------------------------
Z-MERT run ended @ Tue Oct 27 10:43:36 JST 2015
----------------------------------------------------

FINAL lambda: {0.1, 0.2, 1.05939152478795E15} (BLEU: 0.8086924321140149)

(OP Lamda) : [0.1,0.2,1.05939152478795E15]
Number of candidates => 28
tmpDirPrefix: ZMERT.
Processed the following args array:
  -r ref -rps 4 -p params.txt -m BLEU 4 closest -maxIt 15 -ipi 20 -cmd SDecoder_cmd.bat -decOut nbest.out -dcfg SDecoder_cfg.txt -N 10 -v 1 -seed 12341234 

----------------------------------------------------
Initializing...
----------------------------------------------------

Random number generator initialized using seed: 12341234

$$ decoderCommand: java SimpleDecoder SDecoder_cfg.txt nbest.out
Number of sentences: 28
Number of documents: 1
Optimizing BLEU
docSubsetInfo: {0, 1, 1, 1, 1, 0, 0}
Number of features: 3
Feature names: {"RD","Word Model","Headword Model"}

c    Default value	Optimizable?	Crit. val. range	Rand. val. range
1     0.1000		 Yes		 [-Infinity,Infinity]		 [-1.0,1.0]
2     0.2000		 Yes		 [-Infinity,Infinity]		 [-1.0,1.0]
3     -0.1000		 Yes		 [-Infinity,Infinity]		 [-1.0,1.0]

Weight vector normalization method: none.

----------------------------------------------------

----------------------------------------------------
Z-MERT run started @ Tue Oct 27 10:43:37 JST 2015
----------------------------------------------------

Initial lambda[]: {0.1, 0.2, -0.1}

--- Starting Z-MERT iteration #1 @ Tue Oct 27 10:43:37 JST 2015 ---
Decoding using initial weight vector {0.1, 0.2, -0.1}
Running decoder...
...finished decoding @ Tue Oct 27 10:43:37 JST 2015
Reading candidate translations from iterations 1-1
(and computing BLEU sufficient statistics for previously unseen candidates)
  Progress: Size: 361
.
Warning: attempt to delete ZMERT.temp.stats.unknown was unsuccessful!
Warning: attempt to delete ZMERT.temp.stats.mergedKnown was unsuccessful!
Processed 361 distinct candidates (about 12 per sentence):
newCandidatesAdded[it=1] = 361 (about 12 per sentence)

+++ Optimization of lambda[j=1] starting @ Tue Oct 27 10:43:37 JST 2015 +++
Initial lambda[j=1]: {0.1, 0.2, -0.1}
(Initial BLEU[j=1]: 0.8263398240617337)

Final lambda[j=1]: {0.025569178670738386, 0.2, 1.100941062470148E15}
(Final BLEU[j=1]: 0.8325813079265812)

+++ Optimization of lambda[j=2] starting @ Tue Oct 27 10:43:37 JST 2015 +++
Initial lambda[j=2]: {-0.017230818545013626, -0.6577977590753961, 0.46016061237234096}
(Initial BLEU[j=2]: 0.7993260668478418)

Final lambda[j=2]: {1.1354996352403284E-17, -0.6577977590753961, 0.46016061237234096}
(Final BLEU[j=2]: 0.8325813079265812)

+++ Optimization of lambda[j=3] starting @ Tue Oct 27 10:43:37 JST 2015 +++
Initial lambda[j=3]: {-0.5203200954373215, 0.09518077619965482, -0.059473491599185246}
(Initial BLEU[j=3]: 0.7985211695526536)

Final lambda[j=3]: {0.05000001138312707, 0.09518077619965482, 1.1008372400873685E15}
(Final BLEU[j=3]: 0.8325813079265812)

+++ Optimization of lambda[j=4] starting @ Tue Oct 27 10:43:37 JST 2015 +++
Initial lambda[j=4]: {-0.6919952429797738, -0.8743327758402839, -0.6393613928095458}
(Initial BLEU[j=4]: 0.7985211695526536)

Final lambda[j=4]: {0.050000122372703945, -0.8743327758402839, 1.100839683716002E15}
(Final BLEU[j=4]: 0.8325813079265812)

+++ Optimization of lambda[j=5] starting @ Tue Oct 27 10:43:37 JST 2015 +++
Initial lambda[j=5]: {0.7737957524668755, 0.6493837878144797, -0.5778133794884044}
(Initial BLEU[j=5]: 0.8263398240617337)

Final lambda[j=5]: {0.2045534293659071, 0.6493837878144797, 8.519035178557693E15}
(Final BLEU[j=5]: 0.8325813079265812)

+++ Optimization of lambda[j=6] starting @ Tue Oct 27 10:43:37 JST 2015 +++
Initial lambda[j=6]: {0.2815800420089276, 0.15636862697411513, 0.6539535776649275}
(Initial BLEU[j=6]: 0.8271343681860972)

Final lambda[j=6]: {2.270999270480657E-17, 0.15636862697411513, 0.6539535776649275}
(Final BLEU[j=6]: 0.8325813079265812)

+++ Optimization of lambda[j=7] starting @ Tue Oct 27 10:43:37 JST 2015 +++
Initial lambda[j=7]: {0.32669861662639876, 0.009245077311689887, -0.9330111163449395}
(Initial BLEU[j=7]: 0.8263398240617337)

Final lambda[j=7]: {0.05113835734147677, 0.009245077311689887, 3.596759220961949E15}
(Final BLEU[j=7]: 0.8325813079265812)

+++ Optimization of lambda[j=8] starting @ Tue Oct 27 10:43:37 JST 2015 +++
Initial lambda[j=8]: {0.6515944996339995, 0.08804197789590318, 0.9795005730080566}
(Initial BLEU[j=8]: 0.8271343681860972)

Final lambda[j=8]: {2.270999270480657E-17, 0.08804197789590318, 0.9795005730080566}
(Final BLEU[j=8]: 0.8325813079265812)

+++ Optimization of lambda[j=9] starting @ Tue Oct 27 10:43:37 JST 2015 +++
Initial lambda[j=9]: {-0.004553671263154424, 0.8593774528720801, -0.01427276865927607}
(Initial BLEU[j=9]: 0.7985211695526536)

Final lambda[j=9]: {0.05000000273178411, 0.8593774528720801, 1.1008370496130015E15}
(Final BLEU[j=9]: 0.8325813079265812)

+++ Optimization of lambda[j=10] starting @ Tue Oct 27 10:43:37 JST 2015 +++
Initial lambda[j=10]: {0.5053771649119221, -0.5713556223455967, -0.8739358729264859}
(Initial BLEU[j=10]: 0.8263398240617337)

Final lambda[j=10]: {0.1534150720244303, -0.5713556223455967, 5.563904728862825E15}
(Final BLEU[j=10]: 0.8325813079265812)

+++ Optimization of lambda[j=11] starting @ Tue Oct 27 10:43:37 JST 2015 +++
Initial lambda[j=11]: {0.7980226618452084, -0.399205792984231, -0.5477913765324938}
(Initial BLEU[j=11]: 0.8263398240617337)

Final lambda[j=11]: {0.2045534293659071, -0.399205792984231, 8.785759172071194E15}
(Final BLEU[j=11]: 0.8325813079265812)

+++ Optimization of lambda[j=12] starting @ Tue Oct 27 10:43:37 JST 2015 +++
Initial lambda[j=12]: {0.594593012768021, -0.2974935383022126, 0.3275255626321376}
(Initial BLEU[j=12]: 0.8271343681860972)

Final lambda[j=12]: {5.677498176201642E-18, -0.2974935383022126, 0.3275255626321376}
(Final BLEU[j=12]: 0.8325813079265812)

+++ Optimization of lambda[j=13] starting @ Tue Oct 27 10:43:37 JST 2015 +++
Initial lambda[j=13]: {-0.21052430917292875, 0.981831267676273, -0.8102868749874037}
(Initial BLEU[j=13]: 0.7985211695526536)

Final lambda[j=13]: {0.05000015508755608, 0.981831267676273, 1.1008404039903885E15}
(Final BLEU[j=13]: 0.8325813079265812)

+++ Optimization of lambda[j=14] starting @ Tue Oct 27 10:43:37 JST 2015 +++
Initial lambda[j=14]: {0.03753776574773382, 0.00790321507749736, 0.03620028521108054}
(Initial BLEU[j=14]: 0.8271343681860972)

Final lambda[j=14]: {7.096872720252053E-19, 0.00790321507749736, 0.03620028521108054}
(Final BLEU[j=14]: 0.8325813079265812)

+++ Optimization of lambda[j=15] starting @ Tue Oct 27 10:43:37 JST 2015 +++
Initial lambda[j=15]: {0.009954244141451962, 0.02541025170060851, 0.593645578752771}
(Initial BLEU[j=15]: 0.8271343681860972)

Final lambda[j=15]: {1.1354996352403284E-17, 0.02541025170060851, 0.593645578752771}
(Final BLEU[j=15]: 0.8325813079265812)

+++ Optimization of lambda[j=16] starting @ Tue Oct 27 10:43:37 JST 2015 +++
Initial lambda[j=16]: {0.6576106932759427, 0.17534745529356877, -0.6893751690924723}
(Initial BLEU[j=16]: 0.8263398240617337)

Final lambda[j=16]: {0.2045534293659071, 0.17534745529356877, 7.239906153469467E15}
(Final BLEU[j=16]: 0.8325813079265812)

+++ Optimization of lambda[j=17] starting @ Tue Oct 27 10:43:37 JST 2015 +++
Initial lambda[j=17]: {-0.871756060640207, -0.8495287747458757, -0.3964594524802063}
(Initial BLEU[j=17]: 0.7985211695526536)

Final lambda[j=17]: {0.05000007588167779, -0.8495287747458757, 1.1008386601351765E15}
(Final BLEU[j=17]: 0.8325813079265812)

+++ Optimization of lambda[j=18] starting @ Tue Oct 27 10:43:37 JST 2015 +++
Initial lambda[j=18]: {-0.4629095033959656, -0.10291979788243277, -0.8706362780408492}
(Initial BLEU[j=18]: 0.7985211695526536)

Final lambda[j=18]: {0.05000016663833114, -0.10291979788243277, 1.1008406583007975E15}
(Final BLEU[j=18]: 0.8325813079265812)

+++ Optimization of lambda[j=19] starting @ Tue Oct 27 10:43:37 JST 2015 +++
Initial lambda[j=19]: {-0.8834296944416113, 0.3073471861931083, -0.08254985860243691}
(Initial BLEU[j=19]: 0.7985211695526536)

Final lambda[j=19]: {0.05000001579990522, 0.3073471861931083, 1.1008373373304238E15}
(Final BLEU[j=19]: 0.8325813079265812)

+++ Optimization of lambda[j=20] starting @ Tue Oct 27 10:43:37 JST 2015 +++
Initial lambda[j=20]: {-0.2916952155637593, -0.8022503514522665, -0.33852947919372234}
(Initial BLEU[j=20]: 0.7985211695526536)

Final lambda[j=20]: {0.05000006479397755, -0.8022503514522665, 1.1008384160201652E15}
(Final BLEU[j=20]: 0.8325813079265812)

Best final lambda is lambda[j=1] (BLEU: 0.8326).

---  Z-MERT iteration #1 ending @ Tue Oct 27 10:43:37 JST 2015  ---

Next iteration will decode with lambda: {0.025569178670738386, 0.2, 1.100941062470148E15}

--- Starting Z-MERT iteration #2 @ Tue Oct 27 10:43:37 JST 2015 ---
Redecoding using weight vector {0.025569178670738386, 0.2, 1.100941062470148E15}
Running decoder...
...finished decoding @ Tue Oct 27 10:43:37 JST 2015
Reading candidate translations from iterations 1-2
(and computing BLEU sufficient statistics for previously unseen candidates)
  Progress: .
Warning: attempt to delete ZMERT.temp.stats.mergedKnown was unsuccessful!
Processed 361 distinct candidates (about 12 per sentence):
newCandidatesAdded[it=1] = 361 (about 12 per sentence)
newCandidatesAdded[it=2] = 0 (about 0 per sentence)

No new candidates added in this iteration; exiting Z-MERT.

---  Z-MERT iteration #2 ending @ Tue Oct 27 10:43:37 JST 2015  ---


----------------------------------------------------
Z-MERT run ended @ Tue Oct 27 10:43:37 JST 2015
----------------------------------------------------

FINAL lambda: {0.025569178670738386, 0.2, 1.100941062470148E15} (BLEU: 0.8325813079265812)

(OP Lamda) : [0.025569178670738386,0.2,1.100941062470148E15]
Number of candidates => 15
tmpDirPrefix: ZMERT.
Processed the following args array:
  -r ref -rps 4 -p params.txt -m BLEU 4 closest -maxIt 15 -ipi 20 -cmd SDecoder_cmd.bat -decOut nbest.out -dcfg SDecoder_cfg.txt -N 10 -v 1 -seed 12341234 

----------------------------------------------------
Initializing...
----------------------------------------------------

Random number generator initialized using seed: 12341234

$$ decoderCommand: java SimpleDecoder SDecoder_cfg.txt nbest.out
Number of sentences: 15
Number of documents: 1
Optimizing BLEU
docSubsetInfo: {0, 1, 1, 1, 1, 0, 0}
Number of features: 3
Feature names: {"RD","Word Model","Headword Model"}

c    Default value	Optimizable?	Crit. val. range	Rand. val. range
1     0.1000		 Yes		 [-Infinity,Infinity]		 [-1.0,1.0]
2     0.2000		 Yes		 [-Infinity,Infinity]		 [-1.0,1.0]
3     -0.1000		 Yes		 [-Infinity,Infinity]		 [-1.0,1.0]

Weight vector normalization method: none.

----------------------------------------------------

----------------------------------------------------
Z-MERT run started @ Tue Oct 27 10:43:38 JST 2015
----------------------------------------------------

Initial lambda[]: {0.1, 0.2, -0.1}

--- Starting Z-MERT iteration #1 @ Tue Oct 27 10:43:38 JST 2015 ---
Decoding using initial weight vector {0.1, 0.2, -0.1}
Running decoder...
...finished decoding @ Tue Oct 27 10:43:38 JST 2015
Reading candidate translations from iterations 1-1
(and computing BLEU sufficient statistics for previously unseen candidates)
  Progress: Size: 74

Warning: attempt to delete ZMERT.temp.stats.unknown was unsuccessful!
Warning: attempt to delete ZMERT.temp.stats.mergedKnown was unsuccessful!
Processed 74 distinct candidates (about 4 per sentence):
newCandidatesAdded[it=1] = 74 (about 4 per sentence)

+++ Optimization of lambda[j=1] starting @ Tue Oct 27 10:43:38 JST 2015 +++
Initial lambda[j=1]: {0.1, 0.2, -0.1}
(Initial BLEU[j=1]: 0.8528199621360041)

Final lambda[j=1]: {0.1, 0.2, 0.05}
(Final BLEU[j=1]: 0.8596924462223581)

+++ Optimization of lambda[j=2] starting @ Tue Oct 27 10:43:38 JST 2015 +++
Initial lambda[j=2]: {-0.017230818545013626, -0.6577977590753961, 0.46016061237234096}
(Initial BLEU[j=2]: 0.8239585341898005)

Final lambda[j=2]: {0.05, -0.6577977590753961, 0.46016061237234096}
(Final BLEU[j=2]: 0.8596924462223581)

+++ Optimization of lambda[j=3] starting @ Tue Oct 27 10:43:38 JST 2015 +++
Initial lambda[j=3]: {-0.5203200954373215, 0.09518077619965482, -0.059473491599185246}
(Initial BLEU[j=3]: 0.8224985050018094)

Final lambda[j=3]: {0.05005805449798609, 0.09518077619965482, 0.05}
(Final BLEU[j=3]: 0.8596924462223581)

+++ Optimization of lambda[j=4] starting @ Tue Oct 27 10:43:38 JST 2015 +++
Initial lambda[j=4]: {-0.6919952429797738, -0.8743327758402839, -0.6393613928095458}
(Initial BLEU[j=4]: 0.8224985050018094)

Final lambda[j=4]: {0.05062410670187971, -0.8743327758402839, 0.05}
(Final BLEU[j=4]: 0.8596924462223581)

+++ Optimization of lambda[j=5] starting @ Tue Oct 27 10:43:38 JST 2015 +++
Initial lambda[j=5]: {0.7737957524668755, 0.6493837878144797, -0.5778133794884044}
(Initial BLEU[j=5]: 0.8528199621360041)

Final lambda[j=5]: {0.7737957524668755, 0.6493837878144797, 0.05}
(Final BLEU[j=5]: 0.8596924462223581)

+++ Optimization of lambda[j=6] starting @ Tue Oct 27 10:43:38 JST 2015 +++
Initial lambda[j=6]: {0.2815800420089276, 0.15636862697411513, 0.6539535776649275}
(Initial BLEU[j=6]: 0.8596924462223581)

Final lambda[j=6]: {0.2815800420089276, 0.15636862697411513, 0.6539535776649275}
(Final BLEU[j=6]: 0.8596924462223581)

+++ Optimization of lambda[j=7] starting @ Tue Oct 27 10:43:38 JST 2015 +++
Initial lambda[j=7]: {0.32669861662639876, 0.009245077311689887, -0.9330111163449395}
(Initial BLEU[j=7]: 0.8528199621360041)

Final lambda[j=7]: {0.32669861662639876, 0.009245077311689887, 0.05}
(Final BLEU[j=7]: 0.8596924462223581)

+++ Optimization of lambda[j=8] starting @ Tue Oct 27 10:43:38 JST 2015 +++
Initial lambda[j=8]: {0.6515944996339995, 0.08804197789590318, 0.9795005730080566}
(Initial BLEU[j=8]: 0.8596924462223581)

Final lambda[j=8]: {0.6515944996339995, 0.08804197789590318, 0.9795005730080566}
(Final BLEU[j=8]: 0.8596924462223581)

+++ Optimization of lambda[j=9] starting @ Tue Oct 27 10:43:38 JST 2015 +++
Initial lambda[j=9]: {-0.004553671263154424, 0.8593774528720801, -0.01427276865927607}
(Initial BLEU[j=9]: 0.822070677286207)

Final lambda[j=9]: {0.05001393223093356, 0.8593774528720801, 0.05}
(Final BLEU[j=9]: 0.8596924462223581)

+++ Optimization of lambda[j=10] starting @ Tue Oct 27 10:43:38 JST 2015 +++
Initial lambda[j=10]: {0.5053771649119221, -0.5713556223455967, -0.8739358729264859}
(Initial BLEU[j=10]: 0.8528199621360041)

Final lambda[j=10]: {0.5053771649119221, -0.5713556223455967, 0.05}
(Final BLEU[j=10]: 0.8596924462223581)

+++ Optimization of lambda[j=11] starting @ Tue Oct 27 10:43:38 JST 2015 +++
Initial lambda[j=11]: {0.7980226618452084, -0.399205792984231, -0.5477913765324938}
(Initial BLEU[j=11]: 0.8528199621360041)

Final lambda[j=11]: {0.7980226618452084, -0.399205792984231, 0.05}
(Final BLEU[j=11]: 0.8596924462223581)

+++ Optimization of lambda[j=12] starting @ Tue Oct 27 10:43:38 JST 2015 +++
Initial lambda[j=12]: {0.594593012768021, -0.2974935383022126, 0.3275255626321376}
(Initial BLEU[j=12]: 0.8596924462223581)

Final lambda[j=12]: {0.594593012768021, -0.2974935383022126, 0.3275255626321376}
(Final BLEU[j=12]: 0.8596924462223581)

+++ Optimization of lambda[j=13] starting @ Tue Oct 27 10:43:38 JST 2015 +++
Initial lambda[j=13]: {-0.21052430917292875, 0.981831267676273, -0.8102868749874037}
(Initial BLEU[j=13]: 0.8224985050018094)

Final lambda[j=13]: {0.05079095402821021, 0.981831267676273, 0.05}
(Final BLEU[j=13]: 0.8596924462223581)

+++ Optimization of lambda[j=14] starting @ Tue Oct 27 10:43:38 JST 2015 +++
Initial lambda[j=14]: {0.03753776574773382, 0.00790321507749736, 0.03620028521108054}
(Initial BLEU[j=14]: 0.8596924462223581)

Final lambda[j=14]: {0.03753776574773382, 0.00790321507749736, 0.03620028521108054}
(Final BLEU[j=14]: 0.8596924462223581)

+++ Optimization of lambda[j=15] starting @ Tue Oct 27 10:43:38 JST 2015 +++
Initial lambda[j=15]: {0.009954244141451962, 0.02541025170060851, 0.593645578752771}
(Initial BLEU[j=15]: 0.8596924462223581)

Final lambda[j=15]: {0.009954244141451962, 0.02541025170060851, 0.593645578752771}
(Final BLEU[j=15]: 0.8596924462223581)

+++ Optimization of lambda[j=16] starting @ Tue Oct 27 10:43:38 JST 2015 +++
Initial lambda[j=16]: {0.6576106932759427, 0.17534745529356877, -0.6893751690924723}
(Initial BLEU[j=16]: 0.8528199621360041)

Final lambda[j=16]: {0.6576106932759427, 0.17534745529356877, 0.05}
(Final BLEU[j=16]: 0.8596924462223581)

+++ Optimization of lambda[j=17] starting @ Tue Oct 27 10:43:38 JST 2015 +++
Initial lambda[j=17]: {-0.871756060640207, -0.8495287747458757, -0.3964594524802063}
(Initial BLEU[j=17]: 0.8224985050018094)

Final lambda[j=17]: {0.050387000222564524, -0.8495287747458757, 0.05}
(Final BLEU[j=17]: 0.8596924462223581)

+++ Optimization of lambda[j=18] starting @ Tue Oct 27 10:43:38 JST 2015 +++
Initial lambda[j=18]: {-0.4629095033959656, -0.10291979788243277, -0.8706362780408492}
(Initial BLEU[j=18]: 0.8224985050018094)

Final lambda[j=18]: {0.050849863539049744, -0.10291979788243277, 0.05}
(Final BLEU[j=18]: 0.8596924462223581)

+++ Optimization of lambda[j=19] starting @ Tue Oct 27 10:43:38 JST 2015 +++
Initial lambda[j=19]: {-0.8834296944416113, 0.3073471861931083, -0.08254985860243691}
(Initial BLEU[j=19]: 0.8224985050018094)

Final lambda[j=19]: {0.05008058027990493, 0.3073471861931083, 0.05}
(Final BLEU[j=19]: 0.8596924462223581)

+++ Optimization of lambda[j=20] starting @ Tue Oct 27 10:43:38 JST 2015 +++
Initial lambda[j=20]: {-0.2916952155637593, -0.8022503514522665, -0.33852947919372234}
(Initial BLEU[j=20]: 0.8224985050018094)

Final lambda[j=20]: {0.05033045241568346, -0.8022503514522665, 0.05}
(Final BLEU[j=20]: 0.8596924462223581)

Best final lambda is lambda[j=1] (BLEU: 0.8597).

---  Z-MERT iteration #1 ending @ Tue Oct 27 10:43:38 JST 2015  ---

Next iteration will decode with lambda: {0.1, 0.2, 0.05}

--- Starting Z-MERT iteration #2 @ Tue Oct 27 10:43:38 JST 2015 ---
Redecoding using weight vector {0.1, 0.2, 0.05}
Running decoder...
...finished decoding @ Tue Oct 27 10:43:38 JST 2015
Reading candidate translations from iterations 1-2
(and computing BLEU sufficient statistics for previously unseen candidates)
  Progress: 
Warning: attempt to delete ZMERT.temp.stats.unknown was unsuccessful!
Warning: attempt to delete ZMERT.temp.stats.mergedKnown was unsuccessful!
Processed 74 distinct candidates (about 4 per sentence):
newCandidatesAdded[it=1] = 74 (about 4 per sentence)
newCandidatesAdded[it=2] = 0 (about 0 per sentence)

No new candidates added in this iteration; exiting Z-MERT.

---  Z-MERT iteration #2 ending @ Tue Oct 27 10:43:38 JST 2015  ---


----------------------------------------------------
Z-MERT run ended @ Tue Oct 27 10:43:38 JST 2015
----------------------------------------------------

FINAL lambda: {0.1, 0.2, 0.05} (BLEU: 0.8596924462223581)

(OP Lamda) : [0.1,0.2,0.05]
Number of candidates => 8
tmpDirPrefix: ZMERT.
Processed the following args array:
  -r ref -rps 4 -p params.txt -m BLEU 4 closest -maxIt 15 -ipi 20 -cmd SDecoder_cmd.bat -decOut nbest.out -dcfg SDecoder_cfg.txt -N 10 -v 1 -seed 12341234 

----------------------------------------------------
Initializing...
----------------------------------------------------

Random number generator initialized using seed: 12341234

$$ decoderCommand: java SimpleDecoder SDecoder_cfg.txt nbest.out
Number of sentences: 8
Number of documents: 1
Optimizing BLEU
docSubsetInfo: {0, 1, 1, 1, 1, 0, 0}
Number of features: 3
Feature names: {"RD","Word Model","Headword Model"}

c    Default value	Optimizable?	Crit. val. range	Rand. val. range
1     0.1000		 Yes		 [-Infinity,Infinity]		 [-1.0,1.0]
2     0.2000		 Yes		 [-Infinity,Infinity]		 [-1.0,1.0]
3     -0.1000		 Yes		 [-Infinity,Infinity]		 [-1.0,1.0]

Weight vector normalization method: none.

----------------------------------------------------

----------------------------------------------------
Z-MERT run started @ Tue Oct 27 10:43:38 JST 2015
----------------------------------------------------

Initial lambda[]: {0.1, 0.2, -0.1}

--- Starting Z-MERT iteration #1 @ Tue Oct 27 10:43:38 JST 2015 ---
Decoding using initial weight vector {0.1, 0.2, -0.1}
Running decoder...
...finished decoding @ Tue Oct 27 10:43:38 JST 2015
Reading candidate translations from iterations 1-1
(and computing BLEU sufficient statistics for previously unseen candidates)
  Progress: Size: 52

Warning: attempt to delete ZMERT.temp.stats.unknown was unsuccessful!
Warning: attempt to delete ZMERT.temp.stats.mergedKnown was unsuccessful!
Processed 52 distinct candidates (about 6 per sentence):
newCandidatesAdded[it=1] = 52 (about 6 per sentence)

+++ Optimization of lambda[j=1] starting @ Tue Oct 27 10:43:38 JST 2015 +++
Initial lambda[j=1]: {0.1, 0.2, -0.1}
(Initial BLEU[j=1]: 0.8700377656474493)

Final lambda[j=1]: {0.1, 0.2, -0.1}
(Final BLEU[j=1]: 0.8700377656474493)

+++ Optimization of lambda[j=2] starting @ Tue Oct 27 10:43:38 JST 2015 +++
Initial lambda[j=2]: {-0.017230818545013626, -0.6577977590753961, 0.46016061237234096}
(Initial BLEU[j=2]: 0.8280055776114343)

Final lambda[j=2]: {0.05, -0.6577977590753961, 0.46016061237234096}
(Final BLEU[j=2]: 0.8700377656474493)

+++ Optimization of lambda[j=3] starting @ Tue Oct 27 10:43:38 JST 2015 +++
Initial lambda[j=3]: {-0.5203200954373215, 0.09518077619965482, -0.059473491599185246}
(Initial BLEU[j=3]: 0.8280055776114343)

Final lambda[j=3]: {0.050000000067827094, 0.09518077619965482, -0.059473491599185246}
(Final BLEU[j=3]: 0.8700377656474493)

+++ Optimization of lambda[j=4] starting @ Tue Oct 27 10:43:38 JST 2015 +++
Initial lambda[j=4]: {-0.6919952429797738, -0.8743327758402839, -0.6393613928095458}
(Initial BLEU[j=4]: 0.8280055776114343)

Final lambda[j=4]: {0.05000000072916558, -0.8743327758402839, -0.6393613928095458}
(Final BLEU[j=4]: 0.8700377656474493)

+++ Optimization of lambda[j=5] starting @ Tue Oct 27 10:43:38 JST 2015 +++
Initial lambda[j=5]: {0.7737957524668755, 0.6493837878144797, -0.5778133794884044}
(Initial BLEU[j=5]: 0.8700377656474493)

Final lambda[j=5]: {0.7737957524668755, 0.6493837878144797, -0.5778133794884044}
(Final BLEU[j=5]: 0.8700377656474493)

+++ Optimization of lambda[j=6] starting @ Tue Oct 27 10:43:38 JST 2015 +++
Initial lambda[j=6]: {0.2815800420089276, 0.15636862697411513, 0.6539535776649275}
(Initial BLEU[j=6]: 0.8700377656474493)

Final lambda[j=6]: {0.2815800420089276, 0.15636862697411513, 0.6539535776649275}
(Final BLEU[j=6]: 0.8700377656474493)

+++ Optimization of lambda[j=7] starting @ Tue Oct 27 10:43:38 JST 2015 +++
Initial lambda[j=7]: {0.32669861662639876, 0.009245077311689887, -0.9330111163449395}
(Initial BLEU[j=7]: 0.8700377656474493)

Final lambda[j=7]: {0.32669861662639876, 0.009245077311689887, -0.9330111163449395}
(Final BLEU[j=7]: 0.8700377656474493)

+++ Optimization of lambda[j=8] starting @ Tue Oct 27 10:43:38 JST 2015 +++
Initial lambda[j=8]: {0.6515944996339995, 0.08804197789590318, 0.9795005730080566}
(Initial BLEU[j=8]: 0.8700377656474493)

Final lambda[j=8]: {0.6515944996339995, 0.08804197789590318, 0.9795005730080566}
(Final BLEU[j=8]: 0.8700377656474493)

+++ Optimization of lambda[j=9] starting @ Tue Oct 27 10:43:38 JST 2015 +++
Initial lambda[j=9]: {-0.004553671263154424, 0.8593774528720801, -0.01427276865927607}
(Initial BLEU[j=9]: 0.8280055776114343)

Final lambda[j=9]: {0.05000000001627751, 0.8593774528720801, -0.01427276865927607}
(Final BLEU[j=9]: 0.8700377656474493)

+++ Optimization of lambda[j=10] starting @ Tue Oct 27 10:43:38 JST 2015 +++
Initial lambda[j=10]: {0.5053771649119221, -0.5713556223455967, -0.8739358729264859}
(Initial BLEU[j=10]: 0.8700377656474493)

Final lambda[j=10]: {0.5053771649119221, -0.5713556223455967, -0.8739358729264859}
(Final BLEU[j=10]: 0.8700377656474493)

+++ Optimization of lambda[j=11] starting @ Tue Oct 27 10:43:38 JST 2015 +++
Initial lambda[j=11]: {0.7980226618452084, -0.399205792984231, -0.5477913765324938}
(Initial BLEU[j=11]: 0.8700377656474493)

Final lambda[j=11]: {0.7980226618452084, -0.399205792984231, -0.5477913765324938}
(Final BLEU[j=11]: 0.8700377656474493)

+++ Optimization of lambda[j=12] starting @ Tue Oct 27 10:43:38 JST 2015 +++
Initial lambda[j=12]: {0.594593012768021, -0.2974935383022126, 0.3275255626321376}
(Initial BLEU[j=12]: 0.8700377656474493)

Final lambda[j=12]: {0.594593012768021, -0.2974935383022126, 0.3275255626321376}
(Final BLEU[j=12]: 0.8700377656474493)

+++ Optimization of lambda[j=13] starting @ Tue Oct 27 10:43:38 JST 2015 +++
Initial lambda[j=13]: {-0.21052430917292875, 0.981831267676273, -0.8102868749874037}
(Initial BLEU[j=13]: 0.8280055776114343)

Final lambda[j=13]: {0.05000000092409912, 0.981831267676273, -0.8102868749874037}
(Final BLEU[j=13]: 0.8700377656474493)

+++ Optimization of lambda[j=14] starting @ Tue Oct 27 10:43:38 JST 2015 +++
Initial lambda[j=14]: {0.03753776574773382, 0.00790321507749736, 0.03620028521108054}
(Initial BLEU[j=14]: 0.8700377656474493)

Final lambda[j=14]: {0.03753776574773382, 0.00790321507749736, 0.03620028521108054}
(Final BLEU[j=14]: 0.8700377656474493)

+++ Optimization of lambda[j=15] starting @ Tue Oct 27 10:43:38 JST 2015 +++
Initial lambda[j=15]: {0.009954244141451962, 0.02541025170060851, 0.593645578752771}
(Initial BLEU[j=15]: 0.8700377656474493)

Final lambda[j=15]: {0.009954244141451962, 0.02541025170060851, 0.593645578752771}
(Final BLEU[j=15]: 0.8700377656474493)

+++ Optimization of lambda[j=16] starting @ Tue Oct 27 10:43:38 JST 2015 +++
Initial lambda[j=16]: {0.6576106932759427, 0.17534745529356877, -0.6893751690924723}
(Initial BLEU[j=16]: 0.8700377656474493)

Final lambda[j=16]: {0.6576106932759427, 0.17534745529356877, -0.6893751690924723}
(Final BLEU[j=16]: 0.8700377656474493)

+++ Optimization of lambda[j=17] starting @ Tue Oct 27 10:43:38 JST 2015 +++
Initial lambda[j=17]: {-0.871756060640207, -0.8495287747458757, -0.3964594524802063}
(Initial BLEU[j=17]: 0.8280055776114343)

Final lambda[j=17]: {0.05000000045214581, -0.8495287747458757, -0.3964594524802063}
(Final BLEU[j=17]: 0.8700377656474493)

+++ Optimization of lambda[j=18] starting @ Tue Oct 27 10:43:38 JST 2015 +++
Initial lambda[j=18]: {-0.4629095033959656, -0.10291979788243277, -0.8706362780408492}
(Initial BLEU[j=18]: 0.8280055776114343)

Final lambda[j=18]: {0.050000000992925134, -0.10291979788243277, -0.8706362780408492}
(Final BLEU[j=18]: 0.8700377656474493)

+++ Optimization of lambda[j=19] starting @ Tue Oct 27 10:43:38 JST 2015 +++
Initial lambda[j=19]: {-0.8834296944416113, 0.3073471861931083, -0.08254985860243691}
(Initial BLEU[j=19]: 0.8280055776114343)

Final lambda[j=19]: {0.05000000009414475, 0.3073471861931083, -0.08254985860243691}
(Final BLEU[j=19]: 0.8700377656474493)

+++ Optimization of lambda[j=20] starting @ Tue Oct 27 10:43:38 JST 2015 +++
Initial lambda[j=20]: {-0.2916952155637593, -0.8022503514522665, -0.33852947919372234}
(Initial BLEU[j=20]: 0.8280055776114343)

Final lambda[j=20]: {0.05000000038607903, -0.8022503514522665, -0.33852947919372234}
(Final BLEU[j=20]: 0.8700377656474493)

Best final lambda is lambda[j=1] (BLEU: 0.8700).

---  Z-MERT iteration #1 ending @ Tue Oct 27 10:43:38 JST 2015  ---

No parameter value changed in this iteration; exiting Z-MERT.


----------------------------------------------------
Z-MERT run ended @ Tue Oct 27 10:43:38 JST 2015
----------------------------------------------------

FINAL lambda: {0.1, 0.2, -0.1} (BLEU: 0.8700377656474493)

(OP Lamda) : [0.1,0.2,-0.1]
Number of candidates => 3
tmpDirPrefix: ZMERT.
Processed the following args array:
  -r ref -rps 4 -p params.txt -m BLEU 4 closest -maxIt 15 -ipi 20 -cmd SDecoder_cmd.bat -decOut nbest.out -dcfg SDecoder_cfg.txt -N 10 -v 1 -seed 12341234 

----------------------------------------------------
Initializing...
----------------------------------------------------

Random number generator initialized using seed: 12341234

$$ decoderCommand: java SimpleDecoder SDecoder_cfg.txt nbest.out
Number of sentences: 3
Number of documents: 1
Optimizing BLEU
docSubsetInfo: {0, 1, 1, 1, 1, 0, 0}
Number of features: 3
Feature names: {"RD","Word Model","Headword Model"}

c    Default value	Optimizable?	Crit. val. range	Rand. val. range
1     0.1000		 Yes		 [-Infinity,Infinity]		 [-1.0,1.0]
2     0.2000		 Yes		 [-Infinity,Infinity]		 [-1.0,1.0]
3     -0.1000		 Yes		 [-Infinity,Infinity]		 [-1.0,1.0]

Weight vector normalization method: none.

----------------------------------------------------

----------------------------------------------------
Z-MERT run started @ Tue Oct 27 10:43:38 JST 2015
----------------------------------------------------

Initial lambda[]: {0.1, 0.2, -0.1}

--- Starting Z-MERT iteration #1 @ Tue Oct 27 10:43:38 JST 2015 ---
Decoding using initial weight vector {0.1, 0.2, -0.1}
Running decoder...
...finished decoding @ Tue Oct 27 10:43:38 JST 2015
Reading candidate translations from iterations 1-1
(and computing BLEU sufficient statistics for previously unseen candidates)
  Progress: Size: 4

Warning: attempt to delete ZMERT.temp.stats.unknown was unsuccessful!
Warning: attempt to delete ZMERT.temp.stats.mergedKnown was unsuccessful!
Processed 4 distinct candidates (about 1 per sentence):
newCandidatesAdded[it=1] = 4 (about 1 per sentence)

+++ Optimization of lambda[j=1] starting @ Tue Oct 27 10:43:38 JST 2015 +++
Initial lambda[j=1]: {0.1, 0.2, -0.1}
(Initial BLEU[j=1]: 0.9037664163933351)

Final lambda[j=1]: {0.1, 0.2, -0.1}
(Final BLEU[j=1]: 0.9037664163933351)

+++ Optimization of lambda[j=2] starting @ Tue Oct 27 10:43:38 JST 2015 +++
Initial lambda[j=2]: {-0.017230818545013626, -0.6577977590753961, 0.46016061237234096}
(Initial BLEU[j=2]: 0.8830710861889355)

Final lambda[j=2]: {0.04999999940497489, -0.6577977590753961, 0.46016061237234096}
(Final BLEU[j=2]: 0.9037664163933351)

+++ Optimization of lambda[j=3] starting @ Tue Oct 27 10:43:38 JST 2015 +++
Initial lambda[j=3]: {-0.5203200954373215, 0.09518077619965482, -0.059473491599185246}
(Initial BLEU[j=3]: 0.8830710861889355)

Final lambda[j=3]: {0.05000000007690407, 0.09518077619965482, -0.059473491599185246}
(Final BLEU[j=3]: 0.9037664163933351)

+++ Optimization of lambda[j=4] starting @ Tue Oct 27 10:43:38 JST 2015 +++
Initial lambda[j=4]: {-0.6919952429797738, -0.8743327758402839, -0.6393613928095458}
(Initial BLEU[j=4]: 0.8830710861889355)

Final lambda[j=4]: {0.05000000082674634, -0.8743327758402839, -0.6393613928095458}
(Final BLEU[j=4]: 0.9037664163933351)

+++ Optimization of lambda[j=5] starting @ Tue Oct 27 10:43:38 JST 2015 +++
Initial lambda[j=5]: {0.7737957524668755, 0.6493837878144797, -0.5778133794884044}
(Initial BLEU[j=5]: 0.9037664163933351)

Final lambda[j=5]: {0.7737957524668755, 0.6493837878144797, -0.5778133794884044}
(Final BLEU[j=5]: 0.9037664163933351)

+++ Optimization of lambda[j=6] starting @ Tue Oct 27 10:43:38 JST 2015 +++
Initial lambda[j=6]: {0.2815800420089276, 0.15636862697411513, 0.6539535776649275}
(Initial BLEU[j=6]: 0.9037664163933351)

Final lambda[j=6]: {0.2815800420089276, 0.15636862697411513, 0.6539535776649275}
(Final BLEU[j=6]: 0.9037664163933351)

+++ Optimization of lambda[j=7] starting @ Tue Oct 27 10:43:38 JST 2015 +++
Initial lambda[j=7]: {0.32669861662639876, 0.009245077311689887, -0.9330111163449395}
(Initial BLEU[j=7]: 0.9037664163933351)

Final lambda[j=7]: {0.32669861662639876, 0.009245077311689887, -0.9330111163449395}
(Final BLEU[j=7]: 0.9037664163933351)

+++ Optimization of lambda[j=8] starting @ Tue Oct 27 10:43:38 JST 2015 +++
Initial lambda[j=8]: {0.6515944996339995, 0.08804197789590318, 0.9795005730080566}
(Initial BLEU[j=8]: 0.9037664163933351)

Final lambda[j=8]: {0.6515944996339995, 0.08804197789590318, 0.9795005730080566}
(Final BLEU[j=8]: 0.9037664163933351)

+++ Optimization of lambda[j=9] starting @ Tue Oct 27 10:43:38 JST 2015 +++
Initial lambda[j=9]: {-0.004553671263154424, 0.8593774528720801, -0.01427276865927607}
(Initial BLEU[j=9]: 0.8830710861889355)

Final lambda[j=9]: {0.05000000001845585, 0.8593774528720801, -0.01427276865927607}
(Final BLEU[j=9]: 0.9037664163933351)

+++ Optimization of lambda[j=10] starting @ Tue Oct 27 10:43:38 JST 2015 +++
Initial lambda[j=10]: {0.5053771649119221, -0.5713556223455967, -0.8739358729264859}
(Initial BLEU[j=10]: 0.9037664163933351)

Final lambda[j=10]: {0.5053771649119221, -0.5713556223455967, -0.8739358729264859}
(Final BLEU[j=10]: 0.9037664163933351)

+++ Optimization of lambda[j=11] starting @ Tue Oct 27 10:43:38 JST 2015 +++
Initial lambda[j=11]: {0.7980226618452084, -0.399205792984231, -0.5477913765324938}
(Initial BLEU[j=11]: 0.9037664163933351)

Final lambda[j=11]: {0.7980226618452084, -0.399205792984231, -0.5477913765324938}
(Final BLEU[j=11]: 0.9037664163933351)

+++ Optimization of lambda[j=12] starting @ Tue Oct 27 10:43:38 JST 2015 +++
Initial lambda[j=12]: {0.594593012768021, -0.2974935383022126, 0.3275255626321376}
(Initial BLEU[j=12]: 0.9037664163933351)

Final lambda[j=12]: {0.594593012768021, -0.2974935383022126, 0.3275255626321376}
(Final BLEU[j=12]: 0.9037664163933351)

+++ Optimization of lambda[j=13] starting @ Tue Oct 27 10:43:38 JST 2015 +++
Initial lambda[j=13]: {-0.21052430917292875, 0.981831267676273, -0.8102868749874037}
(Initial BLEU[j=13]: 0.8830710861889355)

Final lambda[j=13]: {0.050000001047766876, 0.981831267676273, -0.8102868749874037}
(Final BLEU[j=13]: 0.9037664163933351)

+++ Optimization of lambda[j=14] starting @ Tue Oct 27 10:43:38 JST 2015 +++
Initial lambda[j=14]: {0.03753776574773382, 0.00790321507749736, 0.03620028521108054}
(Initial BLEU[j=14]: 0.9037664163933351)

Final lambda[j=14]: {0.03753776574773382, 0.00790321507749736, 0.03620028521108054}
(Final BLEU[j=14]: 0.9037664163933351)

+++ Optimization of lambda[j=15] starting @ Tue Oct 27 10:43:38 JST 2015 +++
Initial lambda[j=15]: {0.009954244141451962, 0.02541025170060851, 0.593645578752771}
(Initial BLEU[j=15]: 0.9037664163933351)

Final lambda[j=15]: {0.009954244141451962, 0.02541025170060851, 0.593645578752771}
(Final BLEU[j=15]: 0.9037664163933351)

+++ Optimization of lambda[j=16] starting @ Tue Oct 27 10:43:38 JST 2015 +++
Initial lambda[j=16]: {0.6576106932759427, 0.17534745529356877, -0.6893751690924723}
(Initial BLEU[j=16]: 0.9037664163933351)

Final lambda[j=16]: {0.6576106932759427, 0.17534745529356877, -0.6893751690924723}
(Final BLEU[j=16]: 0.9037664163933351)

+++ Optimization of lambda[j=17] starting @ Tue Oct 27 10:43:38 JST 2015 +++
Initial lambda[j=17]: {-0.871756060640207, -0.8495287747458757, -0.3964594524802063}
(Initial BLEU[j=17]: 0.8830710861889355)

Final lambda[j=17]: {0.05000000051265434, -0.8495287747458757, -0.3964594524802063}
(Final BLEU[j=17]: 0.9037664163933351)

+++ Optimization of lambda[j=18] starting @ Tue Oct 27 10:43:38 JST 2015 +++
Initial lambda[j=18]: {-0.4629095033959656, -0.10291979788243277, -0.8706362780408492}
(Initial BLEU[j=18]: 0.8830710861889355)

Final lambda[j=18]: {0.05000000112580355, -0.10291979788243277, -0.8706362780408492}
(Final BLEU[j=18]: 0.9037664163933351)

+++ Optimization of lambda[j=19] starting @ Tue Oct 27 10:43:38 JST 2015 +++
Initial lambda[j=19]: {-0.8834296944416113, 0.3073471861931083, -0.08254985860243691}
(Initial BLEU[j=19]: 0.8830710861889355)

Final lambda[j=19]: {0.050000000106743686, 0.3073471861931083, -0.08254985860243691}
(Final BLEU[j=19]: 0.9037664163933351)

+++ Optimization of lambda[j=20] starting @ Tue Oct 27 10:43:38 JST 2015 +++
Initial lambda[j=20]: {-0.2916952155637593, -0.8022503514522665, -0.33852947919372234}
(Initial BLEU[j=20]: 0.8830710861889355)

Final lambda[j=20]: {0.05000000043774616, -0.8022503514522665, -0.33852947919372234}
(Final BLEU[j=20]: 0.9037664163933351)

Best final lambda is lambda[j=1] (BLEU: 0.9038).

---  Z-MERT iteration #1 ending @ Tue Oct 27 10:43:38 JST 2015  ---

No parameter value changed in this iteration; exiting Z-MERT.


----------------------------------------------------
Z-MERT run ended @ Tue Oct 27 10:43:38 JST 2015
----------------------------------------------------

FINAL lambda: {0.1, 0.2, -0.1} (BLEU: 0.9037664163933351)

(OP Lamda) : [0.1,0.2,-0.1]
Number of candidates => 1
tmpDirPrefix: ZMERT.
Processed the following args array:
  -r ref -rps 4 -p params.txt -m BLEU 4 closest -maxIt 15 -ipi 20 -cmd SDecoder_cmd.bat -decOut nbest.out -dcfg SDecoder_cfg.txt -N 10 -v 1 -seed 12341234 

----------------------------------------------------
Initializing...
----------------------------------------------------

Random number generator initialized using seed: 12341234

$$ decoderCommand: java SimpleDecoder SDecoder_cfg.txt nbest.out
Number of sentences: 1
Number of documents: 1
Optimizing BLEU
docSubsetInfo: {0, 1, 1, 1, 1, 0, 0}
Number of features: 3
Feature names: {"RD","Word Model","Headword Model"}

c    Default value	Optimizable?	Crit. val. range	Rand. val. range
1     0.1000		 Yes		 [-Infinity,Infinity]		 [-1.0,1.0]
2     0.2000		 Yes		 [-Infinity,Infinity]		 [-1.0,1.0]
3     -0.1000		 Yes		 [-Infinity,Infinity]		 [-1.0,1.0]

Weight vector normalization method: none.

----------------------------------------------------

----------------------------------------------------
Z-MERT run started @ Tue Oct 27 10:43:38 JST 2015
----------------------------------------------------

Initial lambda[]: {0.1, 0.2, -0.1}

--- Starting Z-MERT iteration #1 @ Tue Oct 27 10:43:38 JST 2015 ---
Decoding using initial weight vector {0.1, 0.2, -0.1}
Running decoder...
...finished decoding @ Tue Oct 27 10:43:39 JST 2015
Reading candidate translations from iterations 1-1
(and computing BLEU sufficient statistics for previously unseen candidates)
  Progress: Size: 2

Warning: attempt to delete ZMERT.temp.stats.unknown was unsuccessful!
Warning: attempt to delete ZMERT.temp.stats.mergedKnown was unsuccessful!
Processed 2 distinct candidates (about 2 per sentence):
newCandidatesAdded[it=1] = 2 (about 2 per sentence)

+++ Optimization of lambda[j=1] starting @ Tue Oct 27 10:43:39 JST 2015 +++
Initial lambda[j=1]: {0.1, 0.2, -0.1}
(Initial BLEU[j=1]: 0.9426092134060646)

Final lambda[j=1]: {0.1, 0.2, -0.1}
(Final BLEU[j=1]: 0.9426092134060646)

+++ Optimization of lambda[j=2] starting @ Tue Oct 27 10:43:39 JST 2015 +++
Initial lambda[j=2]: {-0.017230818545013626, -0.6577977590753961, 0.46016061237234096}
(Initial BLEU[j=2]: 0.8916809066702428)

Final lambda[j=2]: {0.04999997247791982, -0.6577977590753961, 0.46016061237234096}
(Final BLEU[j=2]: 0.9426092134060646)

+++ Optimization of lambda[j=3] starting @ Tue Oct 27 10:43:39 JST 2015 +++
Initial lambda[j=3]: {-0.5203200954373215, 0.09518077619965482, -0.059473491599185246}
(Initial BLEU[j=3]: 0.8916809066702428)

Final lambda[j=3]: {0.05000000355709325, 0.09518077619965482, -0.059473491599185246}
(Final BLEU[j=3]: 0.9426092134060646)

+++ Optimization of lambda[j=4] starting @ Tue Oct 27 10:43:39 JST 2015 +++
Initial lambda[j=4]: {-0.6919952429797738, -0.8743327758402839, -0.6393613928095458}
(Initial BLEU[j=4]: 0.8916809066702428)

Final lambda[j=4]: {0.0500000382400298, -0.8743327758402839, -0.6393613928095458}
(Final BLEU[j=4]: 0.9426092134060646)

+++ Optimization of lambda[j=5] starting @ Tue Oct 27 10:43:39 JST 2015 +++
Initial lambda[j=5]: {0.7737957524668755, 0.6493837878144797, -0.5778133794884044}
(Initial BLEU[j=5]: 0.9426092134060646)

Final lambda[j=5]: {0.7737957524668755, 0.6493837878144797, -0.5778133794884044}
(Final BLEU[j=5]: 0.9426092134060646)

+++ Optimization of lambda[j=6] starting @ Tue Oct 27 10:43:39 JST 2015 +++
Initial lambda[j=6]: {0.2815800420089276, 0.15636862697411513, 0.6539535776649275}
(Initial BLEU[j=6]: 0.9426092134060646)

Final lambda[j=6]: {0.2815800420089276, 0.15636862697411513, 0.6539535776649275}
(Final BLEU[j=6]: 0.9426092134060646)

+++ Optimization of lambda[j=7] starting @ Tue Oct 27 10:43:39 JST 2015 +++
Initial lambda[j=7]: {0.32669861662639876, 0.009245077311689887, -0.9330111163449395}
(Initial BLEU[j=7]: 0.9426092134060646)

Final lambda[j=7]: {0.32669861662639876, 0.009245077311689887, -0.9330111163449395}
(Final BLEU[j=7]: 0.9426092134060646)

+++ Optimization of lambda[j=8] starting @ Tue Oct 27 10:43:39 JST 2015 +++
Initial lambda[j=8]: {0.6515944996339995, 0.08804197789590318, 0.9795005730080566}
(Initial BLEU[j=8]: 0.9426092134060646)

Final lambda[j=8]: {0.6515944996339995, 0.08804197789590318, 0.9795005730080566}
(Final BLEU[j=8]: 0.9426092134060646)

+++ Optimization of lambda[j=9] starting @ Tue Oct 27 10:43:39 JST 2015 +++
Initial lambda[j=9]: {-0.004553671263154424, 0.8593774528720801, -0.01427276865927607}
(Initial BLEU[j=9]: 0.8916809066702428)

Final lambda[j=9]: {0.050000000853650375, 0.8593774528720801, -0.01427276865927607}
(Final BLEU[j=9]: 0.9426092134060646)

+++ Optimization of lambda[j=10] starting @ Tue Oct 27 10:43:39 JST 2015 +++
Initial lambda[j=10]: {0.5053771649119221, -0.5713556223455967, -0.8739358729264859}
(Initial BLEU[j=10]: 0.9426092134060646)

Final lambda[j=10]: {0.5053771649119221, -0.5713556223455967, -0.8739358729264859}
(Final BLEU[j=10]: 0.9426092134060646)

+++ Optimization of lambda[j=11] starting @ Tue Oct 27 10:43:39 JST 2015 +++
Initial lambda[j=11]: {0.7980226618452084, -0.399205792984231, -0.5477913765324938}
(Initial BLEU[j=11]: 0.9426092134060646)

Final lambda[j=11]: {0.7980226618452084, -0.399205792984231, -0.5477913765324938}
(Final BLEU[j=11]: 0.9426092134060646)

+++ Optimization of lambda[j=12] starting @ Tue Oct 27 10:43:39 JST 2015 +++
Initial lambda[j=12]: {0.594593012768021, -0.2974935383022126, 0.3275255626321376}
(Initial BLEU[j=12]: 0.9426092134060646)

Final lambda[j=12]: {0.594593012768021, -0.2974935383022126, 0.3275255626321376}
(Final BLEU[j=12]: 0.9426092134060646)

+++ Optimization of lambda[j=13] starting @ Tue Oct 27 10:43:39 JST 2015 +++
Initial lambda[j=13]: {-0.21052430917292875, 0.981831267676273, -0.8102868749874037}
(Initial BLEU[j=13]: 0.8916809066702428)

Final lambda[j=13]: {0.05000004846303607, 0.981831267676273, -0.8102868749874037}
(Final BLEU[j=13]: 0.9426092134060646)

+++ Optimization of lambda[j=14] starting @ Tue Oct 27 10:43:39 JST 2015 +++
Initial lambda[j=14]: {0.03753776574773382, 0.00790321507749736, 0.03620028521108054}
(Initial BLEU[j=14]: 0.9426092134060646)

Final lambda[j=14]: {0.03753776574773382, 0.00790321507749736, 0.03620028521108054}
(Final BLEU[j=14]: 0.9426092134060646)

+++ Optimization of lambda[j=15] starting @ Tue Oct 27 10:43:39 JST 2015 +++
Initial lambda[j=15]: {0.009954244141451962, 0.02541025170060851, 0.593645578752771}
(Initial BLEU[j=15]: 0.9426092134060646)

Final lambda[j=15]: {0.009954244141451962, 0.02541025170060851, 0.593645578752771}
(Final BLEU[j=15]: 0.9426092134060646)

+++ Optimization of lambda[j=16] starting @ Tue Oct 27 10:43:39 JST 2015 +++
Initial lambda[j=16]: {0.6576106932759427, 0.17534745529356877, -0.6893751690924723}
(Initial BLEU[j=16]: 0.9426092134060646)

Final lambda[j=16]: {0.6576106932759427, 0.17534745529356877, -0.6893751690924723}
(Final BLEU[j=16]: 0.9426092134060646)

+++ Optimization of lambda[j=17] starting @ Tue Oct 27 10:43:39 JST 2015 +++
Initial lambda[j=17]: {-0.871756060640207, -0.8495287747458757, -0.3964594524802063}
(Initial BLEU[j=17]: 0.8916809066702428)

Final lambda[j=17]: {0.050000023712131275, -0.8495287747458757, -0.3964594524802063}
(Final BLEU[j=17]: 0.9426092134060646)

+++ Optimization of lambda[j=18] starting @ Tue Oct 27 10:43:39 JST 2015 +++
Initial lambda[j=18]: {-0.4629095033959656, -0.10291979788243277, -0.8706362780408492}
(Initial BLEU[j=18]: 0.8916809066702428)

Final lambda[j=18]: {0.05000005207251733, -0.10291979788243277, -0.8706362780408492}
(Final BLEU[j=18]: 0.9426092134060646)

+++ Optimization of lambda[j=19] starting @ Tue Oct 27 10:43:39 JST 2015 +++
Initial lambda[j=19]: {-0.8834296944416113, 0.3073471861931083, -0.08254985860243691}
(Initial BLEU[j=19]: 0.8916809066702428)

Final lambda[j=19]: {0.05000000493728443, 0.3073471861931083, -0.08254985860243691}
(Final BLEU[j=19]: 0.9426092134060646)

+++ Optimization of lambda[j=20] starting @ Tue Oct 27 10:43:39 JST 2015 +++
Initial lambda[j=20]: {-0.2916952155637593, -0.8022503514522665, -0.33852947919372234}
(Initial BLEU[j=20]: 0.8916809066702428)

Final lambda[j=20]: {0.050000020247355434, -0.8022503514522665, -0.33852947919372234}
(Final BLEU[j=20]: 0.9426092134060646)

Best final lambda is lambda[j=1] (BLEU: 0.9426).

---  Z-MERT iteration #1 ending @ Tue Oct 27 10:43:39 JST 2015  ---

No parameter value changed in this iteration; exiting Z-MERT.


----------------------------------------------------
Z-MERT run ended @ Tue Oct 27 10:43:39 JST 2015
----------------------------------------------------

FINAL lambda: {0.1, 0.2, -0.1} (BLEU: 0.9426092134060646)

(OP Lamda) : [0.1,0.2,-0.1]
Number of candidates => 0
Processing 526 sentences...

Corpus level score:
 See data/results/bleu_results.txt
Test Cumulative: 113809
Making Dependency Statistics ....
730818
0
168292
corpara: 0
next => 

Train Sentence: 499
Number of candidates => 1559
tmpDirPrefix: ZMERT.
Processed the following args array:
  -r ref -rps 4 -p params.txt -m BLEU 4 closest -maxIt 15 -ipi 20 -cmd SDecoder_cmd.bat -decOut nbest.out -dcfg SDecoder_cfg.txt -N 10 -v 1 -seed 12341234 

----------------------------------------------------
Initializing...
----------------------------------------------------

Random number generator initialized using seed: 12341234

$$ decoderCommand: java SimpleDecoder SDecoder_cfg.txt nbest.out
Number of sentences: 1559
Number of documents: 1
Optimizing BLEU
docSubsetInfo: {0, 1, 1, 1, 1, 0, 0}
Number of features: 3
Feature names: {"RD","Word Model","Headword Model"}

c    Default value	Optimizable?	Crit. val. range	Rand. val. range
1     0.1000		 Yes		 [-Infinity,Infinity]		 [-1.0,1.0]
2     0.2000		 Yes		 [-Infinity,Infinity]		 [-1.0,1.0]
3     -0.1000		 Yes		 [-Infinity,Infinity]		 [-1.0,1.0]

Weight vector normalization method: none.

----------------------------------------------------

----------------------------------------------------
Z-MERT run started @ Tue Oct 27 10:46:02 JST 2015
----------------------------------------------------

Initial lambda[]: {0.1, 0.2, -0.1}

--- Starting Z-MERT iteration #1 @ Tue Oct 27 10:46:02 JST 2015 ---
Decoding using initial weight vector {0.1, 0.2, -0.1}
Running decoder...
...finished decoding @ Tue Oct 27 10:46:02 JST 2015
Reading candidate translations from iterations 1-1
(and computing BLEU sufficient statistics for previously unseen candidates)
  Progress: Size: 2152
...+...+...+...+...500
            ...+...+...+...+...1000
            ...+...+...+...+...1500
            ..
Warning: attempt to delete ZMERT.temp.stats.unknown was unsuccessful!
Warning: attempt to delete ZMERT.temp.stats.mergedKnown was unsuccessful!
Processed 2152 distinct candidates (about 1 per sentence):
newCandidatesAdded[it=1] = 2152 (about 1 per sentence)

+++ Optimization of lambda[j=1] starting @ Tue Oct 27 10:46:03 JST 2015 +++
Initial lambda[j=1]: {0.1, 0.2, -0.1}
(Initial BLEU[j=1]: 0.8675691466570294)

Final lambda[j=1]: {0.1, -0.0688740706513941, -0.14168793510624172}
(Final BLEU[j=1]: 0.8739834464823246)

+++ Optimization of lambda[j=2] starting @ Tue Oct 27 10:46:03 JST 2015 +++
Initial lambda[j=2]: {-0.017230818545013626, -0.6577977590753961, 0.46016061237234096}
(Initial BLEU[j=2]: 0.7913473104828488)

Final lambda[j=2]: {-0.03732421184965656, -0.6577977590753961, -0.868670251397469}
(Final BLEU[j=2]: 0.8734129183618726)

+++ Optimization of lambda[j=3] starting @ Tue Oct 27 10:46:03 JST 2015 +++
Initial lambda[j=3]: {-0.5203200954373215, 0.09518077619965482, -0.059473491599185246}
(Initial BLEU[j=3]: 0.8562365411498122)

Final lambda[j=3]: {0.054751771757673665, -0.038204817119486735, -0.07846689818987947}
(Final BLEU[j=3]: 0.8739834464823246)

+++ Optimization of lambda[j=4] starting @ Tue Oct 27 10:46:03 JST 2015 +++
Initial lambda[j=4]: {-0.6919952429797738, -0.8743327758402839, -0.6393613928095458}
(Initial BLEU[j=4]: 0.8630503712727439)

Final lambda[j=4]: {-0.01154781009884034, -0.8743327758402839, -0.6659467618978698}
(Final BLEU[j=4]: 0.8759666873721603)

+++ Optimization of lambda[j=5] starting @ Tue Oct 27 10:46:03 JST 2015 +++
Initial lambda[j=5]: {0.7737957524668755, 0.6493837878144797, -0.5778133794884044}
(Initial BLEU[j=5]: 0.8673236027165451)

Final lambda[j=5]: {0.534117603783562, -0.37165225850864525, -0.7600599648431701}
(Final BLEU[j=5]: 0.8739834464823246)

+++ Optimization of lambda[j=6] starting @ Tue Oct 27 10:46:03 JST 2015 +++
Initial lambda[j=6]: {0.2815800420089276, 0.15636862697411513, 0.6539535776649275}
(Initial BLEU[j=6]: 0.7928743177245839)

Final lambda[j=6]: {0.07041038200512698, -0.0517190016750889, -0.09960764128602158}
(Final BLEU[j=6]: 0.8739834464823246)

+++ Optimization of lambda[j=7] starting @ Tue Oct 27 10:46:03 JST 2015 +++
Initial lambda[j=7]: {0.32669861662639876, 0.009245077311689887, -0.9330111163449395}
(Initial BLEU[j=7]: 0.8663053403785753)

Final lambda[j=7]: {0.6551499436674544, -0.45253169369211066, -0.9330111163449395}
(Final BLEU[j=7]: 0.8739834464823246)

+++ Optimization of lambda[j=8] starting @ Tue Oct 27 10:46:03 JST 2015 +++
Initial lambda[j=8]: {0.6515944996339995, 0.08804197789590318, 0.9795005730080566}
(Initial BLEU[j=8]: 0.795851466450815)

Final lambda[j=8]: {2.425280256942088, -1.781457082028321, -3.430977633866071}
(Final BLEU[j=8]: 0.8739834464823246)

+++ Optimization of lambda[j=9] starting @ Tue Oct 27 10:46:03 JST 2015 +++
Initial lambda[j=9]: {-0.004553671263154424, 0.8593774528720801, -0.01427276865927607}
(Initial BLEU[j=9]: 0.8343483265437591)

Final lambda[j=9]: {-0.009374350437743963, -0.7104443972703325, -0.5412507120659531}
(Final BLEU[j=9]: 0.8759666873721603)

+++ Optimization of lambda[j=10] starting @ Tue Oct 27 10:46:03 JST 2015 +++
Initial lambda[j=10]: {0.5053771649119221, -0.5713556223455967, -0.8739358729264859}
(Initial BLEU[j=10]: 0.8711670678555464)

Final lambda[j=10]: {0.6199524492797865, -0.46972627850199045, -0.8739358729264859}
(Final BLEU[j=10]: 0.8739834464823246)

+++ Optimization of lambda[j=11] starting @ Tue Oct 27 10:46:03 JST 2015 +++
Initial lambda[j=11]: {0.7980226618452084, -0.399205792984231, -0.5477913765324938}
(Initial BLEU[j=11]: 0.8706393734197323)

Final lambda[j=11]: {-0.022758570764140784, -0.399205792984231, -0.5477913765324938}
(Final BLEU[j=11]: 0.8734129183618726)

+++ Optimization of lambda[j=12] starting @ Tue Oct 27 10:46:03 JST 2015 +++
Initial lambda[j=12]: {0.594593012768021, -0.2974935383022126, 0.3275255626321376}
(Initial BLEU[j=12]: 0.7996855816408774)

Final lambda[j=12]: {0.45923733938724864, -0.3203282639502383, -0.6582595044369242}
(Final BLEU[j=12]: 0.8739834464823246)

+++ Optimization of lambda[j=13] starting @ Tue Oct 27 10:46:03 JST 2015 +++
Initial lambda[j=13]: {-0.21052430917292875, 0.981831267676273, -0.8102868749874037}
(Initial BLEU[j=13]: 0.8645103772321665)

Final lambda[j=13]: {0.5727734104031035, -0.4207230259015947, -0.8102868749874037}
(Final BLEU[j=13]: 0.8739834464823246)

+++ Optimization of lambda[j=14] starting @ Tue Oct 27 10:46:03 JST 2015 +++
Initial lambda[j=14]: {0.03753776574773382, 0.00790321507749736, 0.03620028521108054}
(Initial BLEU[j=14]: 0.7967769551680864)

Final lambda[j=14]: {0.17371525727904105, -0.12760021216116993, -0.24575022234220723}
(Final BLEU[j=14]: 0.8739834464823246)

+++ Optimization of lambda[j=15] starting @ Tue Oct 27 10:46:03 JST 2015 +++
Initial lambda[j=15]: {0.009954244141451962, 0.02541025170060851, 0.593645578752771}
(Initial BLEU[j=15]: 0.7876897753821381)

Final lambda[j=15]: {0.011294758251590459, -0.008296413175136552, -0.015978385520686908}
(Final BLEU[j=15]: 0.8739834464823246)

+++ Optimization of lambda[j=16] starting @ Tue Oct 27 10:46:03 JST 2015 +++
Initial lambda[j=16]: {0.6576106932759427, 0.17534745529356877, -0.6893751690924723}
(Initial BLEU[j=16]: 0.8635717009654293)

Final lambda[j=16]: {0.48834639936694535, -0.3655494526454033, -0.6893751690924723}
(Final BLEU[j=16]: 0.8739834464823246)

+++ Optimization of lambda[j=17] starting @ Tue Oct 27 10:46:03 JST 2015 +++
Initial lambda[j=17]: {-0.871756060640207, -0.8495287747458757, -0.3964594524802063}
(Initial BLEU[j=17]: 0.8609073797037813)

Final lambda[j=17]: {-0.011206646898739566, -0.8495287747458757, -0.647255237911446}
(Final BLEU[j=17]: 0.8759666873721603)

+++ Optimization of lambda[j=18] starting @ Tue Oct 27 10:46:03 JST 2015 +++
Initial lambda[j=18]: {-0.4629095033959656, -0.10291979788243277, -0.8706362780408492}
(Initial BLEU[j=18]: 0.8595124531968952)

Final lambda[j=18]: {0.8015997429828848, -0.5593539518361967, -1.1487930705886265}
(Final BLEU[j=18]: 0.8739834464823246)

+++ Optimization of lambda[j=19] starting @ Tue Oct 27 10:46:03 JST 2015 +++
Initial lambda[j=19]: {-0.8834296944416113, 0.3073471861931083, -0.08254985860243691}
(Initial BLEU[j=19]: 0.8530914257899511)

Final lambda[j=19]: {0.13766496177394233, -0.0995180158116756, -0.19509627251570538}
(Final BLEU[j=19]: 0.8739834464823246)

+++ Optimization of lambda[j=20] starting @ Tue Oct 27 10:46:03 JST 2015 +++
Initial lambda[j=20]: {-0.2916952155637593, -0.8022503514522665, -0.33852947919372234}
(Initial BLEU[j=20]: 0.8624074875940174)

Final lambda[j=20]: {-0.010583999886555059, -0.8022503514522665, -0.6112185836509705}
(Final BLEU[j=20]: 0.8759666873721603)

Best final lambda is lambda[j=4] (BLEU: 0.8760).

---  Z-MERT iteration #1 ending @ Tue Oct 27 10:46:03 JST 2015  ---

Next iteration will decode with lambda: {-0.01154781009884034, -0.8743327758402839, -0.6659467618978698}

--- Starting Z-MERT iteration #2 @ Tue Oct 27 10:46:03 JST 2015 ---
Redecoding using weight vector {-0.01154781009884034, -0.8743327758402839, -0.6659467618978698}
Running decoder...
...finished decoding @ Tue Oct 27 10:46:04 JST 2015
Reading candidate translations from iterations 1-2
(and computing BLEU sufficient statistics for previously unseen candidates)
  Progress: ...+...+...+...+...500
            ...+...+...+...+...1000
            ...+...+...+...+...1500
            ..
Warning: attempt to delete ZMERT.temp.stats.mergedKnown was unsuccessful!
Processed 2152 distinct candidates (about 1 per sentence):
newCandidatesAdded[it=1] = 2152 (about 1 per sentence)
newCandidatesAdded[it=2] = 0 (about 0 per sentence)

No new candidates added in this iteration; exiting Z-MERT.

---  Z-MERT iteration #2 ending @ Tue Oct 27 10:46:04 JST 2015  ---


----------------------------------------------------
Z-MERT run ended @ Tue Oct 27 10:46:04 JST 2015
----------------------------------------------------

FINAL lambda: {-0.01154781009884034, -0.8743327758402839, -0.6659467618978698} (BLEU: 0.8759666873721603)

(OP Lamda) : [-0.01154781009884034,-0.8743327758402839,-0.6659467618978698]
Number of candidates => 908
tmpDirPrefix: ZMERT.
Processed the following args array:
  -r ref -rps 4 -p params.txt -m BLEU 4 closest -maxIt 15 -ipi 20 -cmd SDecoder_cmd.bat -decOut nbest.out -dcfg SDecoder_cfg.txt -N 10 -v 1 -seed 12341234 

----------------------------------------------------
Initializing...
----------------------------------------------------

Random number generator initialized using seed: 12341234

$$ decoderCommand: java SimpleDecoder SDecoder_cfg.txt nbest.out
Number of sentences: 908
Number of documents: 1
Optimizing BLEU
docSubsetInfo: {0, 1, 1, 1, 1, 0, 0}
Number of features: 3
Feature names: {"RD","Word Model","Headword Model"}

c    Default value	Optimizable?	Crit. val. range	Rand. val. range
1     0.1000		 Yes		 [-Infinity,Infinity]		 [-1.0,1.0]
2     0.2000		 Yes		 [-Infinity,Infinity]		 [-1.0,1.0]
3     -0.1000		 Yes		 [-Infinity,Infinity]		 [-1.0,1.0]

Weight vector normalization method: none.

----------------------------------------------------

----------------------------------------------------
Z-MERT run started @ Tue Oct 27 10:46:05 JST 2015
----------------------------------------------------

Initial lambda[]: {0.1, 0.2, -0.1}

--- Starting Z-MERT iteration #1 @ Tue Oct 27 10:46:05 JST 2015 ---
Decoding using initial weight vector {0.1, 0.2, -0.1}
Running decoder...
...finished decoding @ Tue Oct 27 10:46:05 JST 2015
Reading candidate translations from iterations 1-1
(and computing BLEU sufficient statistics for previously unseen candidates)
  Progress: Size: 9061
...+...+...+...+...500
            ...+...+...+...+
Warning: attempt to delete ZMERT.temp.stats.unknown was unsuccessful!
Warning: attempt to delete ZMERT.temp.stats.mergedKnown was unsuccessful!
Processed 9061 distinct candidates (about 9 per sentence):
newCandidatesAdded[it=1] = 9061 (about 9 per sentence)

+++ Optimization of lambda[j=1] starting @ Tue Oct 27 10:46:07 JST 2015 +++
Initial lambda[j=1]: {0.1, 0.2, -0.1}
(Initial BLEU[j=1]: 0.798749182691751)

Final lambda[j=1]: {0.1, 0.2, -0.1}
(Final BLEU[j=1]: 0.798749182691751)

+++ Optimization of lambda[j=2] starting @ Tue Oct 27 10:46:07 JST 2015 +++
Initial lambda[j=2]: {-0.017230818545013626, -0.6577977590753961, 0.46016061237234096}
(Initial BLEU[j=2]: 0.7446121824550415)

Final lambda[j=2]: {-0.020819481130564022, -0.6577977590753961, -0.18068152473576585}
(Final BLEU[j=2]: 0.7968180363067656)

+++ Optimization of lambda[j=3] starting @ Tue Oct 27 10:46:07 JST 2015 +++
Initial lambda[j=3]: {-0.5203200954373215, 0.09518077619965482, -0.059473491599185246}
(Initial BLEU[j=3]: 0.7852795600615127)

Final lambda[j=3]: {0.05838589600434535, 0.08547906555934875, -0.059473491599185246}
(Final BLEU[j=3]: 0.7985366367545012)

+++ Optimization of lambda[j=4] starting @ Tue Oct 27 10:46:07 JST 2015 +++
Initial lambda[j=4]: {-0.6919952429797738, -0.8743327758402839, -0.6393613928095458}
(Initial BLEU[j=4]: 0.7809550289350784)

Final lambda[j=4]: {0.08229017261951611, 0.78330692119097, -0.24108207325578457}
(Final BLEU[j=4]: 0.7997143146950412)

+++ Optimization of lambda[j=5] starting @ Tue Oct 27 10:46:07 JST 2015 +++
Initial lambda[j=5]: {0.7737957524668755, 0.6493837878144797, -0.5778133794884044}
(Initial BLEU[j=5]: 0.7944225599325724)

Final lambda[j=5]: {0.5553625547827716, 0.8314955687484247, -0.5778133794884044}
(Final BLEU[j=5]: 0.7985366367545012)

+++ Optimization of lambda[j=6] starting @ Tue Oct 27 10:46:07 JST 2015 +++
Initial lambda[j=6]: {0.2815800420089276, 0.15636862697411513, 0.6539535776649275}
(Initial BLEU[j=6]: 0.754855684798522)

Final lambda[j=6]: {0.2815800420089276, 0.4153816484238994, -0.2886661877185727}
(Final BLEU[j=6]: 0.7985366367545012)

+++ Optimization of lambda[j=7] starting @ Tue Oct 27 10:46:07 JST 2015 +++
Initial lambda[j=7]: {0.32669861662639876, 0.009245077311689887, -0.9330111163449395}
(Initial BLEU[j=7]: 0.7897974106994814)

Final lambda[j=7]: {0.32669861662639876, 3.005165592852067, -0.9330111163449395}
(Final BLEU[j=7]: 0.7995018718686684)

+++ Optimization of lambda[j=8] starting @ Tue Oct 27 10:46:07 JST 2015 +++
Initial lambda[j=8]: {0.6515944996339995, 0.08804197789590318, 0.9795005730080566}
(Initial BLEU[j=8]: 0.7563297886050386)

Final lambda[j=8]: {0.6999162790884548, 1.4456071239041473, -0.6985483761532648}
(Final BLEU[j=8]: 0.798749182691751)

+++ Optimization of lambda[j=9] starting @ Tue Oct 27 10:46:07 JST 2015 +++
Initial lambda[j=9]: {-0.004553671263154424, 0.8593774528720801, -0.01427276865927607}
(Initial BLEU[j=9]: 0.7687924117358511)

Final lambda[j=9]: {0.0027220358695327846, 0.02606952122189273, -0.01427276865927607}
(Final BLEU[j=9]: 0.7993196054876964)

+++ Optimization of lambda[j=10] starting @ Tue Oct 27 10:46:07 JST 2015 +++
Initial lambda[j=10]: {0.5053771649119221, -0.5713556223455967, -0.8739358729264859}
(Initial BLEU[j=10]: 0.7935135410100818)

Final lambda[j=10]: {0.5365436362562377, 1.4331251154143683, -0.8739358729264859}
(Final BLEU[j=10]: 0.7986331033955101)

+++ Optimization of lambda[j=11] starting @ Tue Oct 27 10:46:08 JST 2015 +++
Initial lambda[j=11]: {0.7980226618452084, -0.399205792984231, -0.5477913765324938}
(Initial BLEU[j=11]: 0.7910683308342806)

Final lambda[j=11]: {0.16643408895703876, 0.9938966470720727, -0.5477913765324938}
(Final BLEU[j=11]: 0.7988757696358755)

+++ Optimization of lambda[j=12] starting @ Tue Oct 27 10:46:08 JST 2015 +++
Initial lambda[j=12]: {0.594593012768021, -0.2974935383022126, 0.3275255626321376}
(Initial BLEU[j=12]: 0.76031446459273)

Final lambda[j=12]: {0.5845257475301335, 0.8859710977494706, -0.6147411371985259}
(Final BLEU[j=12]: 0.7985366367545012)

+++ Optimization of lambda[j=13] starting @ Tue Oct 27 10:46:08 JST 2015 +++
Initial lambda[j=13]: {-0.21052430917292875, 0.981831267676273, -0.8102868749874037}
(Initial BLEU[j=13]: 0.7892665334382815)

Final lambda[j=13]: {0.7818755498145629, 1.1679013909013916, -0.8102868749874037}
(Final BLEU[j=13]: 0.7985366367545012)

+++ Optimization of lambda[j=14] starting @ Tue Oct 27 10:46:08 JST 2015 +++
Initial lambda[j=14]: {0.03753776574773382, 0.00790321507749736, 0.03620028521108054}
(Initial BLEU[j=14]: 0.7606724150743297)

Final lambda[j=14]: {0.04092445215809372, 0.08288025530417939, -0.04092227334361069}
(Final BLEU[j=14]: 0.798749182691751)

+++ Optimization of lambda[j=15] starting @ Tue Oct 27 10:46:08 JST 2015 +++
Initial lambda[j=15]: {0.009954244141451962, 0.02541025170060851, 0.593645578752771}
(Initial BLEU[j=15]: 0.7505303062395406)

Final lambda[j=15]: {0.01673024458901933, 0.02541025170060851, -0.017516590664802104}
(Final BLEU[j=15]: 0.7985366367545012)

+++ Optimization of lambda[j=16] starting @ Tue Oct 27 10:46:08 JST 2015 +++
Initial lambda[j=16]: {0.6576106932759427, 0.17534745529356877, -0.6893751690924723}
(Initial BLEU[j=16]: 0.793107520960052)

Final lambda[j=16]: {0.6576106932759427, 0.9890106099039098, -0.6893751690924723}
(Final BLEU[j=16]: 0.7985366367545012)

+++ Optimization of lambda[j=17] starting @ Tue Oct 27 10:46:08 JST 2015 +++
Initial lambda[j=17]: {-0.871756060640207, -0.8495287747458757, -0.3964594524802063}
(Initial BLEU[j=17]: 0.7792665722035442)

Final lambda[j=17]: {0.08368686172412391, 0.5665391089543363, -0.3964594524802063}
(Final BLEU[j=17]: 0.7988757696358755)

+++ Optimization of lambda[j=18] starting @ Tue Oct 27 10:46:08 JST 2015 +++
Initial lambda[j=18]: {-0.4629095033959656, -0.10291979788243277, -0.8706362780408492}
(Initial BLEU[j=18]: 0.7840696244254811)

Final lambda[j=18]: {0.8318914624517211, 1.249890291562954, -0.8706362780408492}
(Final BLEU[j=18]: 0.7985366367545012)

+++ Optimization of lambda[j=19] starting @ Tue Oct 27 10:46:08 JST 2015 +++
Initial lambda[j=19]: {-0.8834296944416113, 0.3073471861931083, -0.08254985860243691}
(Initial BLEU[j=19]: 0.7833640984012202)

Final lambda[j=19]: {0.033023166603961686, 0.312225655297118, -0.09544878730861298}
(Final BLEU[j=19]: 0.7993378767718742)

+++ Optimization of lambda[j=20] starting @ Tue Oct 27 10:46:08 JST 2015 +++
Initial lambda[j=20]: {-0.2916952155637593, -0.8022503514522665, -0.33852947919372234}
(Initial BLEU[j=20]: 0.7832365237787844)

Final lambda[j=20]: {0.06506079377548019, 0.6217618898411658, -0.33852947919372234}
(Final BLEU[j=20]: 0.7995320800134341)

Best final lambda is lambda[j=4] (BLEU: 0.7997).

---  Z-MERT iteration #1 ending @ Tue Oct 27 10:46:08 JST 2015  ---

Next iteration will decode with lambda: {0.08229017261951611, 0.78330692119097, -0.24108207325578457}

--- Starting Z-MERT iteration #2 @ Tue Oct 27 10:46:08 JST 2015 ---
Redecoding using weight vector {0.08229017261951611, 0.78330692119097, -0.24108207325578457}
Running decoder...
...finished decoding @ Tue Oct 27 10:46:09 JST 2015
Reading candidate translations from iterations 1-2
(and computing BLEU sufficient statistics for previously unseen candidates)
  Progress: ...+...+...+...+...500
            ...+...+...+...+
Warning: attempt to delete ZMERT.temp.stats.mergedKnown was unsuccessful!
Processed 9061 distinct candidates (about 9 per sentence):
newCandidatesAdded[it=1] = 9061 (about 9 per sentence)
newCandidatesAdded[it=2] = 0 (about 0 per sentence)

No new candidates added in this iteration; exiting Z-MERT.

---  Z-MERT iteration #2 ending @ Tue Oct 27 10:46:10 JST 2015  ---


----------------------------------------------------
Z-MERT run ended @ Tue Oct 27 10:46:10 JST 2015
----------------------------------------------------

FINAL lambda: {0.08229017261951611, 0.78330692119097, -0.24108207325578457} (BLEU: 0.7997143146950412)

(OP Lamda) : [0.08229017261951611,0.78330692119097,-0.24108207325578457]
Number of candidates => 608
tmpDirPrefix: ZMERT.
Processed the following args array:
  -r ref -rps 4 -p params.txt -m BLEU 4 closest -maxIt 15 -ipi 20 -cmd SDecoder_cmd.bat -decOut nbest.out -dcfg SDecoder_cfg.txt -N 10 -v 1 -seed 12341234 

----------------------------------------------------
Initializing...
----------------------------------------------------

Random number generator initialized using seed: 12341234

$$ decoderCommand: java SimpleDecoder SDecoder_cfg.txt nbest.out
Number of sentences: 608
Number of documents: 1
Optimizing BLEU
docSubsetInfo: {0, 1, 1, 1, 1, 0, 0}
Number of features: 3
Feature names: {"RD","Word Model","Headword Model"}

c    Default value	Optimizable?	Crit. val. range	Rand. val. range
1     0.1000		 Yes		 [-Infinity,Infinity]		 [-1.0,1.0]
2     0.2000		 Yes		 [-Infinity,Infinity]		 [-1.0,1.0]
3     -0.1000		 Yes		 [-Infinity,Infinity]		 [-1.0,1.0]

Weight vector normalization method: none.

----------------------------------------------------

----------------------------------------------------
Z-MERT run started @ Tue Oct 27 10:46:10 JST 2015
----------------------------------------------------

Initial lambda[]: {0.1, 0.2, -0.1}

--- Starting Z-MERT iteration #1 @ Tue Oct 27 10:46:10 JST 2015 ---
Decoding using initial weight vector {0.1, 0.2, -0.1}
Running decoder...
...finished decoding @ Tue Oct 27 10:46:10 JST 2015
Reading candidate translations from iterations 1-1
(and computing BLEU sufficient statistics for previously unseen candidates)
  Progress: Size: 3143
...+...+...+...+...500
            ...+
Warning: attempt to delete ZMERT.temp.stats.unknown was unsuccessful!
Warning: attempt to delete ZMERT.temp.stats.mergedKnown was unsuccessful!
Processed 3143 distinct candidates (about 5 per sentence):
newCandidatesAdded[it=1] = 3143 (about 5 per sentence)

+++ Optimization of lambda[j=1] starting @ Tue Oct 27 10:46:11 JST 2015 +++
Initial lambda[j=1]: {0.1, 0.2, -0.1}
(Initial BLEU[j=1]: 0.7821626576133575)

Final lambda[j=1]: {0.03614028860386524, -0.42277123174578896, -0.1}
(Final BLEU[j=1]: 0.7894391208260589)

+++ Optimization of lambda[j=2] starting @ Tue Oct 27 10:46:11 JST 2015 +++
Initial lambda[j=2]: {-0.017230818545013626, -0.6577977590753961, 0.46016061237234096}
(Initial BLEU[j=2]: 0.7586874915775716)

Final lambda[j=2]: {0.02029062761299608, -0.25753606284288494, -0.06315278985858824}
(Final BLEU[j=2]: 0.7896070867732485)

+++ Optimization of lambda[j=3] starting @ Tue Oct 27 10:46:11 JST 2015 +++
Initial lambda[j=3]: {-0.5203200954373215, 0.09518077619965482, -0.059473491599185246}
(Initial BLEU[j=3]: 0.783777486923842)

Final lambda[j=3]: {-0.004808918191418617, -0.5985554007406735, -0.059473491599185246}
(Final BLEU[j=3]: 0.7869611015697573)

+++ Optimization of lambda[j=4] starting @ Tue Oct 27 10:46:11 JST 2015 +++
Initial lambda[j=4]: {-0.6919952429797738, -0.8743327758402839, -0.6393613928095458}
(Initial BLEU[j=4]: 0.7795321314587885)

Final lambda[j=4]: {0.10794441649321274, -0.8743327758402839, -0.17275813697787396}
(Final BLEU[j=4]: 0.78907155028864)

+++ Optimization of lambda[j=5] starting @ Tue Oct 27 10:46:11 JST 2015 +++
Initial lambda[j=5]: {0.7737957524668755, 0.6493837878144797, -0.5778133794884044}
(Initial BLEU[j=5]: 0.7789679771006734)

Final lambda[j=5]: {0.7737957524668755, -8.822793672983476, -2.129359961545965}
(Final BLEU[j=5]: 0.7894391208260589)

+++ Optimization of lambda[j=6] starting @ Tue Oct 27 10:46:11 JST 2015 +++
Initial lambda[j=6]: {0.2815800420089276, 0.15636862697411513, 0.6539535776649275}
(Initial BLEU[j=6]: 0.7598095764738335)

Final lambda[j=6]: {0.21351014693687353, -1.7398764402921971, -0.33968857807853114}
(Final BLEU[j=6]: 0.78907155028864)

+++ Optimization of lambda[j=7] starting @ Tue Oct 27 10:46:11 JST 2015 +++
Initial lambda[j=7]: {0.32669861662639876, 0.009245077311689887, -0.9330111163449395}
(Initial BLEU[j=7]: 0.7798034777273324)

Final lambda[j=7]: {0.2996316942381058, -3.8030741760917874, -0.9330111163449395}
(Final BLEU[j=7]: 0.7896070867732485)

+++ Optimization of lambda[j=8] starting @ Tue Oct 27 10:46:11 JST 2015 +++
Initial lambda[j=8]: {0.6515944996339995, 0.08804197789590318, 0.9795005730080566}
(Initial BLEU[j=8]: 0.7594679140061515)

Final lambda[j=8]: {0.6515944996339995, -7.112534807460591, -1.7316719283792361}
(Final BLEU[j=8]: 0.7894391208260589)

+++ Optimization of lambda[j=9] starting @ Tue Oct 27 10:46:11 JST 2015 +++
Initial lambda[j=9]: {-0.004553671263154424, 0.8593774528720801, -0.01427276865927607}
(Initial BLEU[j=9]: 0.771646735724082)

Final lambda[j=9]: {0.0044941587938917785, -0.0570184425341697, -0.013984840733135351}
(Final BLEU[j=9]: 0.7896070867732485)

+++ Optimization of lambda[j=10] starting @ Tue Oct 27 10:46:11 JST 2015 +++
Initial lambda[j=10]: {0.5053771649119221, -0.5713556223455967, -0.8739358729264859}
(Initial BLEU[j=10]: 0.7811651442911866)

Final lambda[j=10]: {0.5053771649119221, -4.135427763861448, -0.8739358729264859}
(Final BLEU[j=10]: 0.78907155028864)

+++ Optimization of lambda[j=11] starting @ Tue Oct 27 10:46:11 JST 2015 +++
Initial lambda[j=11]: {0.7980226618452084, -0.399205792984231, -0.5477913765324938}
(Initial BLEU[j=11]: 0.7772228427990588)

Final lambda[j=11]: {0.7980226618452084, -8.605981116285653, -2.1004912696182423}
(Final BLEU[j=11]: 0.7894391208260589)

+++ Optimization of lambda[j=12] starting @ Tue Oct 27 10:46:11 JST 2015 +++
Initial lambda[j=12]: {0.594593012768021, -0.2974935383022126, 0.3275255626321376}
(Initial BLEU[j=12]: 0.7575144550478031)

Final lambda[j=12]: {0.6024015217412397, -7.254692065204585, -1.6853821919746377}
(Final BLEU[j=12]: 0.7894391208260589)

+++ Optimization of lambda[j=13] starting @ Tue Oct 27 10:46:11 JST 2015 +++
Initial lambda[j=13]: {-0.21052430917292875, 0.981831267676273, -0.8102868749874037}
(Initial BLEU[j=13]: 0.7789048999152285)

Final lambda[j=13]: {-0.06482709801764988, -8.05413212028372, -0.8102868749874037}
(Final BLEU[j=13]: 0.7869611015697573)

+++ Optimization of lambda[j=14] starting @ Tue Oct 27 10:46:11 JST 2015 +++
Initial lambda[j=14]: {0.03753776574773382, 0.00790321507749736, 0.03620028521108054}
(Initial BLEU[j=14]: 0.7580334345990271)

Final lambda[j=14]: {0.03942978540788345, -0.4551471237031588, -0.10855724505023898}
(Final BLEU[j=14]: 0.7894391208260589)

+++ Optimization of lambda[j=15] starting @ Tue Oct 27 10:46:11 JST 2015 +++
Initial lambda[j=15]: {0.009954244141451962, 0.02541025170060851, 0.593645578752771}
(Initial BLEU[j=15]: 0.7624120312018523)

Final lambda[j=15]: {0.009954244141451962, -0.1261800326299552, -0.030961705697594648}
(Final BLEU[j=15]: 0.7896070867732485)

+++ Optimization of lambda[j=16] starting @ Tue Oct 27 10:46:11 JST 2015 +++
Initial lambda[j=16]: {0.6576106932759427, 0.17534745529356877, -0.6893751690924723}
(Initial BLEU[j=16]: 0.7799716609206906)

Final lambda[j=16]: {0.24722204227993608, -2.9515562378989806, -0.6893751690924723}
(Final BLEU[j=16]: 0.7894391208260589)

+++ Optimization of lambda[j=17] starting @ Tue Oct 27 10:46:11 JST 2015 +++
Initial lambda[j=17]: {-0.871756060640207, -0.8495287747458757, -0.3964594524802063}
(Initial BLEU[j=17]: 0.7829654867149577)

Final lambda[j=17]: {0.10231506379882205, -0.8495287747458757, -0.17500460966461745}
(Final BLEU[j=17]: 0.78907155028864)

+++ Optimization of lambda[j=18] starting @ Tue Oct 27 10:46:11 JST 2015 +++
Initial lambda[j=18]: {-0.4629095033959656, -0.10291979788243277, -0.8706362780408492}
(Initial BLEU[j=18]: 0.7790481467994294)

Final lambda[j=18]: {0.25500032842722986, -3.2411663760680636, -0.7942320560662748}
(Final BLEU[j=18]: 0.7896070867732485)

+++ Optimization of lambda[j=19] starting @ Tue Oct 27 10:46:11 JST 2015 +++
Initial lambda[j=19]: {-0.8834296944416113, 0.3073471861931083, -0.08254985860243691}
(Initial BLEU[j=19]: 0.7827235610095149)

Final lambda[j=19]: {0.02600934083112389, -0.3298837115799338, -0.08092275548507938}
(Final BLEU[j=19]: 0.7896070867732485)

+++ Optimization of lambda[j=20] starting @ Tue Oct 27 10:46:11 JST 2015 +++
Initial lambda[j=20]: {-0.2916952155637593, -0.8022503514522665, -0.33852947919372234}
(Initial BLEU[j=20]: 0.7822768365586203)

Final lambda[j=20]: {0.10522600106926558, -1.3283412076675944, -0.3321460862774445}
(Final BLEU[j=20]: 0.789243817857092)

Best final lambda is lambda[j=2] (BLEU: 0.7896).

---  Z-MERT iteration #1 ending @ Tue Oct 27 10:46:11 JST 2015  ---

Next iteration will decode with lambda: {0.02029062761299608, -0.25753606284288494, -0.06315278985858824}

--- Starting Z-MERT iteration #2 @ Tue Oct 27 10:46:11 JST 2015 ---
Redecoding using weight vector {0.02029062761299608, -0.25753606284288494, -0.06315278985858824}
Running decoder...
...finished decoding @ Tue Oct 27 10:46:11 JST 2015
Reading candidate translations from iterations 1-2
(and computing BLEU sufficient statistics for previously unseen candidates)
  Progress: ...+...+...+...+...500
            ...+
Warning: attempt to delete ZMERT.temp.stats.mergedKnown was unsuccessful!
Processed 3143 distinct candidates (about 5 per sentence):
newCandidatesAdded[it=1] = 3143 (about 5 per sentence)
newCandidatesAdded[it=2] = 0 (about 0 per sentence)

No new candidates added in this iteration; exiting Z-MERT.

---  Z-MERT iteration #2 ending @ Tue Oct 27 10:46:12 JST 2015  ---


----------------------------------------------------
Z-MERT run ended @ Tue Oct 27 10:46:12 JST 2015
----------------------------------------------------

FINAL lambda: {0.02029062761299608, -0.25753606284288494, -0.06315278985858824} (BLEU: 0.7896070867732485)

(OP Lamda) : [0.02029062761299608,-0.25753606284288494,-0.06315278985858824]
Number of candidates => 417
tmpDirPrefix: ZMERT.
Processed the following args array:
  -r ref -rps 4 -p params.txt -m BLEU 4 closest -maxIt 15 -ipi 20 -cmd SDecoder_cmd.bat -decOut nbest.out -dcfg SDecoder_cfg.txt -N 10 -v 1 -seed 12341234 

----------------------------------------------------
Initializing...
----------------------------------------------------

Random number generator initialized using seed: 12341234

$$ decoderCommand: java SimpleDecoder SDecoder_cfg.txt nbest.out
Number of sentences: 417
Number of documents: 1
Optimizing BLEU
docSubsetInfo: {0, 1, 1, 1, 1, 0, 0}
Number of features: 3
Feature names: {"RD","Word Model","Headword Model"}

c    Default value	Optimizable?	Crit. val. range	Rand. val. range
1     0.1000		 Yes		 [-Infinity,Infinity]		 [-1.0,1.0]
2     0.2000		 Yes		 [-Infinity,Infinity]		 [-1.0,1.0]
3     -0.1000		 Yes		 [-Infinity,Infinity]		 [-1.0,1.0]

Weight vector normalization method: none.

----------------------------------------------------

----------------------------------------------------
Z-MERT run started @ Tue Oct 27 10:46:12 JST 2015
----------------------------------------------------

Initial lambda[]: {0.1, 0.2, -0.1}

--- Starting Z-MERT iteration #1 @ Tue Oct 27 10:46:12 JST 2015 ---
Decoding using initial weight vector {0.1, 0.2, -0.1}
Running decoder...
...finished decoding @ Tue Oct 27 10:46:13 JST 2015
Reading candidate translations from iterations 1-1
(and computing BLEU sufficient statistics for previously unseen candidates)
  Progress: Size: 3460
...+...+...+...+
Warning: attempt to delete ZMERT.temp.stats.unknown was unsuccessful!
Warning: attempt to delete ZMERT.temp.stats.mergedKnown was unsuccessful!
Processed 3460 distinct candidates (about 8 per sentence):
newCandidatesAdded[it=1] = 3460 (about 8 per sentence)

+++ Optimization of lambda[j=1] starting @ Tue Oct 27 10:46:13 JST 2015 +++
Initial lambda[j=1]: {0.1, 0.2, -0.1}
(Initial BLEU[j=1]: 0.781459833496604)

Final lambda[j=1]: {0.04134791080174885, -1.0662464026378018, -0.1}
(Final BLEU[j=1]: 0.7870605136279808)

+++ Optimization of lambda[j=2] starting @ Tue Oct 27 10:46:13 JST 2015 +++
Initial lambda[j=2]: {-0.017230818545013626, -0.6577977590753961, 0.46016061237234096}
(Initial BLEU[j=2]: 0.7618636929860854)

Final lambda[j=2]: {0.014974812699148328, -0.7193915364125699, -0.0657480888291131}
(Final BLEU[j=2]: 0.7868675311255638)

+++ Optimization of lambda[j=3] starting @ Tue Oct 27 10:46:13 JST 2015 +++
Initial lambda[j=3]: {-0.5203200954373215, 0.09518077619965482, -0.059473491599185246}
(Initial BLEU[j=3]: 0.7781352317468735)

Final lambda[j=3]: {0.02759750110087659, -0.6886426869128792, -0.059473491599185246}
(Final BLEU[j=3]: 0.7870605136279808)

+++ Optimization of lambda[j=4] starting @ Tue Oct 27 10:46:13 JST 2015 +++
Initial lambda[j=4]: {-0.6919952429797738, -0.8743327758402839, -0.6393613928095458}
(Initial BLEU[j=4]: 0.7815349274171126)

Final lambda[j=4]: {0.14623253381377638, -7.716367024452643, -0.6393613928095458}
(Final BLEU[j=4]: 0.7871723889497272)

+++ Optimization of lambda[j=5] starting @ Tue Oct 27 10:46:13 JST 2015 +++
Initial lambda[j=5]: {0.7737957524668755, 0.6493837878144797, -0.5778133794884044}
(Initial BLEU[j=5]: 0.7792764389724194)

Final lambda[j=5]: {0.28489782662029467, -6.994631425879597, -0.5778133794884044}
(Final BLEU[j=5]: 0.7870605136279808)

+++ Optimization of lambda[j=6] starting @ Tue Oct 27 10:46:13 JST 2015 +++
Initial lambda[j=6]: {0.2815800420089276, 0.15636862697411513, 0.6539535776649275}
(Initial BLEU[j=6]: 0.7672192143400035)

Final lambda[j=6]: {0.2815800420089276, -14.859915171622454, -1.2303521126716306}
(Final BLEU[j=6]: 0.7871723889497272)

+++ Optimization of lambda[j=7] starting @ Tue Oct 27 10:46:13 JST 2015 +++
Initial lambda[j=7]: {0.32669861662639876, 0.009245077311689887, -0.9330111163449395}
(Initial BLEU[j=7]: 0.7816745033798047)

Final lambda[j=7]: {0.44646329764751913, -11.048408927424788, -0.9330111163449395}
(Final BLEU[j=7]: 0.7870605136279808)

+++ Optimization of lambda[j=8] starting @ Tue Oct 27 10:46:13 JST 2015 +++
Initial lambda[j=8]: {0.6515944996339995, 0.08804197789590318, 0.9795005730080566}
(Initial BLEU[j=8]: 0.7676526962708923)

Final lambda[j=8]: {0.6515944996339995, -34.386545811594914, -2.8472458630514668}
(Final BLEU[j=8]: 0.7871723889497272)

+++ Optimization of lambda[j=9] starting @ Tue Oct 27 10:46:13 JST 2015 +++
Initial lambda[j=9]: {-0.004553671263154424, 0.8593774528720801, -0.01427276865927607}
(Initial BLEU[j=9]: 0.7716604778854411)

Final lambda[j=9]: {-7.058101308380104E-4, -0.1886940449729046, -0.01427276865927607}
(Final BLEU[j=9]: 0.788439940150387)

+++ Optimization of lambda[j=10] starting @ Tue Oct 27 10:46:13 JST 2015 +++
Initial lambda[j=10]: {0.5053771649119221, -0.5713556223455967, -0.8739358729264859}
(Initial BLEU[j=10]: 0.7814012020537117)

Final lambda[j=10]: {0.5053771649119221, -10.362346834167994, -0.8739358729264859}
(Final BLEU[j=10]: 0.7869080925220652)

+++ Optimization of lambda[j=11] starting @ Tue Oct 27 10:46:13 JST 2015 +++
Initial lambda[j=11]: {0.7980226618452084, -0.399205792984231, -0.5477913765324938}
(Initial BLEU[j=11]: 0.7791059530147695)

Final lambda[j=11]: {0.13564120158639914, -7.099916176000612, -0.5477913765324938}
(Final BLEU[j=11]: 0.7874974710048475)

+++ Optimization of lambda[j=12] starting @ Tue Oct 27 10:46:13 JST 2015 +++
Initial lambda[j=12]: {0.594593012768021, -0.2974935383022126, 0.3275255626321376}
(Initial BLEU[j=12]: 0.7662413561416169)

Final lambda[j=12]: {0.594593012768021, -31.378048245332494, -2.598349828640692}
(Final BLEU[j=12]: 0.7871723889497272)

+++ Optimization of lambda[j=13] starting @ Tue Oct 27 10:46:13 JST 2015 +++
Initial lambda[j=13]: {-0.21052430917292875, 0.981831267676273, -0.8102868749874037}
(Initial BLEU[j=13]: 0.7757606154703808)

Final lambda[j=13]: {0.20361287603402428, -10.58216980712778, -0.8102868749874037}
(Final BLEU[j=13]: 0.7874974710048475)

+++ Optimization of lambda[j=14] starting @ Tue Oct 27 10:46:13 JST 2015 +++
Initial lambda[j=14]: {0.03753776574773382, 0.00790321507749736, 0.03620028521108054}
(Initial BLEU[j=14]: 0.7689780726455108)

Final lambda[j=14]: {0.03753776574773382, -1.8029126176607724, -0.16437506388173775}
(Final BLEU[j=14]: 0.7868675311255638)

+++ Optimization of lambda[j=15] starting @ Tue Oct 27 10:46:13 JST 2015 +++
Initial lambda[j=15]: {0.009954244141451962, 0.02541025170060851, 0.593645578752771}
(Initial BLEU[j=15]: 0.760084486819461)

Final lambda[j=15]: {0.009954244141451962, -0.5346618626091739, -0.040726528367599164}
(Final BLEU[j=15]: 0.7875385260565213)

+++ Optimization of lambda[j=16] starting @ Tue Oct 27 10:46:14 JST 2015 +++
Initial lambda[j=16]: {0.6576106932759427, 0.17534745529356877, -0.6893751690924723}
(Initial BLEU[j=16]: 0.78191034012654)

Final lambda[j=16]: {0.15698922825497008, -7.5418728454118025, -0.6893751690924723}
(Final BLEU[j=16]: 0.7868675311255638)

+++ Optimization of lambda[j=17] starting @ Tue Oct 27 10:46:14 JST 2015 +++
Initial lambda[j=17]: {-0.871756060640207, -0.8495287747458757, -0.3964594524802063}
(Initial BLEU[j=17]: 0.781668082041968)

Final lambda[j=17]: {0.10428258084870608, -5.303067626561496, -0.3964594524802063}
(Final BLEU[j=17]: 0.7870199654840235)

+++ Optimization of lambda[j=18] starting @ Tue Oct 27 10:46:14 JST 2015 +++
Initial lambda[j=18]: {-0.4629095033959656, -0.10291979788243277, -0.8706362780408492}
(Initial BLEU[j=18]: 0.7772970738501721)

Final lambda[j=18]: {0.22126578354613607, -11.068975638275273, -0.8706362780408492}
(Final BLEU[j=18]: 0.7871926699772406)

+++ Optimization of lambda[j=19] starting @ Tue Oct 27 10:46:14 JST 2015 +++
Initial lambda[j=19]: {-0.8834296944416113, 0.3073471861931083, -0.08254985860243691}
(Initial BLEU[j=19]: 0.7781352317468735)

Final lambda[j=19]: {0.020349900665698105, -1.0674871579890992, -0.08254985860243691}
(Final BLEU[j=19]: 0.7874974710048475)

+++ Optimization of lambda[j=20] starting @ Tue Oct 27 10:46:14 JST 2015 +++
Initial lambda[j=20]: {-0.2916952155637593, -0.8022503514522665, -0.33852947919372234}
(Initial BLEU[j=20]: 0.780962414446485)

Final lambda[j=20]: {0.08380348560010381, -4.3870998761635835, -0.33852947919372234}
(Final BLEU[j=20]: 0.7874974710048475)

Best final lambda is lambda[j=9] (BLEU: 0.7884).

---  Z-MERT iteration #1 ending @ Tue Oct 27 10:46:14 JST 2015  ---

Next iteration will decode with lambda: {-7.058101308380104E-4, -0.1886940449729046, -0.01427276865927607}

--- Starting Z-MERT iteration #2 @ Tue Oct 27 10:46:14 JST 2015 ---
Redecoding using weight vector {-7.058101308380104E-4, -0.1886940449729046, -0.01427276865927607}
Running decoder...
...finished decoding @ Tue Oct 27 10:46:14 JST 2015
Reading candidate translations from iterations 1-2
(and computing BLEU sufficient statistics for previously unseen candidates)
  Progress: ...+...+...+...+
Warning: attempt to delete ZMERT.temp.stats.mergedKnown was unsuccessful!
Processed 3460 distinct candidates (about 8 per sentence):
newCandidatesAdded[it=1] = 3460 (about 8 per sentence)
newCandidatesAdded[it=2] = 0 (about 0 per sentence)

No new candidates added in this iteration; exiting Z-MERT.

---  Z-MERT iteration #2 ending @ Tue Oct 27 10:46:15 JST 2015  ---


----------------------------------------------------
Z-MERT run ended @ Tue Oct 27 10:46:15 JST 2015
----------------------------------------------------

FINAL lambda: {-7.058101308380104E-4, -0.1886940449729046, -0.01427276865927607} (BLEU: 0.788439940150387)

(OP Lamda) : [-7.058101308380104E-4,-0.1886940449729046,-0.01427276865927607]
Number of candidates => 290
tmpDirPrefix: ZMERT.
Processed the following args array:
  -r ref -rps 4 -p params.txt -m BLEU 4 closest -maxIt 15 -ipi 20 -cmd SDecoder_cmd.bat -decOut nbest.out -dcfg SDecoder_cfg.txt -N 10 -v 1 -seed 12341234 

----------------------------------------------------
Initializing...
----------------------------------------------------

Random number generator initialized using seed: 12341234

$$ decoderCommand: java SimpleDecoder SDecoder_cfg.txt nbest.out
Number of sentences: 290
Number of documents: 1
Optimizing BLEU
docSubsetInfo: {0, 1, 1, 1, 1, 0, 0}
Number of features: 3
Feature names: {"RD","Word Model","Headword Model"}

c    Default value	Optimizable?	Crit. val. range	Rand. val. range
1     0.1000		 Yes		 [-Infinity,Infinity]		 [-1.0,1.0]
2     0.2000		 Yes		 [-Infinity,Infinity]		 [-1.0,1.0]
3     -0.1000		 Yes		 [-Infinity,Infinity]		 [-1.0,1.0]

Weight vector normalization method: none.

----------------------------------------------------

----------------------------------------------------
Z-MERT run started @ Tue Oct 27 10:46:15 JST 2015
----------------------------------------------------

Initial lambda[]: {0.1, 0.2, -0.1}

--- Starting Z-MERT iteration #1 @ Tue Oct 27 10:46:15 JST 2015 ---
Decoding using initial weight vector {0.1, 0.2, -0.1}
Running decoder...
...finished decoding @ Tue Oct 27 10:46:16 JST 2015
Reading candidate translations from iterations 1-1
(and computing BLEU sufficient statistics for previously unseen candidates)
  Progress: Size: 7763
...+...+...
Warning: attempt to delete ZMERT.temp.stats.unknown was unsuccessful!
Warning: attempt to delete ZMERT.temp.stats.mergedKnown was unsuccessful!
Processed 7763 distinct candidates (about 26 per sentence):
newCandidatesAdded[it=1] = 7763 (about 26 per sentence)

+++ Optimization of lambda[j=1] starting @ Tue Oct 27 10:46:17 JST 2015 +++
Initial lambda[j=1]: {0.1, 0.2, -0.1}
(Initial BLEU[j=1]: 0.7819576232915575)

Final lambda[j=1]: {0.1, 4.042882164995636, -0.6893144105474058}
(Final BLEU[j=1]: 0.7845402520547092)

+++ Optimization of lambda[j=2] starting @ Tue Oct 27 10:46:17 JST 2015 +++
Initial lambda[j=2]: {-0.017230818545013626, -0.6577977590753961, 0.46016061237234096}
(Initial BLEU[j=2]: 0.7736949313445843)

Final lambda[j=2]: {29.111582942990637, 0.08576024688617657, 0.46016061237234096}
(Final BLEU[j=2]: 0.7837571945475339)

+++ Optimization of lambda[j=3] starting @ Tue Oct 27 10:46:17 JST 2015 +++
Initial lambda[j=3]: {-0.5203200954373215, 0.09518077619965482, -0.059473491599185246}
(Initial BLEU[j=3]: 0.7762271843850813)

Final lambda[j=3]: {0.008525573566853694, 0.3759053726037934, -0.059473491599185246}
(Final BLEU[j=3]: 0.7845402520547092)

+++ Optimization of lambda[j=4] starting @ Tue Oct 27 10:46:17 JST 2015 +++
Initial lambda[j=4]: {-0.6919952429797738, -0.8743327758402839, -0.6393613928095458}
(Initial BLEU[j=4]: 0.7777731452898836)

Final lambda[j=4]: {0.09165898515734403, 4.048159921484489, -0.6393613928095458}
(Final BLEU[j=4]: 0.7845402520547092)

+++ Optimization of lambda[j=5] starting @ Tue Oct 27 10:46:17 JST 2015 +++
Initial lambda[j=5]: {0.7737957524668755, 0.6493837878144797, -0.5778133794884044}
(Initial BLEU[j=5]: 0.7807533723299229)

Final lambda[j=5]: {0.7737957524668755, 37.63788709859227, -5.6893669881213125}
(Final BLEU[j=5]: 0.7845402520547092)

+++ Optimization of lambda[j=6] starting @ Tue Oct 27 10:46:17 JST 2015 +++
Initial lambda[j=6]: {0.2815800420089276, 0.15636862697411513, 0.6539535776649275}
(Initial BLEU[j=6]: 0.7804425030480088)

Final lambda[j=6]: {41.31678033703301, 0.15636862697411513, 0.6539535776649275}
(Final BLEU[j=6]: 0.7837571945475339)

+++ Optimization of lambda[j=7] starting @ Tue Oct 27 10:46:17 JST 2015 +++
Initial lambda[j=7]: {0.32669861662639876, 0.009245077311689887, -0.9330111163449395}
(Initial BLEU[j=7]: 0.7824785348888919)

Final lambda[j=7]: {0.32669861662639876, 19.52727639291622, -0.5687262146950123}
(Final BLEU[j=7]: 0.7847943369534228)

+++ Optimization of lambda[j=8] starting @ Tue Oct 27 10:46:17 JST 2015 +++
Initial lambda[j=8]: {0.6515944996339995, 0.08804197789590318, 0.9795005730080566}
(Initial BLEU[j=8]: 0.7807074330277335)

Final lambda[j=8]: {14.69605743442257, 0.08804197789590318, 0.23341834353332247}
(Final BLEU[j=8]: 0.7837571945475339)

+++ Optimization of lambda[j=9] starting @ Tue Oct 27 10:46:17 JST 2015 +++
Initial lambda[j=9]: {-0.004553671263154424, 0.8593774528720801, -0.01427276865927607}
(Initial BLEU[j=9]: 0.7781924800348404)

Final lambda[j=9]: {0.010667833667804263, 0.7361316638002987, -0.022109168640897684}
(Final BLEU[j=9]: 0.7848363911473392)

+++ Optimization of lambda[j=10] starting @ Tue Oct 27 10:46:18 JST 2015 +++
Initial lambda[j=10]: {0.5053771649119221, -0.5713556223455967, -0.8739358729264859}
(Initial BLEU[j=10]: 0.7819808713060743)

Final lambda[j=10]: {0.5053771649119221, 29.96047698002826, -0.8739358729264859}
(Final BLEU[j=10]: 0.7847943369534228)

+++ Optimization of lambda[j=11] starting @ Tue Oct 27 10:46:18 JST 2015 +++
Initial lambda[j=11]: {0.7980226618452084, -0.399205792984231, -0.5477913765324938}
(Initial BLEU[j=11]: 0.7805200707488035)

Final lambda[j=11]: {0.0756966992313566, 3.4739755256990246, -0.5477913765324938}
(Final BLEU[j=11]: 0.7845402520547092)

+++ Optimization of lambda[j=12] starting @ Tue Oct 27 10:46:18 JST 2015 +++
Initial lambda[j=12]: {0.594593012768021, -0.2974935383022126, 0.3275255626321376}
(Initial BLEU[j=12]: 0.7803626172274565)

Final lambda[j=12]: {0.594593012768021, 26.948188794936886, -4.253709013035938}
(Final BLEU[j=12]: 0.7845402520547092)

+++ Optimization of lambda[j=13] starting @ Tue Oct 27 10:46:18 JST 2015 +++
Initial lambda[j=13]: {-0.21052430917292875, 0.981831267676273, -0.8102868749874037}
(Initial BLEU[j=13]: 0.777171771177876)

Final lambda[j=13]: {0.11615465945004788, 5.121463939212749, -0.8102868749874037}
(Final BLEU[j=13]: 0.7845402520547092)

+++ Optimization of lambda[j=14] starting @ Tue Oct 27 10:46:18 JST 2015 +++
Initial lambda[j=14]: {0.03753776574773382, 0.00790321507749736, 0.03620028521108054}
(Initial BLEU[j=14]: 0.7809029724223299)

Final lambda[j=14]: {2.288332072827305, 0.00790321507749736, 0.03620028521108054}
(Final BLEU[j=14]: 0.7837571945475339)

+++ Optimization of lambda[j=15] starting @ Tue Oct 27 10:46:18 JST 2015 +++
Initial lambda[j=15]: {0.009954244141451962, 0.02541025170060851, 0.593645578752771}
(Initial BLEU[j=15]: 0.7750244210019647)

Final lambda[j=15]: {8.759800121094901, 0.02541025170060851, 0.1384543976610042}
(Final BLEU[j=15]: 0.7837571945475339)

+++ Optimization of lambda[j=16] starting @ Tue Oct 27 10:46:18 JST 2015 +++
Initial lambda[j=16]: {0.6576106932759427, 0.17534745529356877, -0.6893751690924723}
(Initial BLEU[j=16]: 0.7814974095701624)

Final lambda[j=16]: {0.4764012133031911, 24.006865132159653, -0.6893751690924723}
(Final BLEU[j=16]: 0.7847943369534228)

+++ Optimization of lambda[j=17] starting @ Tue Oct 27 10:46:18 JST 2015 +++
Initial lambda[j=17]: {-0.871756060640207, -0.8495287747458757, -0.3964594524802063}
(Initial BLEU[j=17]: 0.778038743122716)

Final lambda[j=17]: {0.02861351133895934, 1.9689322444619317, -0.05953463132776107}
(Final BLEU[j=17]: 0.7848363911473392)

+++ Optimization of lambda[j=18] starting @ Tue Oct 27 10:46:18 JST 2015 +++
Initial lambda[j=18]: {-0.4629095033959656, -0.10291979788243277, -0.8706362780408492}
(Initial BLEU[j=18]: 0.7778150477841923)

Final lambda[j=18]: {0.12180353462537835, 5.515246032175645, -0.8706362780408492}
(Final BLEU[j=18]: 0.7845402520547092)

+++ Optimization of lambda[j=19] starting @ Tue Oct 27 10:46:18 JST 2015 +++
Initial lambda[j=19]: {-0.8834296944416113, 0.3073471861931083, -0.08254985860243691}
(Initial BLEU[j=19]: 0.7769934860679094)

Final lambda[j=19]: {0.006665380571668919, 0.3073471861931083, -0.047952155443115936}
(Final BLEU[j=19]: 0.7845402520547092)

+++ Optimization of lambda[j=20] starting @ Tue Oct 27 10:46:18 JST 2015 +++
Initial lambda[j=20]: {-0.2916952155637593, -0.8022503514522665, -0.33852947919372234}
(Initial BLEU[j=20]: 0.7782343870588775)

Final lambda[j=20]: {0.024453429217661735, 1.6826375955255752, -0.05088040056390061}
(Final BLEU[j=20]: 0.7848363911473392)

Best final lambda is lambda[j=9] (BLEU: 0.7848).

---  Z-MERT iteration #1 ending @ Tue Oct 27 10:46:18 JST 2015  ---

Next iteration will decode with lambda: {0.010667833667804263, 0.7361316638002987, -0.022109168640897684}

--- Starting Z-MERT iteration #2 @ Tue Oct 27 10:46:18 JST 2015 ---
Redecoding using weight vector {0.010667833667804263, 0.7361316638002987, -0.022109168640897684}
Running decoder...
...finished decoding @ Tue Oct 27 10:46:19 JST 2015
Reading candidate translations from iterations 1-2
(and computing BLEU sufficient statistics for previously unseen candidates)
  Progress: ...+...+...
Warning: attempt to delete ZMERT.temp.stats.mergedKnown was unsuccessful!
Processed 7763 distinct candidates (about 26 per sentence):
newCandidatesAdded[it=1] = 7763 (about 26 per sentence)
newCandidatesAdded[it=2] = 0 (about 0 per sentence)

No new candidates added in this iteration; exiting Z-MERT.

---  Z-MERT iteration #2 ending @ Tue Oct 27 10:46:20 JST 2015  ---


----------------------------------------------------
Z-MERT run ended @ Tue Oct 27 10:46:20 JST 2015
----------------------------------------------------

FINAL lambda: {0.010667833667804263, 0.7361316638002987, -0.022109168640897684} (BLEU: 0.7848363911473392)

(OP Lamda) : [0.010667833667804263,0.7361316638002987,-0.022109168640897684]
Number of candidates => 200
tmpDirPrefix: ZMERT.
Processed the following args array:
  -r ref -rps 4 -p params.txt -m BLEU 4 closest -maxIt 15 -ipi 20 -cmd SDecoder_cmd.bat -decOut nbest.out -dcfg SDecoder_cfg.txt -N 10 -v 1 -seed 12341234 

----------------------------------------------------
Initializing...
----------------------------------------------------

Random number generator initialized using seed: 12341234

$$ decoderCommand: java SimpleDecoder SDecoder_cfg.txt nbest.out
Number of sentences: 200
Number of documents: 1
Optimizing BLEU
docSubsetInfo: {0, 1, 1, 1, 1, 0, 0}
Number of features: 3
Feature names: {"RD","Word Model","Headword Model"}

c    Default value	Optimizable?	Crit. val. range	Rand. val. range
1     0.1000		 Yes		 [-Infinity,Infinity]		 [-1.0,1.0]
2     0.2000		 Yes		 [-Infinity,Infinity]		 [-1.0,1.0]
3     -0.1000		 Yes		 [-Infinity,Infinity]		 [-1.0,1.0]

Weight vector normalization method: none.

----------------------------------------------------

----------------------------------------------------
Z-MERT run started @ Tue Oct 27 10:46:20 JST 2015
----------------------------------------------------

Initial lambda[]: {0.1, 0.2, -0.1}

--- Starting Z-MERT iteration #1 @ Tue Oct 27 10:46:20 JST 2015 ---
Decoding using initial weight vector {0.1, 0.2, -0.1}
Running decoder...
...finished decoding @ Tue Oct 27 10:46:20 JST 2015
Reading candidate translations from iterations 1-1
(and computing BLEU sufficient statistics for previously unseen candidates)
  Progress: Size: 2425
...+...+
Warning: attempt to delete ZMERT.temp.stats.unknown was unsuccessful!
Warning: attempt to delete ZMERT.temp.stats.mergedKnown was unsuccessful!
Processed 2425 distinct candidates (about 12 per sentence):
newCandidatesAdded[it=1] = 2425 (about 12 per sentence)

+++ Optimization of lambda[j=1] starting @ Tue Oct 27 10:46:21 JST 2015 +++
Initial lambda[j=1]: {0.1, 0.2, -0.1}
(Initial BLEU[j=1]: 0.7969471687773688)

Final lambda[j=1]: {0.1, -3111.427844477889, 0.007778082100762592}
(Final BLEU[j=1]: 0.8038817183020814)

+++ Optimization of lambda[j=2] starting @ Tue Oct 27 10:46:21 JST 2015 +++
Initial lambda[j=2]: {-0.017230818545013626, -0.6577977590753961, 0.46016061237234096}
(Initial BLEU[j=2]: 0.7877635517658133)

Final lambda[j=2]: {7.227994881862584, -223017.73581937034, 0.46016061237234096}
(Final BLEU[j=2]: 0.8038817183020814)

+++ Optimization of lambda[j=3] starting @ Tue Oct 27 10:46:21 JST 2015 +++
Initial lambda[j=3]: {-0.5203200954373215, 0.09518077619965482, -0.059473491599185246}
(Initial BLEU[j=3]: 0.7951367590856653)

Final lambda[j=3]: {-0.0025134081849562733, -0.8718704772700298, -0.059473491599185246}
(Final BLEU[j=3]: 0.8017463247763648)

+++ Optimization of lambda[j=4] starting @ Tue Oct 27 10:46:21 JST 2015 +++
Initial lambda[j=4]: {-0.6919952429797738, -0.8743327758402839, -0.6393613928095458}
(Initial BLEU[j=4]: 0.7946771276153269)

Final lambda[j=4]: {0.5538887638929867, -17710.371164892225, 0.04089487375336241}
(Final BLEU[j=4]: 0.8038817183020814)

+++ Optimization of lambda[j=5] starting @ Tue Oct 27 10:46:21 JST 2015 +++
Initial lambda[j=5]: {0.7737957524668755, 0.6493837878144797, -0.5778133794884044}
(Initial BLEU[j=5]: 0.7970736278444942)

Final lambda[j=5]: {0.7737957524668755, -24033.86648925179, 0.06038028812690495}
(Final BLEU[j=5]: 0.8038817183020814)

+++ Optimization of lambda[j=6] starting @ Tue Oct 27 10:46:21 JST 2015 +++
Initial lambda[j=6]: {0.2815800420089276, 0.15636862697411513, 0.6539535776649275}
(Initial BLEU[j=6]: 0.7933887277612652)

Final lambda[j=6]: {0.2815800420089276, -8559.572332899897, 0.02282673452075388}
(Final BLEU[j=6]: 0.8038817183020814)

+++ Optimization of lambda[j=7] starting @ Tue Oct 27 10:46:21 JST 2015 +++
Initial lambda[j=7]: {0.32669861662639876, 0.009245077311689887, -0.9330111163449395}
(Initial BLEU[j=7]: 0.7987703006648254)

Final lambda[j=7]: {0.32669861662639876, -10295.639109418642, 0.0248112663106963}
(Final BLEU[j=7]: 0.8038817183020814)

+++ Optimization of lambda[j=8] starting @ Tue Oct 27 10:46:21 JST 2015 +++
Initial lambda[j=8]: {0.6515944996339995, 0.08804197789590318, 0.9795005730080566}
(Initial BLEU[j=8]: 0.7942884748483419)

Final lambda[j=8]: {0.6515944996339995, -19151.806866780687, 1.9080206053022832}
(Final BLEU[j=8]: 0.8033558455177046)

+++ Optimization of lambda[j=9] starting @ Tue Oct 27 10:46:21 JST 2015 +++
Initial lambda[j=9]: {-0.004553671263154424, 0.8593774528720801, -0.01427276865927607}
(Initial BLEU[j=9]: 0.7974528831517499)

Final lambda[j=9]: {-9.960211894492782E-4, -0.33860525614157627, -0.024517218940201528}
(Final BLEU[j=9]: 0.8017463247763648)

+++ Optimization of lambda[j=10] starting @ Tue Oct 27 10:46:21 JST 2015 +++
Initial lambda[j=10]: {0.5053771649119221, -0.5713556223455967, -0.8739358729264859}
(Initial BLEU[j=10]: 0.7989460029387035)

Final lambda[j=10]: {0.5053771649119221, -15803.862352593223, 0.038944160051358596}
(Final BLEU[j=10]: 0.8038817183020814)

+++ Optimization of lambda[j=11] starting @ Tue Oct 27 10:46:21 JST 2015 +++
Initial lambda[j=11]: {0.7980226618452084, -0.399205792984231, -0.5477913765324938}
(Initial BLEU[j=11]: 0.7982431112187403)

Final lambda[j=11]: {0.7980226618452084, -24775.979812430458, 0.06231832716635248}
(Final BLEU[j=11]: 0.8038817183020814)

+++ Optimization of lambda[j=12] starting @ Tue Oct 27 10:46:21 JST 2015 +++
Initial lambda[j=12]: {0.594593012768021, -0.2974935383022126, 0.3275255626321376}
(Initial BLEU[j=12]: 0.7974512212167143)

Final lambda[j=12]: {0.594593012768021, -18686.260053434606, 0.045394598360610626}
(Final BLEU[j=12]: 0.8038817183020814)

+++ Optimization of lambda[j=13] starting @ Tue Oct 27 10:46:21 JST 2015 +++
Initial lambda[j=13]: {-0.21052430917292875, 0.981831267676273, -0.8102868749874037}
(Initial BLEU[j=13]: 0.7968759163998325)

Final lambda[j=13]: {-0.06550519858638351, -22.080391544361543, -1.4736574777798392}
(Final BLEU[j=13]: 0.8017463247763648)

+++ Optimization of lambda[j=14] starting @ Tue Oct 27 10:46:21 JST 2015 +++
Initial lambda[j=14]: {0.03753776574773382, 0.00790321507749736, 0.03620028521108054}
(Initial BLEU[j=14]: 0.7956852829261767)

Final lambda[j=14]: {0.03753776574773382, -1195.7728099275184, 0.0027920706114867304}
(Final BLEU[j=14]: 0.8038817183020814)

+++ Optimization of lambda[j=15] starting @ Tue Oct 27 10:46:21 JST 2015 +++
Initial lambda[j=15]: {0.009954244141451962, 0.02541025170060851, 0.593645578752771}
(Initial BLEU[j=15]: 0.7861544637515763)

Final lambda[j=15]: {4.415083091878278, -136570.03548903792, 0.593645578752771}
(Final BLEU[j=15]: 0.8038817183020814)

+++ Optimization of lambda[j=16] starting @ Tue Oct 27 10:46:21 JST 2015 +++
Initial lambda[j=16]: {0.6576106932759427, 0.17534745529356877, -0.6893751690924723}
(Initial BLEU[j=16]: 0.7978641041949476)

Final lambda[j=16]: {0.6576106932759427, -20467.926784446605, 0.05111808574060136}
(Final BLEU[j=16]: 0.8038817183020814)

+++ Optimization of lambda[j=17] starting @ Tue Oct 27 10:46:21 JST 2015 +++
Initial lambda[j=17]: {-0.871756060640207, -0.8495287747458757, -0.3964594524802063}
(Initial BLEU[j=17]: 0.7944820355491472)

Final lambda[j=17]: {0.152320156332121, -4845.857908659598, 0.011358673507896534}
(Final BLEU[j=17]: 0.8038817183020814)

+++ Optimization of lambda[j=18] starting @ Tue Oct 27 10:46:21 JST 2015 +++
Initial lambda[j=18]: {-0.4629095033959656, -0.10291979788243277, -0.8706362780408492}
(Initial BLEU[j=18]: 0.7947378447549641)

Final lambda[j=18]: {19.000207348460734, -585979.596763178, 1.5017091774930917}
(Final BLEU[j=18]: 0.8038817183020814)

+++ Optimization of lambda[j=19] starting @ Tue Oct 27 10:46:21 JST 2015 +++
Initial lambda[j=19]: {-0.8834296944416113, 0.3073471861931083, -0.08254985860243691}
(Initial BLEU[j=19]: 0.7951367590856653)

Final lambda[j=19]: {-0.006073419774290739, -2.0647704064349246, -0.14948946180619277}
(Final BLEU[j=19]: 0.8017463247763648)

+++ Optimization of lambda[j=20] starting @ Tue Oct 27 10:46:21 JST 2015 +++
Initial lambda[j=20]: {-0.2916952155637593, -0.8022503514522665, -0.33852947919372234}
(Initial BLEU[j=20]: 0.7949026052028627)

Final lambda[j=20]: {0.12942390232021425, -4101.4850673299725, 0.009724524948288274}
(Final BLEU[j=20]: 0.8038817183020814)

Best final lambda is lambda[j=1] (BLEU: 0.8039).

---  Z-MERT iteration #1 ending @ Tue Oct 27 10:46:21 JST 2015  ---

Next iteration will decode with lambda: {0.1, -3111.427844477889, 0.007778082100762592}

--- Starting Z-MERT iteration #2 @ Tue Oct 27 10:46:21 JST 2015 ---
Redecoding using weight vector {0.1, -3111.427844477889, 0.007778082100762592}
Running decoder...
...finished decoding @ Tue Oct 27 10:46:21 JST 2015
Reading candidate translations from iterations 1-2
(and computing BLEU sufficient statistics for previously unseen candidates)
  Progress: ...+...+
Warning: attempt to delete ZMERT.temp.stats.mergedKnown was unsuccessful!
Processed 2425 distinct candidates (about 12 per sentence):
newCandidatesAdded[it=1] = 2425 (about 12 per sentence)
newCandidatesAdded[it=2] = 0 (about 0 per sentence)

No new candidates added in this iteration; exiting Z-MERT.

---  Z-MERT iteration #2 ending @ Tue Oct 27 10:46:22 JST 2015  ---


----------------------------------------------------
Z-MERT run ended @ Tue Oct 27 10:46:22 JST 2015
----------------------------------------------------

FINAL lambda: {0.1, -3111.427844477889, 0.007778082100762592} (BLEU: 0.8038817183020814)

(OP Lamda) : [0.1,-3111.427844477889,0.007778082100762592]
Number of candidates => 118
tmpDirPrefix: ZMERT.
Processed the following args array:
  -r ref -rps 4 -p params.txt -m BLEU 4 closest -maxIt 15 -ipi 20 -cmd SDecoder_cmd.bat -decOut nbest.out -dcfg SDecoder_cfg.txt -N 10 -v 1 -seed 12341234 

----------------------------------------------------
Initializing...
----------------------------------------------------

Random number generator initialized using seed: 12341234

$$ decoderCommand: java SimpleDecoder SDecoder_cfg.txt nbest.out
Number of sentences: 118
Number of documents: 1
Optimizing BLEU
docSubsetInfo: {0, 1, 1, 1, 1, 0, 0}
Number of features: 3
Feature names: {"RD","Word Model","Headword Model"}

c    Default value	Optimizable?	Crit. val. range	Rand. val. range
1     0.1000		 Yes		 [-Infinity,Infinity]		 [-1.0,1.0]
2     0.2000		 Yes		 [-Infinity,Infinity]		 [-1.0,1.0]
3     -0.1000		 Yes		 [-Infinity,Infinity]		 [-1.0,1.0]

Weight vector normalization method: none.

----------------------------------------------------

----------------------------------------------------
Z-MERT run started @ Tue Oct 27 10:46:22 JST 2015
----------------------------------------------------

Initial lambda[]: {0.1, 0.2, -0.1}

--- Starting Z-MERT iteration #1 @ Tue Oct 27 10:46:22 JST 2015 ---
Decoding using initial weight vector {0.1, 0.2, -0.1}
Running decoder...
...finished decoding @ Tue Oct 27 10:46:22 JST 2015
Reading candidate translations from iterations 1-1
(and computing BLEU sufficient statistics for previously unseen candidates)
  Progress: Size: 2526
...+
Warning: attempt to delete ZMERT.temp.stats.unknown was unsuccessful!
Warning: attempt to delete ZMERT.temp.stats.mergedKnown was unsuccessful!
Processed 2526 distinct candidates (about 21 per sentence):
newCandidatesAdded[it=1] = 2526 (about 21 per sentence)

+++ Optimization of lambda[j=1] starting @ Tue Oct 27 10:46:23 JST 2015 +++
Initial lambda[j=1]: {0.1, 0.2, -0.1}
(Initial BLEU[j=1]: 0.7970723622717774)

Final lambda[j=1]: {0.04802334517102416, -972.0823886461662, -0.1}
(Final BLEU[j=1]: 0.803046104333626)

+++ Optimization of lambda[j=2] starting @ Tue Oct 27 10:46:23 JST 2015 +++
Initial lambda[j=2]: {-0.017230818545013626, -0.6577977590753961, 0.46016061237234096}
(Initial BLEU[j=2]: 0.791274059269817)

Final lambda[j=2]: {-0.017230818545013626, -0.6577977590753961, -0.11530464493618953}
(Final BLEU[j=2]: 0.8013748838671926)

+++ Optimization of lambda[j=3] starting @ Tue Oct 27 10:46:23 JST 2015 +++
Initial lambda[j=3]: {-0.5203200954373215, 0.09518077619965482, -0.059473491599185246}
(Initial BLEU[j=3]: 0.798770529931865)

Final lambda[j=3]: {12.026500560317828, -237806.62466987857, -26.984959141680278}
(Final BLEU[j=3]: 0.803046104333626)

+++ Optimization of lambda[j=4] starting @ Tue Oct 27 10:46:23 JST 2015 +++
Initial lambda[j=4]: {-0.6919952429797738, -0.8743327758402839, -0.6393613928095458}
(Initial BLEU[j=4]: 0.798949459955829)

Final lambda[j=4]: {-0.1183915971434157, -2.367676437490615, -0.6393613928095458}
(Final BLEU[j=4]: 0.8013748838671926)

+++ Optimization of lambda[j=5] starting @ Tue Oct 27 10:46:23 JST 2015 +++
Initial lambda[j=5]: {0.7737957524668755, 0.6493837878144797, -0.5778133794884044}
(Initial BLEU[j=5]: 0.7980263792671133)

Final lambda[j=5]: {0.35572286027362704, -7176.291785946325, -0.5778133794884044}
(Final BLEU[j=5]: 0.803046104333626)

+++ Optimization of lambda[j=6] starting @ Tue Oct 27 10:46:23 JST 2015 +++
Initial lambda[j=6]: {0.2815800420089276, 0.15636862697411513, 0.6539535776649275}
(Initial BLEU[j=6]: 0.7917493449303427)

Final lambda[j=6]: {-0.11106255019558353, -440306.3414227528, 0.6539535776649275}
(Final BLEU[j=6]: 0.8004221383588883)

+++ Optimization of lambda[j=7] starting @ Tue Oct 27 10:46:23 JST 2015 +++
Initial lambda[j=7]: {0.32669861662639876, 0.009245077311689887, -0.9330111163449395}
(Initial BLEU[j=7]: 0.7970468827927991)

Final lambda[j=7]: {0.32669861662639876, -6681.813644063592, -0.9330111163449395}
(Final BLEU[j=7]: 0.803046104333626)

+++ Optimization of lambda[j=8] starting @ Tue Oct 27 10:46:23 JST 2015 +++
Initial lambda[j=8]: {0.6515944996339995, 0.08804197789590318, 0.9795005730080566}
(Initial BLEU[j=8]: 0.7930018966870578)

Final lambda[j=8]: {0.783853239218365, -15077.711790995469, -2.1831193460645246}
(Final BLEU[j=8]: 0.803046104333626)

+++ Optimization of lambda[j=9] starting @ Tue Oct 27 10:46:23 JST 2015 +++
Initial lambda[j=9]: {-0.004553671263154424, 0.8593774528720801, -0.01427276865927607}
(Initial BLEU[j=9]: 0.7978282115387586)

Final lambda[j=9]: {-0.004553671263154424, -0.08368296732864104, -0.021652385558302317}
(Final BLEU[j=9]: 0.8013748838671926)

+++ Optimization of lambda[j=10] starting @ Tue Oct 27 10:46:23 JST 2015 +++
Initial lambda[j=10]: {0.5053771649119221, -0.5713556223455967, -0.8739358729264859}
(Initial BLEU[j=10]: 0.796893300191509)

Final lambda[j=10]: {0.5053771649119221, -10175.632257594005, -0.8739358729264859}
(Final BLEU[j=10]: 0.803046104333626)

+++ Optimization of lambda[j=11] starting @ Tue Oct 27 10:46:23 JST 2015 +++
Initial lambda[j=11]: {0.7980226618452084, -0.399205792984231, -0.5477913765324938}
(Initial BLEU[j=11]: 0.7979554215125093)

Final lambda[j=11]: {0.7980226618452084, -7103.266709948071, -0.5477913765324938}
(Final BLEU[j=11]: 0.8026185914106343)

+++ Optimization of lambda[j=12] starting @ Tue Oct 27 10:46:23 JST 2015 +++
Initial lambda[j=12]: {0.594593012768021, -0.2974935383022126, 0.3275255626321376}
(Initial BLEU[j=12]: 0.7938498252043396)

Final lambda[j=12]: {0.594593012768021, -11849.373321547382, -1.3378274714267595}
(Final BLEU[j=12]: 0.803046104333626)

+++ Optimization of lambda[j=13] starting @ Tue Oct 27 10:46:23 JST 2015 +++
Initial lambda[j=13]: {-0.21052430917292875, 0.981831267676273, -0.8102868749874037}
(Initial BLEU[j=13]: 0.7993979412633848)

Final lambda[j=13]: {-0.15006158860440433, -3.047687130618659, -0.8102868749874037}
(Final BLEU[j=13]: 0.8013748838671926)

+++ Optimization of lambda[j=14] starting @ Tue Oct 27 10:46:23 JST 2015 +++
Initial lambda[j=14]: {0.03753776574773382, 0.00790321507749736, 0.03620028521108054}
(Initial BLEU[j=14]: 0.7937788855829527)

Final lambda[j=14]: {0.03753776574773382, -747.8202163863348, -0.084449434718797}
(Final BLEU[j=14]: 0.803046104333626)

+++ Optimization of lambda[j=15] starting @ Tue Oct 27 10:46:23 JST 2015 +++
Initial lambda[j=15]: {0.009954244141451962, 0.02541025170060851, 0.593645578752771}
(Initial BLEU[j=15]: 0.7900205911603778)

Final lambda[j=15]: {0.009954244141451962, -198.6579698531541, -0.022408305427163194}
(Final BLEU[j=15]: 0.803046104333626)

+++ Optimization of lambda[j=16] starting @ Tue Oct 27 10:46:23 JST 2015 +++
Initial lambda[j=16]: {0.6576106932759427, 0.17534745529356877, -0.6893751690924723}
(Initial BLEU[j=16]: 0.7970723622717774)

Final lambda[j=16]: {0.3161875424747594, -6397.682651358864, -0.6893751690924723}
(Final BLEU[j=16]: 0.803046104333626)

+++ Optimization of lambda[j=17] starting @ Tue Oct 27 10:46:23 JST 2015 +++
Initial lambda[j=17]: {-0.871756060640207, -0.8495287747458757, -0.3964594524802063}
(Initial BLEU[j=17]: 0.7994743215428654)

Final lambda[j=17]: {-0.0731573960334511, -0.8495287747458757, -0.3964594524802063}
(Final BLEU[j=17]: 0.8013748838671926)

+++ Optimization of lambda[j=18] starting @ Tue Oct 27 10:46:23 JST 2015 +++
Initial lambda[j=18]: {-0.4629095033959656, -0.10291979788243277, -0.8706362780408492}
(Initial BLEU[j=18]: 0.7989239731683835)

Final lambda[j=18]: {-0.1739731287134254, -3.3839704164998268, -0.8706362780408492}
(Final BLEU[j=18]: 0.8013748838671926)

+++ Optimization of lambda[j=19] starting @ Tue Oct 27 10:46:23 JST 2015 +++
Initial lambda[j=19]: {-0.8834296944416113, 0.3073471861931083, -0.08254985860243691}
(Initial BLEU[j=19]: 0.798770529931865)

Final lambda[j=19]: {20.420524372153558, -403781.72792778356, -45.819215826383065}
(Final BLEU[j=19]: 0.803046104333626)

+++ Optimization of lambda[j=20] starting @ Tue Oct 27 10:46:23 JST 2015 +++
Initial lambda[j=20]: {-0.2916952155637593, -0.8022503514522665, -0.33852947919372234}
(Initial BLEU[j=20]: 0.7994743215428654)

Final lambda[j=20]: {-0.06249952269581503, -0.8022503514522665, -0.33852947919372234}
(Final BLEU[j=20]: 0.8013748838671926)

Best final lambda is lambda[j=1] (BLEU: 0.8030).

---  Z-MERT iteration #1 ending @ Tue Oct 27 10:46:23 JST 2015  ---

Next iteration will decode with lambda: {0.04802334517102416, -972.0823886461662, -0.1}

--- Starting Z-MERT iteration #2 @ Tue Oct 27 10:46:23 JST 2015 ---
Redecoding using weight vector {0.04802334517102416, -972.0823886461662, -0.1}
Running decoder...
...finished decoding @ Tue Oct 27 10:46:24 JST 2015
Reading candidate translations from iterations 1-2
(and computing BLEU sufficient statistics for previously unseen candidates)
  Progress: ...+
Warning: attempt to delete ZMERT.temp.stats.mergedKnown was unsuccessful!
Processed 2526 distinct candidates (about 21 per sentence):
newCandidatesAdded[it=1] = 2526 (about 21 per sentence)
newCandidatesAdded[it=2] = 0 (about 0 per sentence)

No new candidates added in this iteration; exiting Z-MERT.

---  Z-MERT iteration #2 ending @ Tue Oct 27 10:46:24 JST 2015  ---


----------------------------------------------------
Z-MERT run ended @ Tue Oct 27 10:46:24 JST 2015
----------------------------------------------------

FINAL lambda: {0.04802334517102416, -972.0823886461662, -0.1} (BLEU: 0.803046104333626)

(OP Lamda) : [0.04802334517102416,-972.0823886461662,-0.1]
Number of candidates => 67
tmpDirPrefix: ZMERT.
Processed the following args array:
  -r ref -rps 4 -p params.txt -m BLEU 4 closest -maxIt 15 -ipi 20 -cmd SDecoder_cmd.bat -decOut nbest.out -dcfg SDecoder_cfg.txt -N 10 -v 1 -seed 12341234 

----------------------------------------------------
Initializing...
----------------------------------------------------

Random number generator initialized using seed: 12341234

$$ decoderCommand: java SimpleDecoder SDecoder_cfg.txt nbest.out
Number of sentences: 67
Number of documents: 1
Optimizing BLEU
docSubsetInfo: {0, 1, 1, 1, 1, 0, 0}
Number of features: 3
Feature names: {"RD","Word Model","Headword Model"}

c    Default value	Optimizable?	Crit. val. range	Rand. val. range
1     0.1000		 Yes		 [-Infinity,Infinity]		 [-1.0,1.0]
2     0.2000		 Yes		 [-Infinity,Infinity]		 [-1.0,1.0]
3     -0.1000		 Yes		 [-Infinity,Infinity]		 [-1.0,1.0]

Weight vector normalization method: none.

----------------------------------------------------

----------------------------------------------------
Z-MERT run started @ Tue Oct 27 10:46:24 JST 2015
----------------------------------------------------

Initial lambda[]: {0.1, 0.2, -0.1}

--- Starting Z-MERT iteration #1 @ Tue Oct 27 10:46:24 JST 2015 ---
Decoding using initial weight vector {0.1, 0.2, -0.1}
Running decoder...
...finished decoding @ Tue Oct 27 10:46:25 JST 2015
Reading candidate translations from iterations 1-1
(and computing BLEU sufficient statistics for previously unseen candidates)
  Progress: Size: 841
..
Warning: attempt to delete ZMERT.temp.stats.unknown was unsuccessful!
Warning: attempt to delete ZMERT.temp.stats.mergedKnown was unsuccessful!
Processed 841 distinct candidates (about 12 per sentence):
newCandidatesAdded[it=1] = 841 (about 12 per sentence)

+++ Optimization of lambda[j=1] starting @ Tue Oct 27 10:46:25 JST 2015 +++
Initial lambda[j=1]: {0.1, 0.2, -0.1}
(Initial BLEU[j=1]: 0.7851036448654822)

Final lambda[j=1]: {0.1, -606769.0760568177, 0.11764741435254436}
(Final BLEU[j=1]: 0.7923118306283721)

+++ Optimization of lambda[j=2] starting @ Tue Oct 27 10:46:25 JST 2015 +++
Initial lambda[j=2]: {-0.017230818545013626, -0.6577977590753961, 0.46016061237234096}
(Initial BLEU[j=2]: 0.7848174751842202)

Final lambda[j=2]: {0.222836490870382, -1351729.0508900625, 0.46016061237234096}
(Final BLEU[j=2]: 0.7923118306283721)

+++ Optimization of lambda[j=3] starting @ Tue Oct 27 10:46:25 JST 2015 +++
Initial lambda[j=3]: {-0.5203200954373215, 0.09518077619965482, -0.059473491599185246}
(Initial BLEU[j=3]: 0.7818576462887094)

Final lambda[j=3]: {0.001545911779179432, -3499.521692115366, 0.001818725198516008}
(Final BLEU[j=3]: 0.7923118306283721)

+++ Optimization of lambda[j=4] starting @ Tue Oct 27 10:46:25 JST 2015 +++
Initial lambda[j=4]: {-0.6919952429797738, -0.8743327758402839, -0.6393613928095458}
(Initial BLEU[j=4]: 0.7830238291391977)

Final lambda[j=4]: {0.2972696710334086, -1803748.341996816, 0.3497300712367958}
(Final BLEU[j=4]: 0.7923118306283721)

+++ Optimization of lambda[j=5] starting @ Tue Oct 27 10:46:25 JST 2015 +++
Initial lambda[j=5]: {0.7737957524668755, 0.6493837878144797, -0.5778133794884044}
(Initial BLEU[j=5]: 0.7851036448654822)

Final lambda[j=5]: {0.7737957524668755, -4695148.8086972935, 0.9103506832960307}
(Final BLEU[j=5]: 0.7923118306283721)

+++ Optimization of lambda[j=6] starting @ Tue Oct 27 10:46:25 JST 2015 +++
Initial lambda[j=6]: {0.2815800420089276, 0.15636862697411513, 0.6539535776649275}
(Initial BLEU[j=6]: 0.7904014196668079)

Final lambda[j=6]: {0.2815800420089276, -1708010.113953502, 0.6539535776649275}
(Final BLEU[j=6]: 0.7923118306283721)

+++ Optimization of lambda[j=7] starting @ Tue Oct 27 10:46:25 JST 2015 +++
Initial lambda[j=7]: {0.32669861662639876, 0.009245077311689887, -0.9330111163449395}
(Initial BLEU[j=7]: 0.7850013445642863)

Final lambda[j=7]: {0.32669861662639876, -1982320.1893532195, 0.38435246371529197}
(Final BLEU[j=7]: 0.7923118306283721)

+++ Optimization of lambda[j=8] starting @ Tue Oct 27 10:46:25 JST 2015 +++
Initial lambda[j=8]: {0.6515944996339995, 0.08804197789590318, 0.9795005730080566}
(Initial BLEU[j=8]: 0.7900024524204821)

Final lambda[j=8]: {0.6515944996339995, -3952874.0154401786, 0.9795005730080566}
(Final BLEU[j=8]: 0.7923118306283721)

+++ Optimization of lambda[j=9] starting @ Tue Oct 27 10:46:25 JST 2015 +++
Initial lambda[j=9]: {-0.004553671263154424, 0.8593774528720801, -0.01427276865927607}
(Initial BLEU[j=9]: 0.7821185186739462)

Final lambda[j=9]: {0.006665792840334632, -40446.14542482727, 0.007842132782528674}
(Final BLEU[j=9]: 0.7923118306283721)

+++ Optimization of lambda[j=10] starting @ Tue Oct 27 10:46:25 JST 2015 +++
Initial lambda[j=10]: {0.5053771649119221, -0.5713556223455967, -0.8739358729264859}
(Initial BLEU[j=10]: 0.7868524339786626)

Final lambda[j=10]: {0.5053771649119221, -3066480.87145515, 0.5945631821014543}
(Final BLEU[j=10]: 0.7923118306283721)

+++ Optimization of lambda[j=11] starting @ Tue Oct 27 10:46:25 JST 2015 +++
Initial lambda[j=11]: {0.7980226618452084, -0.399205792984231, -0.5477913765324938}
(Initial BLEU[j=11]: 0.7865923261928178)

Final lambda[j=11]: {0.7980226618452084, -4842148.949207973, 0.9388530140776179}
(Final BLEU[j=11]: 0.7923118306283721)

+++ Optimization of lambda[j=12] starting @ Tue Oct 27 10:46:25 JST 2015 +++
Initial lambda[j=12]: {0.594593012768021, -0.2974935383022126, 0.3275255626321376}
(Initial BLEU[j=12]: 0.7903642406780061)

Final lambda[j=12]: {0.594593012768021, -3607530.350203748, 0.3275255626321376}
(Final BLEU[j=12]: 0.7923118306283721)

+++ Optimization of lambda[j=13] starting @ Tue Oct 27 10:46:25 JST 2015 +++
Initial lambda[j=13]: {-0.21052430917292875, 0.981831267676273, -0.8102868749874037}
(Initial BLEU[j=13]: 0.7834892236134176)

Final lambda[j=13]: {0.37681172156011933, -2286387.0189069444, 0.44330923845179676}
(Final BLEU[j=13]: 0.7923118306283721)

+++ Optimization of lambda[j=14] starting @ Tue Oct 27 10:46:25 JST 2015 +++
Initial lambda[j=14]: {0.03753776574773382, 0.00790321507749736, 0.03620028521108054}
(Initial BLEU[j=14]: 0.7888792906094344)

Final lambda[j=14]: {0.03753776574773382, -227737.68044905568, 0.03620028521108054}
(Final BLEU[j=14]: 0.7923118306283721)

+++ Optimization of lambda[j=15] starting @ Tue Oct 27 10:46:25 JST 2015 +++
Initial lambda[j=15]: {0.009954244141451962, 0.02541025170060851, 0.593645578752771}
(Initial BLEU[j=15]: 0.7827464460170541)

Final lambda[j=15]: {0.2875118147620353, -1744050.4630196348, 0.593645578752771}
(Final BLEU[j=15]: 0.7923118306283721)

+++ Optimization of lambda[j=16] starting @ Tue Oct 27 10:46:25 JST 2015 +++
Initial lambda[j=16]: {0.6576106932759427, 0.17534745529356877, -0.6893751690924723}
(Initial BLEU[j=16]: 0.7851036448654822)

Final lambda[j=16]: {0.6576106932759427, -3990179.061711858, 0.773661950337329}
(Final BLEU[j=16]: 0.7923118306283721)

+++ Optimization of lambda[j=17] starting @ Tue Oct 27 10:46:25 JST 2015 +++
Initial lambda[j=17]: {-0.871756060640207, -0.8495287747458757, -0.3964594524802063}
(Initial BLEU[j=17]: 0.7826224859558762)

Final lambda[j=17]: {0.1843225621703914, -1118417.2098860182, 0.21685072060090096}
(Final BLEU[j=17]: 0.7923118306283721)

+++ Optimization of lambda[j=18] starting @ Tue Oct 27 10:46:25 JST 2015 +++
Initial lambda[j=18]: {-0.4629095033959656, -0.10291979788243277, -0.8706362780408492}
(Initial BLEU[j=18]: 0.781494362387969)

Final lambda[j=18]: {0.4048371754713388, -2456437.5536646834, 0.4762804662132424}
(Final BLEU[j=18]: 0.7923118306283721)

+++ Optimization of lambda[j=19] starting @ Tue Oct 27 10:46:25 JST 2015 +++
Initial lambda[j=19]: {-0.8834296944416113, 0.3073471861931083, -0.08254985860243691}
(Initial BLEU[j=19]: 0.7818576462887094)

Final lambda[j=19]: {0.0023219017692566284, -5939.792190582482, 0.0027316573339004196}
(Final BLEU[j=19]: 0.7923118306283721)

+++ Optimization of lambda[j=20] starting @ Tue Oct 27 10:46:25 JST 2015 +++
Initial lambda[j=20]: {-0.2916952155637593, -0.8022503514522665, -0.33852947919372234}
(Initial BLEU[j=20]: 0.7830238291391977)

Final lambda[j=20]: {0.1573870693204965, -954980.2525132082, 0.18516181193726666}
(Final BLEU[j=20]: 0.7923118306283721)

Best final lambda is lambda[j=1] (BLEU: 0.7923).

---  Z-MERT iteration #1 ending @ Tue Oct 27 10:46:25 JST 2015  ---

Next iteration will decode with lambda: {0.1, -606769.0760568177, 0.11764741435254436}

--- Starting Z-MERT iteration #2 @ Tue Oct 27 10:46:25 JST 2015 ---
Redecoding using weight vector {0.1, -606769.0760568177, 0.11764741435254436}
Running decoder...
...finished decoding @ Tue Oct 27 10:46:25 JST 2015
Reading candidate translations from iterations 1-2
(and computing BLEU sufficient statistics for previously unseen candidates)
  Progress: ..
Warning: attempt to delete ZMERT.temp.stats.unknown was unsuccessful!
Warning: attempt to delete ZMERT.temp.stats.mergedKnown was unsuccessful!
Processed 841 distinct candidates (about 12 per sentence):
newCandidatesAdded[it=1] = 841 (about 12 per sentence)
newCandidatesAdded[it=2] = 0 (about 0 per sentence)

No new candidates added in this iteration; exiting Z-MERT.

---  Z-MERT iteration #2 ending @ Tue Oct 27 10:46:26 JST 2015  ---


----------------------------------------------------
Z-MERT run ended @ Tue Oct 27 10:46:26 JST 2015
----------------------------------------------------

FINAL lambda: {0.1, -606769.0760568177, 0.11764741435254436} (BLEU: 0.7923118306283721)

(OP Lamda) : [0.1,-606769.0760568177,0.11764741435254436]
Number of candidates => 28
tmpDirPrefix: ZMERT.
Processed the following args array:
  -r ref -rps 4 -p params.txt -m BLEU 4 closest -maxIt 15 -ipi 20 -cmd SDecoder_cmd.bat -decOut nbest.out -dcfg SDecoder_cfg.txt -N 10 -v 1 -seed 12341234 

----------------------------------------------------
Initializing...
----------------------------------------------------

Random number generator initialized using seed: 12341234

$$ decoderCommand: java SimpleDecoder SDecoder_cfg.txt nbest.out
Number of sentences: 28
Number of documents: 1
Optimizing BLEU
docSubsetInfo: {0, 1, 1, 1, 1, 0, 0}
Number of features: 3
Feature names: {"RD","Word Model","Headword Model"}

c    Default value	Optimizable?	Crit. val. range	Rand. val. range
1     0.1000		 Yes		 [-Infinity,Infinity]		 [-1.0,1.0]
2     0.2000		 Yes		 [-Infinity,Infinity]		 [-1.0,1.0]
3     -0.1000		 Yes		 [-Infinity,Infinity]		 [-1.0,1.0]

Weight vector normalization method: none.

----------------------------------------------------

----------------------------------------------------
Z-MERT run started @ Tue Oct 27 10:46:26 JST 2015
----------------------------------------------------

Initial lambda[]: {0.1, 0.2, -0.1}

--- Starting Z-MERT iteration #1 @ Tue Oct 27 10:46:26 JST 2015 ---
Decoding using initial weight vector {0.1, 0.2, -0.1}
Running decoder...
...finished decoding @ Tue Oct 27 10:46:26 JST 2015
Reading candidate translations from iterations 1-1
(and computing BLEU sufficient statistics for previously unseen candidates)
  Progress: Size: 361
.
Warning: attempt to delete ZMERT.temp.stats.unknown was unsuccessful!
Warning: attempt to delete ZMERT.temp.stats.mergedKnown was unsuccessful!
Processed 361 distinct candidates (about 12 per sentence):
newCandidatesAdded[it=1] = 361 (about 12 per sentence)

+++ Optimization of lambda[j=1] starting @ Tue Oct 27 10:46:26 JST 2015 +++
Initial lambda[j=1]: {0.1, 0.2, -0.1}
(Initial BLEU[j=1]: 0.8102830047670828)

Final lambda[j=1]: {0.1, -1084360.5479897321, -0.1}
(Final BLEU[j=1]: 0.8175162425335318)

+++ Optimization of lambda[j=2] starting @ Tue Oct 27 10:46:26 JST 2015 +++
Initial lambda[j=2]: {-0.017230818545013626, -0.6577977590753961, 0.46016061237234096}
(Initial BLEU[j=2]: 0.8089135423523189)

Final lambda[j=2]: {-0.017230818545013626, -33943.9764312808, -0.21125252567682617}
(Final BLEU[j=2]: 0.8203390351849537)

+++ Optimization of lambda[j=3] starting @ Tue Oct 27 10:46:26 JST 2015 +++
Initial lambda[j=3]: {-0.5203200954373215, 0.09518077619965482, -0.059473491599185246}
(Initial BLEU[j=3]: 0.8082726347691156)

Final lambda[j=3]: {-0.5203200954373215, -1024429.8462970983, -6.383127740575084}
(Final BLEU[j=3]: 0.8203390351849537)

+++ Optimization of lambda[j=4] starting @ Tue Oct 27 10:46:26 JST 2015 +++
Initial lambda[j=4]: {-0.6919952429797738, -0.8743327758402839, -0.6393613928095458}
(Initial BLEU[j=4]: 0.8099465579749459)

Final lambda[j=4]: {-0.04516310404796672, -88888.24384598467, -0.6393613928095458}
(Final BLEU[j=4]: 0.8203390351849537)

+++ Optimization of lambda[j=5] starting @ Tue Oct 27 10:46:26 JST 2015 +++
Initial lambda[j=5]: {0.7737957524668755, 0.6493837878144797, -0.5778133794884044}
(Initial BLEU[j=5]: 0.8102830047670828)

Final lambda[j=5]: {0.7737957524668755, -8399893.277812755, -0.5778133794884044}
(Final BLEU[j=5]: 0.8175162425335318)

+++ Optimization of lambda[j=6] starting @ Tue Oct 27 10:46:26 JST 2015 +++
Initial lambda[j=6]: {0.2815800420089276, 0.15636862697411513, 0.6539535776649275}
(Initial BLEU[j=6]: 0.8106185238987442)

Final lambda[j=6]: {0.2815800420089276, -3097056.361632669, -8.057644172080572}
(Final BLEU[j=6]: 0.8175162425335318)

+++ Optimization of lambda[j=7] starting @ Tue Oct 27 10:46:26 JST 2015 +++
Initial lambda[j=7]: {0.32669861662639876, 0.009245077311689887, -0.9330111163449395}
(Initial BLEU[j=7]: 0.8105152108389944)

Final lambda[j=7]: {0.32669861662639876, -3514260.5258949553, -0.9330111163449395}
(Final BLEU[j=7]: 0.8175162425335318)

+++ Optimization of lambda[j=8] starting @ Tue Oct 27 10:46:26 JST 2015 +++
Initial lambda[j=8]: {0.6515944996339995, 0.08804197789590318, 0.9795005730080566}
(Initial BLEU[j=8]: 0.8122187601597111)

Final lambda[j=8]: {0.6515944996339995, -7141847.766549751, -18.63508274604869}
(Final BLEU[j=8]: 0.8175162425335318)

+++ Optimization of lambda[j=9] starting @ Tue Oct 27 10:46:26 JST 2015 +++
Initial lambda[j=9]: {-0.004553671263154424, 0.8593774528720801, -0.01427276865927607}
(Initial BLEU[j=9]: 0.8121157755335673)

Final lambda[j=9]: {-0.004553671263154424, -8961.198445700144, -0.05589203880608078}
(Final BLEU[j=9]: 0.8203390351849537)

+++ Optimization of lambda[j=10] starting @ Tue Oct 27 10:46:26 JST 2015 +++
Initial lambda[j=10]: {0.5053771649119221, -0.5713556223455967, -0.8739358729264859}
(Initial BLEU[j=10]: 0.8102830047670828)

Final lambda[j=10]: {0.5053771649119221, -5462889.426573416, -0.8739358729264859}
(Final BLEU[j=10]: 0.8175162425335318)

+++ Optimization of lambda[j=11] starting @ Tue Oct 27 10:46:26 JST 2015 +++
Initial lambda[j=11]: {0.7980226618452084, -0.399205792984231, -0.5477913765324938}
(Initial BLEU[j=11]: 0.8102830047670828)

Final lambda[j=11]: {0.7980226618452084, -8665135.144197214, -0.5477913765324938}
(Final BLEU[j=11]: 0.8175162425335318)

+++ Optimization of lambda[j=12] starting @ Tue Oct 27 10:46:26 JST 2015 +++
Initial lambda[j=12]: {0.594593012768021, -0.2974935383022126, 0.3275255626321376}
(Initial BLEU[j=12]: 0.8122187601597111)

Final lambda[j=12]: {0.594593012768021, -6490618.699131157, -16.99339747071599}
(Final BLEU[j=12]: 0.8175162425335318)

+++ Optimization of lambda[j=13] starting @ Tue Oct 27 10:46:26 JST 2015 +++
Initial lambda[j=13]: {-0.21052430917292875, 0.981831267676273, -0.8102868749874037}
(Initial BLEU[j=13]: 0.8115476010955286)

Final lambda[j=13]: {-0.21052430917292875, -415444.7453432005, -2.576173769031085}
(Final BLEU[j=13]: 0.8203390351849537)

+++ Optimization of lambda[j=14] starting @ Tue Oct 27 10:46:26 JST 2015 +++
Initial lambda[j=14]: {0.03753776574773382, 0.00790321507749736, 0.03620028521108054}
(Initial BLEU[j=14]: 0.8122187601597111)

Final lambda[j=14]: {0.03753776574773382, -410490.18534472625, -1.073139787883572}
(Final BLEU[j=14]: 0.8175162425335318)

+++ Optimization of lambda[j=15] starting @ Tue Oct 27 10:46:26 JST 2015 +++
Initial lambda[j=15]: {0.009954244141451962, 0.02541025170060851, 0.593645578752771}
(Initial BLEU[j=15]: 0.8050985674279957)

Final lambda[j=15]: {-0.0020707523222083133, -4101.59424302515, -0.02523655585438058}
(Final BLEU[j=15]: 0.8203390351849537)

+++ Optimization of lambda[j=16] starting @ Tue Oct 27 10:46:26 JST 2015 +++
Initial lambda[j=16]: {0.6576106932759427, 0.17534745529356877, -0.6893751690924723}
(Initial BLEU[j=16]: 0.8102830047670828)

Final lambda[j=16]: {0.6576106932759427, -7129386.699477026, -0.6893751690924723}
(Final BLEU[j=16]: 0.8175162425335318)

+++ Optimization of lambda[j=17] starting @ Tue Oct 27 10:46:26 JST 2015 +++
Initial lambda[j=17]: {-0.871756060640207, -0.8495287747458757, -0.3964594524802063}
(Initial BLEU[j=17]: 0.8082726347691156)

Final lambda[j=17]: {0.117209309087281, -1257923.3443598598, -0.3964594524802063}
(Final BLEU[j=17]: 0.8175162425335318)

+++ Optimization of lambda[j=18] starting @ Tue Oct 27 10:46:26 JST 2015 +++
Initial lambda[j=18]: {-0.4629095033959656, -0.10291979788243277, -0.8706362780408492}
(Initial BLEU[j=18]: 0.8115476010955286)

Final lambda[j=18]: {-0.057192559639920655, -112561.17124973363, -0.8706362780408492}
(Final BLEU[j=18]: 0.8203390351849537)

+++ Optimization of lambda[j=19] starting @ Tue Oct 27 10:46:26 JST 2015 +++
Initial lambda[j=19]: {-0.8834296944416113, 0.3073471861931083, -0.08254985860243691}
(Initial BLEU[j=19]: 0.8082726347691156)

Final lambda[j=19]: {-0.8834296944416113, -1739337.422507347, -10.837639118908832}
(Final BLEU[j=19]: 0.8203390351849537)

+++ Optimization of lambda[j=20] starting @ Tue Oct 27 10:46:26 JST 2015 +++
Initial lambda[j=20]: {-0.2916952155637593, -0.8022503514522665, -0.33852947919372234}
(Initial BLEU[j=20]: 0.8099465579749459)

Final lambda[j=20]: {-0.023241800375732397, -45743.13337369204, -0.33852947919372234}
(Final BLEU[j=20]: 0.8203390351849537)

Best final lambda is lambda[j=2] (BLEU: 0.8203).

---  Z-MERT iteration #1 ending @ Tue Oct 27 10:46:26 JST 2015  ---

Next iteration will decode with lambda: {-0.017230818545013626, -33943.9764312808, -0.21125252567682617}

--- Starting Z-MERT iteration #2 @ Tue Oct 27 10:46:26 JST 2015 ---
Redecoding using weight vector {-0.017230818545013626, -33943.9764312808, -0.21125252567682617}
Running decoder...
...finished decoding @ Tue Oct 27 10:46:26 JST 2015
Reading candidate translations from iterations 1-2
(and computing BLEU sufficient statistics for previously unseen candidates)
  Progress: .
Warning: attempt to delete ZMERT.temp.stats.unknown was unsuccessful!
Warning: attempt to delete ZMERT.temp.stats.mergedKnown was unsuccessful!
Processed 361 distinct candidates (about 12 per sentence):
newCandidatesAdded[it=1] = 361 (about 12 per sentence)
newCandidatesAdded[it=2] = 0 (about 0 per sentence)

No new candidates added in this iteration; exiting Z-MERT.

---  Z-MERT iteration #2 ending @ Tue Oct 27 10:46:26 JST 2015  ---


----------------------------------------------------
Z-MERT run ended @ Tue Oct 27 10:46:26 JST 2015
----------------------------------------------------

FINAL lambda: {-0.017230818545013626, -33943.9764312808, -0.21125252567682617} (BLEU: 0.8203390351849537)

(OP Lamda) : [-0.017230818545013626,-33943.9764312808,-0.21125252567682617]
Number of candidates => 15
tmpDirPrefix: ZMERT.
Processed the following args array:
  -r ref -rps 4 -p params.txt -m BLEU 4 closest -maxIt 15 -ipi 20 -cmd SDecoder_cmd.bat -decOut nbest.out -dcfg SDecoder_cfg.txt -N 10 -v 1 -seed 12341234 

----------------------------------------------------
Initializing...
----------------------------------------------------

Random number generator initialized using seed: 12341234

$$ decoderCommand: java SimpleDecoder SDecoder_cfg.txt nbest.out
Number of sentences: 15
Number of documents: 1
Optimizing BLEU
docSubsetInfo: {0, 1, 1, 1, 1, 0, 0}
Number of features: 3
Feature names: {"RD","Word Model","Headword Model"}

c    Default value	Optimizable?	Crit. val. range	Rand. val. range
1     0.1000		 Yes		 [-Infinity,Infinity]		 [-1.0,1.0]
2     0.2000		 Yes		 [-Infinity,Infinity]		 [-1.0,1.0]
3     -0.1000		 Yes		 [-Infinity,Infinity]		 [-1.0,1.0]

Weight vector normalization method: none.

----------------------------------------------------

----------------------------------------------------
Z-MERT run started @ Tue Oct 27 10:46:26 JST 2015
----------------------------------------------------

Initial lambda[]: {0.1, 0.2, -0.1}

--- Starting Z-MERT iteration #1 @ Tue Oct 27 10:46:26 JST 2015 ---
Decoding using initial weight vector {0.1, 0.2, -0.1}
Running decoder...
...finished decoding @ Tue Oct 27 10:46:27 JST 2015
Reading candidate translations from iterations 1-1
(and computing BLEU sufficient statistics for previously unseen candidates)
  Progress: Size: 74

Warning: attempt to delete ZMERT.temp.stats.unknown was unsuccessful!
Warning: attempt to delete ZMERT.temp.stats.mergedKnown was unsuccessful!
Processed 74 distinct candidates (about 4 per sentence):
newCandidatesAdded[it=1] = 74 (about 4 per sentence)

+++ Optimization of lambda[j=1] starting @ Tue Oct 27 10:46:27 JST 2015 +++
Initial lambda[j=1]: {0.1, 0.2, -0.1}
(Initial BLEU[j=1]: 0.8444737982240109)

Final lambda[j=1]: {0.1, -18472.163411124973, -0.1}
(Final BLEU[j=1]: 0.855805997158232)

+++ Optimization of lambda[j=2] starting @ Tue Oct 27 10:46:27 JST 2015 +++
Initial lambda[j=2]: {-0.017230818545013626, -0.6577977590753961, 0.46016061237234096}
(Initial BLEU[j=2]: 0.8263299335238166)

Final lambda[j=2]: {0.058811101289754406, -8320.81128929788, -0.25107884872525343}
(Final BLEU[j=2]: 0.855805997158232)

+++ Optimization of lambda[j=3] starting @ Tue Oct 27 10:46:27 JST 2015 +++
Initial lambda[j=3]: {-0.5203200954373215, 0.09518077619965482, -0.059473491599185246}
(Initial BLEU[j=3]: 0.8281354275442528)

Final lambda[j=3]: {0.006113547411662774, -61880.554485458255, -0.059473491599185246}
(Final BLEU[j=3]: 0.8529250955811386)

+++ Optimization of lambda[j=4] starting @ Tue Oct 27 10:46:27 JST 2015 +++
Initial lambda[j=4]: {-0.6919952429797738, -0.8743327758402839, -0.6393613928095458}
(Initial BLEU[j=4]: 0.8281354275442528)

Final lambda[j=4]: {0.06565137722376861, -665237.6957433678, -0.6393613928095458}
(Final BLEU[j=4]: 0.8529250955811386)

+++ Optimization of lambda[j=5] starting @ Tue Oct 27 10:46:27 JST 2015 +++
Initial lambda[j=5]: {0.7737957524668755, 0.6493837878144797, -0.5778133794884044}
(Initial BLEU[j=5]: 0.8444737982240109)

Final lambda[j=5]: {0.7737957524668755, -144548.63692642053, -0.5778133794884044}
(Final BLEU[j=5]: 0.855805997158232)

+++ Optimization of lambda[j=6] starting @ Tue Oct 27 10:46:27 JST 2015 +++
Initial lambda[j=6]: {0.2815800420089276, 0.15636862697411513, 0.6539535776649275}
(Initial BLEU[j=6]: 0.8355464440318844)

Final lambda[j=6]: {0.5005932573644605, -75673.28277437169, -1.1949184828775725}
(Final BLEU[j=6]: 0.855805997158232)

+++ Optimization of lambda[j=7] starting @ Tue Oct 27 10:46:27 JST 2015 +++
Initial lambda[j=7]: {0.32669861662639876, 0.009245077311689887, -0.9330111163449395}
(Initial BLEU[j=7]: 0.8444737982240109)

Final lambda[j=7]: {0.32669861662639876, -55361.79643385536, -0.9330111163449395}
(Final BLEU[j=7]: 0.855805997158232)

+++ Optimization of lambda[j=8] starting @ Tue Oct 27 10:46:27 JST 2015 +++
Initial lambda[j=8]: {0.6515944996339995, 0.08804197789590318, 0.9795005730080566}
(Initial BLEU[j=8]: 0.8459202112481061)

Final lambda[j=8]: {0.12992103469971514, -18410.140000814157, -0.5491376517219378}
(Final BLEU[j=8]: 0.855805997158232)

+++ Optimization of lambda[j=9] starting @ Tue Oct 27 10:46:27 JST 2015 +++
Initial lambda[j=9]: {-0.004553671263154424, 0.8593774528720801, -0.01427276865927607}
(Initial BLEU[j=9]: 0.8326108682749941)

Final lambda[j=9]: {0.001498661898739866, -14850.466568653925, -0.01427276865927607}
(Final BLEU[j=9]: 0.8529250955811386)

+++ Optimization of lambda[j=10] starting @ Tue Oct 27 10:46:27 JST 2015 +++
Initial lambda[j=10]: {0.5053771649119221, -0.5713556223455967, -0.8739358729264859}
(Initial BLEU[j=10]: 0.8444737982240109)

Final lambda[j=10]: {0.5053771649119221, -90322.95228413232, -0.8739358729264859}
(Final BLEU[j=10]: 0.855805997158232)

+++ Optimization of lambda[j=11] starting @ Tue Oct 27 10:46:27 JST 2015 +++
Initial lambda[j=11]: {0.7980226618452084, -0.399205792984231, -0.5477913765324938}
(Initial BLEU[j=11]: 0.8444737982240109)

Final lambda[j=11]: {0.7980226618452084, -149470.0314406812, -0.5477913765324938}
(Final BLEU[j=11]: 0.855805997158232)

+++ Optimization of lambda[j=12] starting @ Tue Oct 27 10:46:27 JST 2015 +++
Initial lambda[j=12]: {0.594593012768021, -0.2974935383022126, 0.3275255626321376}
(Initial BLEU[j=12]: 0.8459202112481061)

Final lambda[j=12]: {0.594593012768021, -83754.75446284679, -1.7598073716325158}
(Final BLEU[j=12]: 0.855805997158232)

+++ Optimization of lambda[j=13] starting @ Tue Oct 27 10:46:27 JST 2015 +++
Initial lambda[j=13]: {-0.21052430917292875, 0.981831267676273, -0.8102868749874037}
(Initial BLEU[j=13]: 0.8326108682749941)

Final lambda[j=13]: {0.08328116918498323, -843080.8790201833, -0.8102868749874037}
(Final BLEU[j=13]: 0.8529250955811386)

+++ Optimization of lambda[j=14] starting @ Tue Oct 27 10:46:27 JST 2015 +++
Initial lambda[j=14]: {0.03753776574773382, 0.00790321507749736, 0.03620028521108054}
(Initial BLEU[j=14]: 0.8459202112481061)

Final lambda[j=14]: {0.025998635308226777, -3819.799923802133, -0.08350645280866839}
(Final BLEU[j=14]: 0.855805997158232)

+++ Optimization of lambda[j=15] starting @ Tue Oct 27 10:46:27 JST 2015 +++
Initial lambda[j=15]: {0.009954244141451962, 0.02541025170060851, 0.593645578752771}
(Initial BLEU[j=15]: 0.8369986988272725)

Final lambda[j=15]: {0.009954244141451962, -1595.9208625970587, -0.039481729102096505}
(Final BLEU[j=15]: 0.855805997158232)

+++ Optimization of lambda[j=16] starting @ Tue Oct 27 10:46:27 JST 2015 +++
Initial lambda[j=16]: {0.6576106932759427, 0.17534745529356877, -0.6893751690924723}
(Initial BLEU[j=16]: 0.8444737982240109)

Final lambda[j=16]: {0.6576106932759427, -121213.6807686192, -0.6893751690924723}
(Final BLEU[j=16]: 0.855805997158232)

+++ Optimization of lambda[j=17] starting @ Tue Oct 27 10:46:27 JST 2015 +++
Initial lambda[j=17]: {-0.871756060640207, -0.8495287747458757, -0.3964594524802063}
(Initial BLEU[j=17]: 0.8281354275442528)

Final lambda[j=17]: {0.04069796742195213, -412505.0210019011, -0.3964594524802063}
(Final BLEU[j=17]: 0.8529250955811386)

+++ Optimization of lambda[j=18] starting @ Tue Oct 27 10:46:27 JST 2015 +++
Initial lambda[j=18]: {-0.4629095033959656, -0.10291979788243277, -0.8706362780408492}
(Initial BLEU[j=18]: 0.8281354275442528)

Final lambda[j=18]: {0.08944027215578668, -905872.74487382, -0.8706362780408492}
(Final BLEU[j=18]: 0.8529250955811386)

+++ Optimization of lambda[j=19] starting @ Tue Oct 27 10:46:27 JST 2015 +++
Initial lambda[j=19]: {-0.8834296944416113, 0.3073471861931083, -0.08254985860243691}
(Initial BLEU[j=19]: 0.8281354275442528)

Final lambda[j=19]: {0.00849226936792954, -85890.86888698158, -0.08254985860243691}
(Final BLEU[j=19]: 0.8529250955811386)

+++ Optimization of lambda[j=20] starting @ Tue Oct 27 10:46:27 JST 2015 +++
Initial lambda[j=20]: {-0.2916952155637593, -0.8022503514522665, -0.33852947919372234}
(Initial BLEU[j=20]: 0.8281354275442528)

Final lambda[j=20]: {0.03474835650044282, -352230.5041473056, -0.33852947919372234}
(Final BLEU[j=20]: 0.8529250955811386)

Best final lambda is lambda[j=1] (BLEU: 0.8558).

---  Z-MERT iteration #1 ending @ Tue Oct 27 10:46:27 JST 2015  ---

Next iteration will decode with lambda: {0.1, -18472.163411124973, -0.1}

--- Starting Z-MERT iteration #2 @ Tue Oct 27 10:46:27 JST 2015 ---
Redecoding using weight vector {0.1, -18472.163411124973, -0.1}
Running decoder...
...finished decoding @ Tue Oct 27 10:46:27 JST 2015
Reading candidate translations from iterations 1-2
(and computing BLEU sufficient statistics for previously unseen candidates)
  Progress: 
Warning: attempt to delete ZMERT.temp.stats.unknown was unsuccessful!
Warning: attempt to delete ZMERT.temp.stats.mergedKnown was unsuccessful!
Processed 74 distinct candidates (about 4 per sentence):
newCandidatesAdded[it=1] = 74 (about 4 per sentence)
newCandidatesAdded[it=2] = 0 (about 0 per sentence)

No new candidates added in this iteration; exiting Z-MERT.

---  Z-MERT iteration #2 ending @ Tue Oct 27 10:46:27 JST 2015  ---


----------------------------------------------------
Z-MERT run ended @ Tue Oct 27 10:46:27 JST 2015
----------------------------------------------------

FINAL lambda: {0.1, -18472.163411124973, -0.1} (BLEU: 0.855805997158232)

(OP Lamda) : [0.1,-18472.163411124973,-0.1]
Number of candidates => 8
tmpDirPrefix: ZMERT.
Processed the following args array:
  -r ref -rps 4 -p params.txt -m BLEU 4 closest -maxIt 15 -ipi 20 -cmd SDecoder_cmd.bat -decOut nbest.out -dcfg SDecoder_cfg.txt -N 10 -v 1 -seed 12341234 

----------------------------------------------------
Initializing...
----------------------------------------------------

Random number generator initialized using seed: 12341234

$$ decoderCommand: java SimpleDecoder SDecoder_cfg.txt nbest.out
Number of sentences: 8
Number of documents: 1
Optimizing BLEU
docSubsetInfo: {0, 1, 1, 1, 1, 0, 0}
Number of features: 3
Feature names: {"RD","Word Model","Headword Model"}

c    Default value	Optimizable?	Crit. val. range	Rand. val. range
1     0.1000		 Yes		 [-Infinity,Infinity]		 [-1.0,1.0]
2     0.2000		 Yes		 [-Infinity,Infinity]		 [-1.0,1.0]
3     -0.1000		 Yes		 [-Infinity,Infinity]		 [-1.0,1.0]

Weight vector normalization method: none.

----------------------------------------------------

----------------------------------------------------
Z-MERT run started @ Tue Oct 27 10:46:27 JST 2015
----------------------------------------------------

Initial lambda[]: {0.1, 0.2, -0.1}

--- Starting Z-MERT iteration #1 @ Tue Oct 27 10:46:27 JST 2015 ---
Decoding using initial weight vector {0.1, 0.2, -0.1}
Running decoder...
...finished decoding @ Tue Oct 27 10:46:27 JST 2015
Reading candidate translations from iterations 1-1
(and computing BLEU sufficient statistics for previously unseen candidates)
  Progress: Size: 52

Warning: attempt to delete ZMERT.temp.stats.unknown was unsuccessful!
Warning: attempt to delete ZMERT.temp.stats.mergedKnown was unsuccessful!
Processed 52 distinct candidates (about 6 per sentence):
newCandidatesAdded[it=1] = 52 (about 6 per sentence)

+++ Optimization of lambda[j=1] starting @ Tue Oct 27 10:46:27 JST 2015 +++
Initial lambda[j=1]: {0.1, 0.2, -0.1}
(Initial BLEU[j=1]: 0.8323519335204085)

Final lambda[j=1]: {-0.1606425610120449, 548390.8096473007, 7.606520941952468}
(Final BLEU[j=1]: 0.8628416930896428)

+++ Optimization of lambda[j=2] starting @ Tue Oct 27 10:46:27 JST 2015 +++
Initial lambda[j=2]: {-0.017230818545013626, -0.6577977590753961, 0.46016061237234096}
(Initial BLEU[j=2]: 0.860123862708645)

Final lambda[j=2]: {-0.017230818545013626, 58380.15343677503, 0.46016061237234096}
(Final BLEU[j=2]: 0.8628416930896428)

+++ Optimization of lambda[j=3] starting @ Tue Oct 27 10:46:27 JST 2015 +++
Initial lambda[j=3]: {-0.5203200954373215, 0.09518077619965482, -0.059473491599185246}
(Initial BLEU[j=3]: 0.8528958785506814)

Final lambda[j=3]: {-0.5203200954373215, 1775986.0845796433, 24.635098478667672}
(Final BLEU[j=3]: 0.8628416930896428)

+++ Optimization of lambda[j=4] starting @ Tue Oct 27 10:46:27 JST 2015 +++
Initial lambda[j=4]: {-0.6919952429797738, -0.8743327758402839, -0.6393613928095458}
(Initial BLEU[j=4]: 0.851370119528461)

Final lambda[j=4]: {-0.6919952429797738, 2362482.458118977, 32.76825487578382}
(Final BLEU[j=4]: 0.8628416930896428)

+++ Optimization of lambda[j=5] starting @ Tue Oct 27 10:46:27 JST 2015 +++
Initial lambda[j=5]: {0.7737957524668755, 0.6493837878144797, -0.5778133794884044}
(Initial BLEU[j=5]: 0.8323519335204085)

Final lambda[j=5]: {-0.6893065838457904, 2353247.986505469, 32.6404090936192}
(Final BLEU[j=5]: 0.8628416930896428)

+++ Optimization of lambda[j=6] starting @ Tue Oct 27 10:46:27 JST 2015 +++
Initial lambda[j=6]: {0.2815800420089276, 0.15636862697411513, 0.6539535776649275}
(Initial BLEU[j=6]: 0.8345981638960608)

Final lambda[j=6]: {-0.05808610518293093, 197643.76064958895, 0.6539535776649275}
(Final BLEU[j=6]: 0.8628416930896428)

+++ Optimization of lambda[j=7] starting @ Tue Oct 27 10:46:27 JST 2015 +++
Initial lambda[j=7]: {0.32669861662639876, 0.009245077311689887, -0.9330111163449395}
(Initial BLEU[j=7]: 0.8323519335204085)

Final lambda[j=7]: {-1.0823039566293737, 3694939.6827935562, 51.25005878710368}
(Final BLEU[j=7]: 0.8628416930896428)

+++ Optimization of lambda[j=8] starting @ Tue Oct 27 10:46:27 JST 2015 +++
Initial lambda[j=8]: {0.6515944996339995, 0.08804197789590318, 0.9795005730080566}
(Initial BLEU[j=8]: 0.8345981638960608)

Final lambda[j=8]: {-0.0621114622389674, 211077.8419859219, 0.9795005730080566}
(Final BLEU[j=8]: 0.8628416930896428)

+++ Optimization of lambda[j=9] starting @ Tue Oct 27 10:46:27 JST 2015 +++
Initial lambda[j=9]: {-0.004553671263154424, 0.8593774528720801, -0.01427276865927607}
(Initial BLEU[j=9]: 0.851370119528461)

Final lambda[j=9]: {-0.004553671263154424, 15555.736264914962, 0.21572147494561467}
(Final BLEU[j=9]: 0.8628416930896428)

+++ Optimization of lambda[j=10] starting @ Tue Oct 27 10:46:27 JST 2015 +++
Initial lambda[j=10]: {0.5053771649119221, -0.5713556223455967, -0.8739358729264859}
(Initial BLEU[j=10]: 0.8323519335204085)

Final lambda[j=10]: {-1.0169407383600666, 3471789.878635532, 48.154906835692024}
(Final BLEU[j=10]: 0.8628416930896428)

+++ Optimization of lambda[j=11] starting @ Tue Oct 27 10:46:27 JST 2015 +++
Initial lambda[j=11]: {0.7980226618452084, -0.399205792984231, -0.5477913765324938}
(Initial BLEU[j=11]: 0.8323519335204085)

Final lambda[j=11]: {-0.6560876410426663, 2239838.630296967, 31.06738870028379}
(Final BLEU[j=11]: 0.8628416930896428)

+++ Optimization of lambda[j=12] starting @ Tue Oct 27 10:46:27 JST 2015 +++
Initial lambda[j=12]: {0.594593012768021, -0.2974935383022126, 0.3275255626321376}
(Initial BLEU[j=12]: 0.8330710287340123)

Final lambda[j=12]: {-0.05404979648636289, 150827.61187801854, 0.3275255626321376}
(Final BLEU[j=12]: 0.8628416930896428)

+++ Optimization of lambda[j=13] starting @ Tue Oct 27 10:46:27 JST 2015 +++
Initial lambda[j=13]: {-0.21052430917292875, 0.981831267676273, -0.8102868749874037}
(Initial BLEU[j=13]: 0.8413507694443011)

Final lambda[j=13]: {-0.21052430917292875, 719310.2791248767, 9.974533988698655}
(Final BLEU[j=13]: 0.8628416930896428)

+++ Optimization of lambda[j=14] starting @ Tue Oct 27 10:46:27 JST 2015 +++
Initial lambda[j=14]: {0.03753776574773382, 0.00790321507749736, 0.03620028521108054}
(Initial BLEU[j=14]: 0.8345981638960608)

Final lambda[j=14]: {-0.050447614737939434, 172151.3360265378, 2.3881192125284474}
(Final BLEU[j=14]: 0.8628416930896428)

+++ Optimization of lambda[j=15] starting @ Tue Oct 27 10:46:27 JST 2015 +++
Initial lambda[j=15]: {0.009954244141451962, 0.02541025170060851, 0.593645578752771}
(Initial BLEU[j=15]: 0.8422482115407249)

Final lambda[j=15]: {-0.05734038669625075, 195155.02548343694, 0.593645578752771}
(Final BLEU[j=15]: 0.8628416930896428)

+++ Optimization of lambda[j=16] starting @ Tue Oct 27 10:46:27 JST 2015 +++
Initial lambda[j=16]: {0.6576106932759427, 0.17534745529356877, -0.6893751690924723}
(Initial BLEU[j=16]: 0.8323519335204085)

Final lambda[j=16]: {-0.8127401144838355, 2774649.6414218107, 38.48537124215455}
(Final BLEU[j=16]: 0.8628416930896428)

+++ Optimization of lambda[j=17] starting @ Tue Oct 27 10:46:27 JST 2015 +++
Initial lambda[j=17]: {-0.871756060640207, -0.8495287747458757, -0.3964594524802063}
(Initial BLEU[j=17]: 0.8528958785506814)

Final lambda[j=17]: {-0.871756060640207, 2975805.4110704865, 41.27685941009545}
(Final BLEU[j=17]: 0.8628416930896428)

+++ Optimization of lambda[j=18] starting @ Tue Oct 27 10:46:27 JST 2015 +++
Initial lambda[j=18]: {-0.4629095033959656, -0.10291979788243277, -0.8706362780408492}
(Initial BLEU[j=18]: 0.851370119528461)

Final lambda[j=18]: {-0.4629095033959656, 1580795.269521917, 21.92425677291235}
(Final BLEU[j=18]: 0.8628416930896428)

+++ Optimization of lambda[j=19] starting @ Tue Oct 27 10:46:27 JST 2015 +++
Initial lambda[j=19]: {-0.8834296944416113, 0.3073471861931083, -0.08254985860243691}
(Initial BLEU[j=19]: 0.8528958785506814)

Final lambda[j=19]: {-0.8834296944416113, 3015355.1107391445, 41.826736794869426}
(Final BLEU[j=19]: 0.8628416930896428)

+++ Optimization of lambda[j=20] starting @ Tue Oct 27 10:46:27 JST 2015 +++
Initial lambda[j=20]: {-0.2916952155637593, -0.8022503514522665, -0.33852947919372234}
(Initial BLEU[j=20]: 0.851370119528461)

Final lambda[j=20]: {-0.2916952155637593, 995916.6540226294, 13.813347678433752}
(Final BLEU[j=20]: 0.8628416930896428)

Best final lambda is lambda[j=1] (BLEU: 0.8628).

---  Z-MERT iteration #1 ending @ Tue Oct 27 10:46:27 JST 2015  ---

Next iteration will decode with lambda: {-0.1606425610120449, 548390.8096473007, 7.606520941952468}

--- Starting Z-MERT iteration #2 @ Tue Oct 27 10:46:27 JST 2015 ---
Redecoding using weight vector {-0.1606425610120449, 548390.8096473007, 7.606520941952468}
Running decoder...
...finished decoding @ Tue Oct 27 10:46:27 JST 2015
Reading candidate translations from iterations 1-2
(and computing BLEU sufficient statistics for previously unseen candidates)
  Progress: 
Warning: attempt to delete ZMERT.temp.stats.unknown was unsuccessful!
Warning: attempt to delete ZMERT.temp.stats.mergedKnown was unsuccessful!
Processed 52 distinct candidates (about 6 per sentence):
newCandidatesAdded[it=1] = 52 (about 6 per sentence)
newCandidatesAdded[it=2] = 0 (about 0 per sentence)

No new candidates added in this iteration; exiting Z-MERT.

---  Z-MERT iteration #2 ending @ Tue Oct 27 10:46:27 JST 2015  ---


----------------------------------------------------
Z-MERT run ended @ Tue Oct 27 10:46:27 JST 2015
----------------------------------------------------

FINAL lambda: {-0.1606425610120449, 548390.8096473007, 7.606520941952468} (BLEU: 0.8628416930896428)

(OP Lamda) : [-0.1606425610120449,548390.8096473007,7.606520941952468]
Number of candidates => 3
tmpDirPrefix: ZMERT.
Processed the following args array:
  -r ref -rps 4 -p params.txt -m BLEU 4 closest -maxIt 15 -ipi 20 -cmd SDecoder_cmd.bat -decOut nbest.out -dcfg SDecoder_cfg.txt -N 10 -v 1 -seed 12341234 

----------------------------------------------------
Initializing...
----------------------------------------------------

Random number generator initialized using seed: 12341234

$$ decoderCommand: java SimpleDecoder SDecoder_cfg.txt nbest.out
Number of sentences: 3
Number of documents: 1
Optimizing BLEU
docSubsetInfo: {0, 1, 1, 1, 1, 0, 0}
Number of features: 3
Feature names: {"RD","Word Model","Headword Model"}

c    Default value	Optimizable?	Crit. val. range	Rand. val. range
1     0.1000		 Yes		 [-Infinity,Infinity]		 [-1.0,1.0]
2     0.2000		 Yes		 [-Infinity,Infinity]		 [-1.0,1.0]
3     -0.1000		 Yes		 [-Infinity,Infinity]		 [-1.0,1.0]

Weight vector normalization method: none.

----------------------------------------------------

----------------------------------------------------
Z-MERT run started @ Tue Oct 27 10:46:27 JST 2015
----------------------------------------------------

Initial lambda[]: {0.1, 0.2, -0.1}

--- Starting Z-MERT iteration #1 @ Tue Oct 27 10:46:27 JST 2015 ---
Decoding using initial weight vector {0.1, 0.2, -0.1}
Running decoder...
...finished decoding @ Tue Oct 27 10:46:27 JST 2015
Reading candidate translations from iterations 1-1
(and computing BLEU sufficient statistics for previously unseen candidates)
  Progress: Size: 4

Warning: attempt to delete ZMERT.temp.stats.unknown was unsuccessful!
Warning: attempt to delete ZMERT.temp.stats.mergedKnown was unsuccessful!
Processed 4 distinct candidates (about 1 per sentence):
newCandidatesAdded[it=1] = 4 (about 1 per sentence)

+++ Optimization of lambda[j=1] starting @ Tue Oct 27 10:46:28 JST 2015 +++
Initial lambda[j=1]: {0.1, 0.2, -0.1}
(Initial BLEU[j=1]: 0.9037664163933351)

Final lambda[j=1]: {0.1, 0.2, -0.1}
(Final BLEU[j=1]: 0.9037664163933351)

+++ Optimization of lambda[j=2] starting @ Tue Oct 27 10:46:28 JST 2015 +++
Initial lambda[j=2]: {-0.017230818545013626, -0.6577977590753961, 0.46016061237234096}
(Initial BLEU[j=2]: 0.8830710861889355)

Final lambda[j=2]: {0.05543437910298102, -0.6577977590753961, 0.46016061237234096}
(Final BLEU[j=2]: 0.9037664163933351)

+++ Optimization of lambda[j=3] starting @ Tue Oct 27 10:46:28 JST 2015 +++
Initial lambda[j=3]: {-0.5203200954373215, 0.09518077619965482, -0.059473491599185246}
(Initial BLEU[j=3]: 0.8830710861889355)

Final lambda[j=3]: {0.04929764744379454, 0.09518077619965482, -0.059473491599185246}
(Final BLEU[j=3]: 0.9037664163933351)

+++ Optimization of lambda[j=4] starting @ Tue Oct 27 10:46:28 JST 2015 +++
Initial lambda[j=4]: {-0.6919952429797738, -0.8743327758402839, -0.6393613928095458}
(Initial BLEU[j=4]: 0.8830710861889355)

Final lambda[j=4]: {0.04244681342709934, -0.8743327758402839, -0.6393613928095458}
(Final BLEU[j=4]: 0.9037664163933351)

+++ Optimization of lambda[j=5] starting @ Tue Oct 27 10:46:28 JST 2015 +++
Initial lambda[j=5]: {0.7737957524668755, 0.6493837878144797, -0.5778133794884044}
(Initial BLEU[j=5]: 0.9037664163933351)

Final lambda[j=5]: {0.7737957524668755, 0.6493837878144797, -0.5778133794884044}
(Final BLEU[j=5]: 0.9037664163933351)

+++ Optimization of lambda[j=6] starting @ Tue Oct 27 10:46:28 JST 2015 +++
Initial lambda[j=6]: {0.2815800420089276, 0.15636862697411513, 0.6539535776649275}
(Initial BLEU[j=6]: 0.9037664163933351)

Final lambda[j=6]: {0.2815800420089276, 0.15636862697411513, 0.6539535776649275}
(Final BLEU[j=6]: 0.9037664163933351)

+++ Optimization of lambda[j=7] starting @ Tue Oct 27 10:46:28 JST 2015 +++
Initial lambda[j=7]: {0.32669861662639876, 0.009245077311689887, -0.9330111163449395}
(Initial BLEU[j=7]: 0.9037664163933351)

Final lambda[j=7]: {0.32669861662639876, 0.009245077311689887, -0.9330111163449395}
(Final BLEU[j=7]: 0.9037664163933351)

+++ Optimization of lambda[j=8] starting @ Tue Oct 27 10:46:28 JST 2015 +++
Initial lambda[j=8]: {0.6515944996339995, 0.08804197789590318, 0.9795005730080566}
(Initial BLEU[j=8]: 0.9037664163933351)

Final lambda[j=8]: {0.6515944996339995, 0.08804197789590318, 0.9795005730080566}
(Final BLEU[j=8]: 0.9037664163933351)

+++ Optimization of lambda[j=9] starting @ Tue Oct 27 10:46:28 JST 2015 +++
Initial lambda[j=9]: {-0.004553671263154424, 0.8593774528720801, -0.01427276865927607}
(Initial BLEU[j=9]: 0.8830710861889355)

Final lambda[j=9]: {0.04983261141547929, 0.8593774528720801, -0.01427276865927607}
(Final BLEU[j=9]: 0.9037664163933351)

+++ Optimization of lambda[j=10] starting @ Tue Oct 27 10:46:28 JST 2015 +++
Initial lambda[j=10]: {0.5053771649119221, -0.5713556223455967, -0.8739358729264859}
(Initial BLEU[j=10]: 0.9037664163933351)

Final lambda[j=10]: {0.5053771649119221, -0.5713556223455967, -0.8739358729264859}
(Final BLEU[j=10]: 0.9037664163933351)

+++ Optimization of lambda[j=11] starting @ Tue Oct 27 10:46:28 JST 2015 +++
Initial lambda[j=11]: {0.7980226618452084, -0.399205792984231, -0.5477913765324938}
(Initial BLEU[j=11]: 0.9037664163933351)

Final lambda[j=11]: {0.7980226618452084, -0.399205792984231, -0.5477913765324938}
(Final BLEU[j=11]: 0.9037664163933351)

+++ Optimization of lambda[j=12] starting @ Tue Oct 27 10:46:28 JST 2015 +++
Initial lambda[j=12]: {0.594593012768021, -0.2974935383022126, 0.3275255626321376}
(Initial BLEU[j=12]: 0.9037664163933351)

Final lambda[j=12]: {0.594593012768021, -0.2974935383022126, 0.3275255626321376}
(Final BLEU[j=12]: 0.9037664163933351)

+++ Optimization of lambda[j=13] starting @ Tue Oct 27 10:46:28 JST 2015 +++
Initial lambda[j=13]: {-0.21052430917292875, 0.981831267676273, -0.8102868749874037}
(Initial BLEU[j=13]: 0.8830710861889355)

Final lambda[j=13]: {0.04043047339067127, 0.981831267676273, -0.8102868749874037}
(Final BLEU[j=13]: 0.9037664163933351)

+++ Optimization of lambda[j=14] starting @ Tue Oct 27 10:46:28 JST 2015 +++
Initial lambda[j=14]: {0.03753776574773382, 0.00790321507749736, 0.03620028521108054}
(Initial BLEU[j=14]: 0.9037664163933351)

Final lambda[j=14]: {0.03753776574773382, 0.00790321507749736, 0.03620028521108054}
(Final BLEU[j=14]: 0.9037664163933351)

+++ Optimization of lambda[j=15] starting @ Tue Oct 27 10:46:28 JST 2015 +++
Initial lambda[j=15]: {0.009954244141451962, 0.02541025170060851, 0.593645578752771}
(Initial BLEU[j=15]: 0.9037664163933351)

Final lambda[j=15]: {0.009954244141451962, 0.02541025170060851, 0.593645578752771}
(Final BLEU[j=15]: 0.9037664163933351)

+++ Optimization of lambda[j=16] starting @ Tue Oct 27 10:46:28 JST 2015 +++
Initial lambda[j=16]: {0.6576106932759427, 0.17534745529356877, -0.6893751690924723}
(Initial BLEU[j=16]: 0.9037664163933351)

Final lambda[j=16]: {0.6576106932759427, 0.17534745529356877, -0.6893751690924723}
(Final BLEU[j=16]: 0.9037664163933351)

+++ Optimization of lambda[j=17] starting @ Tue Oct 27 10:46:28 JST 2015 +++
Initial lambda[j=17]: {-0.871756060640207, -0.8495287747458757, -0.3964594524802063}
(Initial BLEU[j=17]: 0.8830710861889355)

Final lambda[j=17]: {0.04531594164564713, -0.8495287747458757, -0.3964594524802063}
(Final BLEU[j=17]: 0.9037664163933351)

+++ Optimization of lambda[j=18] starting @ Tue Oct 27 10:46:28 JST 2015 +++
Initial lambda[j=18]: {-0.4629095033959656, -0.10291979788243277, -0.8706362780408492}
(Initial BLEU[j=18]: 0.8830710861889355)

Final lambda[j=18]: {0.03971613049312114, -0.10291979788243277, -0.8706362780408492}
(Final BLEU[j=18]: 0.9037664163933351)

+++ Optimization of lambda[j=19] starting @ Tue Oct 27 10:46:28 JST 2015 +++
Initial lambda[j=19]: {-0.8834296944416113, 0.3073471861931083, -0.08254985860243691}
(Initial BLEU[j=19]: 0.8830710861889355)

Final lambda[j=19]: {0.04902537114995345, 0.3073471861931083, -0.08254985860243691}
(Final BLEU[j=19]: 0.9037664163933351)

+++ Optimization of lambda[j=20] starting @ Tue Oct 27 10:46:28 JST 2015 +++
Initial lambda[j=20]: {-0.2916952155637593, -0.8022503514522665, -0.33852947919372234}
(Initial BLEU[j=20]: 0.8830710861889355)

Final lambda[j=20]: {0.04600026109615006, -0.8022503514522665, -0.33852947919372234}
(Final BLEU[j=20]: 0.9037664163933351)

Best final lambda is lambda[j=1] (BLEU: 0.9038).

---  Z-MERT iteration #1 ending @ Tue Oct 27 10:46:28 JST 2015  ---

No parameter value changed in this iteration; exiting Z-MERT.


----------------------------------------------------
Z-MERT run ended @ Tue Oct 27 10:46:28 JST 2015
----------------------------------------------------

FINAL lambda: {0.1, 0.2, -0.1} (BLEU: 0.9037664163933351)

(OP Lamda) : [0.1,0.2,-0.1]
Number of candidates => 1
tmpDirPrefix: ZMERT.
Processed the following args array:
  -r ref -rps 4 -p params.txt -m BLEU 4 closest -maxIt 15 -ipi 20 -cmd SDecoder_cmd.bat -decOut nbest.out -dcfg SDecoder_cfg.txt -N 10 -v 1 -seed 12341234 

----------------------------------------------------
Initializing...
----------------------------------------------------

Random number generator initialized using seed: 12341234

$$ decoderCommand: java SimpleDecoder SDecoder_cfg.txt nbest.out
Number of sentences: 1
Number of documents: 1
Optimizing BLEU
docSubsetInfo: {0, 1, 1, 1, 1, 0, 0}
Number of features: 3
Feature names: {"RD","Word Model","Headword Model"}

c    Default value	Optimizable?	Crit. val. range	Rand. val. range
1     0.1000		 Yes		 [-Infinity,Infinity]		 [-1.0,1.0]
2     0.2000		 Yes		 [-Infinity,Infinity]		 [-1.0,1.0]
3     -0.1000		 Yes		 [-Infinity,Infinity]		 [-1.0,1.0]

Weight vector normalization method: none.

----------------------------------------------------

----------------------------------------------------
Z-MERT run started @ Tue Oct 27 10:46:28 JST 2015
----------------------------------------------------

Initial lambda[]: {0.1, 0.2, -0.1}

--- Starting Z-MERT iteration #1 @ Tue Oct 27 10:46:28 JST 2015 ---
Decoding using initial weight vector {0.1, 0.2, -0.1}
Running decoder...
...finished decoding @ Tue Oct 27 10:46:28 JST 2015
Reading candidate translations from iterations 1-1
(and computing BLEU sufficient statistics for previously unseen candidates)
  Progress: Size: 2

Warning: attempt to delete ZMERT.temp.stats.unknown was unsuccessful!
Warning: attempt to delete ZMERT.temp.stats.mergedKnown was unsuccessful!
Processed 2 distinct candidates (about 2 per sentence):
newCandidatesAdded[it=1] = 2 (about 2 per sentence)

+++ Optimization of lambda[j=1] starting @ Tue Oct 27 10:46:28 JST 2015 +++
Initial lambda[j=1]: {0.1, 0.2, -0.1}
(Initial BLEU[j=1]: 0.9426092134060646)

Final lambda[j=1]: {0.1, 0.2, -0.1}
(Final BLEU[j=1]: 0.9426092134060646)

+++ Optimization of lambda[j=2] starting @ Tue Oct 27 10:46:28 JST 2015 +++
Initial lambda[j=2]: {-0.017230818545013626, -0.6577977590753961, 0.46016061237234096}
(Initial BLEU[j=2]: 0.8916809066702428)

Final lambda[j=2]: {0.03518185779521722, -0.6577977590753961, 0.46016061237234096}
(Final BLEU[j=2]: 0.9426092134060646)

+++ Optimization of lambda[j=3] starting @ Tue Oct 27 10:46:28 JST 2015 +++
Initial lambda[j=3]: {-0.5203200954373215, 0.09518077619965482, -0.059473491599185246}
(Initial BLEU[j=3]: 0.8916809066702428)

Final lambda[j=3]: {0.051915181622963644, 0.09518077619965482, -0.059473491599185246}
(Final BLEU[j=3]: 0.9426092134060646)

+++ Optimization of lambda[j=4] starting @ Tue Oct 27 10:46:28 JST 2015 +++
Initial lambda[j=4]: {-0.6919952429797738, -0.8743327758402839, -0.6393613928095458}
(Initial BLEU[j=4]: 0.8916809066702428)

Final lambda[j=4]: {0.07058706749076554, -0.8743327758402839, -0.6393613928095458}
(Final BLEU[j=4]: 0.9426092134060646)

+++ Optimization of lambda[j=5] starting @ Tue Oct 27 10:46:28 JST 2015 +++
Initial lambda[j=5]: {0.7737957524668755, 0.6493837878144797, -0.5778133794884044}
(Initial BLEU[j=5]: 0.9426092134060646)

Final lambda[j=5]: {0.7737957524668755, 0.6493837878144797, -0.5778133794884044}
(Final BLEU[j=5]: 0.9426092134060646)

+++ Optimization of lambda[j=6] starting @ Tue Oct 27 10:46:28 JST 2015 +++
Initial lambda[j=6]: {0.2815800420089276, 0.15636862697411513, 0.6539535776649275}
(Initial BLEU[j=6]: 0.9426092134060646)

Final lambda[j=6]: {0.2815800420089276, 0.15636862697411513, 0.6539535776649275}
(Final BLEU[j=6]: 0.9426092134060646)

+++ Optimization of lambda[j=7] starting @ Tue Oct 27 10:46:28 JST 2015 +++
Initial lambda[j=7]: {0.32669861662639876, 0.009245077311689887, -0.9330111163449395}
(Initial BLEU[j=7]: 0.9426092134060646)

Final lambda[j=7]: {0.32669861662639876, 0.009245077311689887, -0.9330111163449395}
(Final BLEU[j=7]: 0.9426092134060646)

+++ Optimization of lambda[j=8] starting @ Tue Oct 27 10:46:28 JST 2015 +++
Initial lambda[j=8]: {0.6515944996339995, 0.08804197789590318, 0.9795005730080566}
(Initial BLEU[j=8]: 0.9426092134060646)

Final lambda[j=8]: {0.6515944996339995, 0.08804197789590318, 0.9795005730080566}
(Final BLEU[j=8]: 0.9426092134060646)

+++ Optimization of lambda[j=9] starting @ Tue Oct 27 10:46:28 JST 2015 +++
Initial lambda[j=9]: {-0.004553671263154424, 0.8593774528720801, -0.01427276865927607}
(Initial BLEU[j=9]: 0.8916809066702428)

Final lambda[j=9]: {0.05046041914463138, 0.8593774528720801, -0.01427276865927607}
(Final BLEU[j=9]: 0.9426092134060646)

+++ Optimization of lambda[j=10] starting @ Tue Oct 27 10:46:28 JST 2015 +++
Initial lambda[j=10]: {0.5053771649119221, -0.5713556223455967, -0.8739358729264859}
(Initial BLEU[j=10]: 0.9426092134060646)

Final lambda[j=10]: {0.5053771649119221, -0.5713556223455967, -0.8739358729264859}
(Final BLEU[j=10]: 0.9426092134060646)

+++ Optimization of lambda[j=11] starting @ Tue Oct 27 10:46:28 JST 2015 +++
Initial lambda[j=11]: {0.7980226618452084, -0.399205792984231, -0.5477913765324938}
(Initial BLEU[j=11]: 0.9426092134060646)

Final lambda[j=11]: {0.7980226618452084, -0.399205792984231, -0.5477913765324938}
(Final BLEU[j=11]: 0.9426092134060646)

+++ Optimization of lambda[j=12] starting @ Tue Oct 27 10:46:28 JST 2015 +++
Initial lambda[j=12]: {0.594593012768021, -0.2974935383022126, 0.3275255626321376}
(Initial BLEU[j=12]: 0.9426092134060646)

Final lambda[j=12]: {0.594593012768021, -0.2974935383022126, 0.3275255626321376}
(Final BLEU[j=12]: 0.9426092134060646)

+++ Optimization of lambda[j=13] starting @ Tue Oct 27 10:46:28 JST 2015 +++
Initial lambda[j=13]: {-0.21052430917292875, 0.981831267676273, -0.8102868749874037}
(Initial BLEU[j=13]: 0.8916809066702428)

Final lambda[j=13]: {0.07609277677107433, 0.981831267676273, -0.8102868749874037}
(Final BLEU[j=13]: 0.9426092134060646)

+++ Optimization of lambda[j=14] starting @ Tue Oct 27 10:46:28 JST 2015 +++
Initial lambda[j=14]: {0.03753776574773382, 0.00790321507749736, 0.03620028521108054}
(Initial BLEU[j=14]: 0.9426092134060646)

Final lambda[j=14]: {0.03753776574773382, 0.00790321507749736, 0.03620028521108054}
(Final BLEU[j=14]: 0.9426092134060646)

+++ Optimization of lambda[j=15] starting @ Tue Oct 27 10:46:28 JST 2015 +++
Initial lambda[j=15]: {0.009954244141451962, 0.02541025170060851, 0.593645578752771}
(Initial BLEU[j=15]: 0.9426092134060646)

Final lambda[j=15]: {0.009954244141451962, 0.02541025170060851, 0.593645578752771}
(Final BLEU[j=15]: 0.9426092134060646)

+++ Optimization of lambda[j=16] starting @ Tue Oct 27 10:46:28 JST 2015 +++
Initial lambda[j=16]: {0.6576106932759427, 0.17534745529356877, -0.6893751690924723}
(Initial BLEU[j=16]: 0.9426092134060646)

Final lambda[j=16]: {0.6576106932759427, 0.17534745529356877, -0.6893751690924723}
(Final BLEU[j=16]: 0.9426092134060646)

+++ Optimization of lambda[j=17] starting @ Tue Oct 27 10:46:28 JST 2015 +++
Initial lambda[j=17]: {-0.871756060640207, -0.8495287747458757, -0.3964594524802063}
(Initial BLEU[j=17]: 0.8916809066702428)

Final lambda[j=17]: {0.06276547008940801, -0.8495287747458757, -0.3964594524802063}
(Final BLEU[j=17]: 0.9426092134060646)

+++ Optimization of lambda[j=18] starting @ Tue Oct 27 10:46:28 JST 2015 +++
Initial lambda[j=18]: {-0.4629095033959656, -0.10291979788243277, -0.8706362780408492}
(Initial BLEU[j=18]: 0.8916809066702428)

Final lambda[j=18]: {0.07803502998245095, -0.10291979788243277, -0.8706362780408492}
(Final BLEU[j=18]: 0.9426092134060646)

+++ Optimization of lambda[j=19] starting @ Tue Oct 27 10:46:28 JST 2015 +++
Initial lambda[j=19]: {-0.8834296944416113, 0.3073471861931083, -0.08254985860243691}
(Initial BLEU[j=19]: 0.8916809066702428)

Final lambda[j=19]: {0.05265846142239927, 0.3073471861931083, -0.08254985860243691}
(Final BLEU[j=19]: 0.9426092134060646)

+++ Optimization of lambda[j=20] starting @ Tue Oct 27 10:46:28 JST 2015 +++
Initial lambda[j=20]: {-0.2916952155637593, -0.8022503514522665, -0.33852947919372234}
(Initial BLEU[j=20]: 0.8916809066702428)

Final lambda[j=20]: {0.06090012773374498, -0.8022503514522665, -0.33852947919372234}
(Final BLEU[j=20]: 0.9426092134060646)

Best final lambda is lambda[j=1] (BLEU: 0.9426).

---  Z-MERT iteration #1 ending @ Tue Oct 27 10:46:28 JST 2015  ---

No parameter value changed in this iteration; exiting Z-MERT.


----------------------------------------------------
Z-MERT run ended @ Tue Oct 27 10:46:28 JST 2015
----------------------------------------------------

FINAL lambda: {0.1, 0.2, -0.1} (BLEU: 0.9426092134060646)

(OP Lamda) : [0.1,0.2,-0.1]
Number of candidates => 0
Processing 526 sentences...

Corpus level score:
 See data/results/bleu_results.txt
